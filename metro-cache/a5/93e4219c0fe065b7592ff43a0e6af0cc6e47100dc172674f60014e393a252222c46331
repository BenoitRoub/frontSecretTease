{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Screens/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 1,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var NewList = [{\n    value: 15,\n    text: \"Felix\"\n  }, {\n    value: 20,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen() {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(List.sort(function (list, _list) {\n      return list.value < _list.value;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var _useState7 = (0, _react.useState)(true),\n        _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n        changed = _useState8[0],\n        setChanged = _useState8[1];\n\n    var height = 50;\n\n    var _useState9 = (0, _react.useState)(0),\n        _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n        value = _useState10[0],\n        setValue = _useState10[1];\n\n    animatedValue.addListener(function (_ref) {\n      var value = _ref.value;\n      setValue(value);\n    });\n\n    function startScaleAnimation() {\n      var newTransitionList = transitionList;\n      setChanged(false);\n      console.log(changed);\n\n      var _loop = function _loop(i) {\n        if (transitionList[i].value < NewList.find(function (list) {\n          return list.text === transitionList[i].text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          setChanged(true);\n        }\n      };\n\n      for (var i in transitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        setTransitionList(newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          return list.value < _list.value;\n        }));\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          timing: 12000\n        }).start(function () {\n          if (changed) {\n            startScaleAnimation();\n          }\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [height * prevIndex, height * index]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [height * index, height * prevIndex]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      }\n    }, transitionList.map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 320,\n          height: height,\n          position: \"absolute\",\n          top: height * list.prevIndex || height * index,\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        }\n      }, console.log(list, index), _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      onPress: function onPress() {\n        return startScaleAnimation();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      }\n    }, \"start \")));\n  }\n\n  _s(ConnexionScreen, \"eEtkQYV+ht9/h9HY7/ApEreU/8k=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":199,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,13],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,13],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,13],[40,4,18,0],[41,0,23,0],[41,6,23,6,"NewList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,13,24,1],[43,0,24,14,"text"],[43,4,24,14,"text"],[43,8,24,18],[43,10,24,20],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,13,25,1],[46,0,25,14,"text"],[46,4,25,14,"text"],[46,8,25,18],[46,10,25,20],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"ConnexionScreen"],[52,26,29,15],[52,29,29,42],[53,0,29,42],[55,0,29,42],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,42],[56,0,29,42],[57,0,29,42],[57,8,30,8,"animatedValue"],[57,21,29,42],[59,0,29,42],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,42],[60,0,29,42],[61,0,29,42],[61,8,31,8,"animatedTranslateValue"],[61,30,29,42],[63,0,29,42],[63,21,32,45],[63,42,33,2,"List"],[63,46,33,6],[63,47,33,7,"sort"],[63,51,33,2],[63,52,33,12],[63,62,33,13,"list"],[63,66,33,12],[63,68,33,19,"_list"],[63,73,33,12],[64,0,33,12],[64,13,33,29,"list"],[64,17,33,33],[64,18,33,34,"value"],[64,23,33,29],[64,26,33,42,"_list"],[64,31,33,47],[64,32,33,48,"value"],[64,37,33,12],[65,0,33,12],[65,5,33,2],[65,6,32,45],[65,7,29,42],[66,0,29,42],[67,0,29,42],[67,8,32,8,"transitionList"],[67,22,29,42],[68,0,29,42],[68,8,32,24,"setTransitionList"],[68,25,29,42],[70,0,29,42],[70,21,35,31],[70,42,35,40],[70,46,35,31],[70,47,29,42],[71,0,29,42],[72,0,29,42],[72,8,35,8,"changed"],[72,15,29,42],[73,0,29,42],[73,8,35,17,"setChanged"],[73,18,29,42],[75,0,37,1],[75,8,37,7,"height"],[75,14,37,13],[75,17,37,16],[75,19,37,1],[77,0,29,42],[77,21,38,27],[77,42,38,36],[77,43,38,27],[77,44,29,42],[78,0,29,42],[79,0,29,42],[79,8,38,8,"value"],[79,13,29,42],[80,0,29,42],[80,8,38,15,"setValue"],[80,16,29,42],[82,0,39,1,"animatedValue"],[82,4,39,1,"animatedValue"],[82,17,39,14],[82,18,39,15,"addListener"],[82,29,39,1],[82,30,39,27],[82,46,39,42],[83,0,39,42],[83,10,39,30,"value"],[83,15,39,42],[83,23,39,30,"value"],[83,28,39,42],[84,0,40,2,"setValue"],[84,6,40,2,"setValue"],[84,14,40,10],[84,15,40,11,"value"],[84,20,40,10],[84,21,40,2],[85,0,41,2],[85,5,39,1],[87,0,43,1],[87,13,43,10,"startScaleAnimation"],[87,32,43,1],[87,35,43,32],[88,0,44,2],[88,10,44,6,"newTransitionList"],[88,27,44,23],[88,30,44,26,"transitionList"],[88,44,44,2],[89,0,45,2,"setChanged"],[89,6,45,2,"setChanged"],[89,16,45,12],[89,17,45,13],[89,22,45,12],[89,23,45,2],[90,0,46,2,"console"],[90,6,46,2,"console"],[90,13,46,9],[90,14,46,10,"log"],[90,17,46,2],[90,18,46,14,"changed"],[90,25,46,2],[92,0,43,32],[92,33,47,13,"i"],[92,34,43,32],[93,0,48,3],[93,12,49,4,"transitionList"],[93,26,49,18],[93,27,49,19,"i"],[93,28,49,18],[93,29,49,4],[93,30,49,22,"value"],[93,35,49,4],[93,38,50,4,"NewList"],[93,45,50,11],[93,46,50,12,"find"],[93,50,50,4],[93,51,50,17],[93,61,50,17,"list"],[93,65,50,21],[94,0,50,21],[94,17,50,25,"list"],[94,21,50,29],[94,22,50,30,"text"],[94,26,50,25],[94,31,50,39,"transitionList"],[94,45,50,53],[94,46,50,54,"i"],[94,47,50,53],[94,48,50,39],[94,49,50,57,"text"],[94,53,50,21],[95,0,50,21],[95,9,50,4],[95,11,50,63,"value"],[95,16,48,3],[95,18,51,5],[96,0,52,4,"newTransitionList"],[96,10,52,4,"newTransitionList"],[96,27,52,21],[96,28,52,22,"i"],[96,29,52,21],[96,30,52,4],[96,31,52,25,"value"],[96,36,52,4],[96,40,52,34],[96,41,52,4],[97,0,53,4,"setChanged"],[97,10,53,4,"setChanged"],[97,20,53,14],[97,21,53,15],[97,25,53,14],[97,26,53,4],[98,0,54,4],[99,0,43,32],[101,0,47,2],[101,11,47,7],[101,15,47,13,"i"],[101,16,47,2],[101,20,47,18,"transitionList"],[101,34,47,2],[101,36,47,34],[102,0,47,34],[102,14,47,13,"i"],[102,15,47,34],[103,0,55,3],[105,0,56,2],[105,10,56,6,"changed"],[105,17,56,2],[105,19,56,15],[106,0,57,3,"setTransitionList"],[106,8,57,3,"setTransitionList"],[106,25,57,20],[106,26,58,4,"newTransitionList"],[106,43,58,21],[106,44,59,6,"map"],[106,47,58,4],[106,48,59,10],[106,58,59,11,"list"],[106,62,59,10],[106,64,59,17,"index"],[106,69,59,10],[107,0,59,10],[107,35,59,33,"list"],[107,39,59,10],[108,0,59,39,"prevIndex"],[108,12,59,39,"prevIndex"],[108,21,59,48],[108,23,59,50,"index"],[109,0,59,10],[110,0,59,10],[110,9,58,4],[110,11,60,6,"sort"],[110,15,58,4],[110,16,60,11],[110,26,60,12,"list"],[110,30,60,11],[110,32,60,18,"_list"],[110,37,60,11],[111,0,60,11],[111,17,60,28,"list"],[111,21,60,32],[111,22,60,33,"value"],[111,27,60,28],[111,30,60,41,"_list"],[111,35,60,46],[111,36,60,47,"value"],[111,41,60,11],[112,0,60,11],[112,9,58,4],[112,10,57,20],[112,11,57,3],[114,0,62,3,"Animated"],[114,30,62,12,"timing"],[114,36,62,3],[114,37,62,19,"animatedTranslateValue"],[114,59,62,3],[114,61,62,43],[115,0,63,4,"toValue"],[115,10,63,4,"toValue"],[115,17,63,11],[115,19,63,13],[115,20,62,43],[116,0,64,4,"timing"],[116,10,64,4,"timing"],[116,16,64,10],[116,18,64,12],[117,0,62,43],[117,9,62,3],[117,11,65,6,"start"],[117,16,62,3],[117,17,65,12],[117,29,65,18],[118,0,66,4],[118,14,66,8,"changed"],[118,21,66,4],[118,23,66,17],[119,0,67,5,"startScaleAnimation"],[119,12,67,5,"startScaleAnimation"],[119,31,67,24],[120,0,68,5],[121,0,69,4],[121,9,62,3],[122,0,70,3],[123,0,71,2],[125,0,73,1],[125,13,73,10,"getTranslation"],[125,27,73,1],[125,28,73,25,"index"],[125,33,73,1],[125,35,73,32,"prevIndex"],[125,44,73,1],[125,46,73,43],[126,0,74,2],[126,10,74,6,"index"],[126,15,74,11],[126,18,74,14,"prevIndex"],[126,27,74,2],[126,29,74,25],[127,0,75,3],[127,15,75,10],[127,16,76,4],[128,0,77,5,"translateY"],[128,10,77,5,"translateY"],[128,20,77,15],[128,22,77,17,"animatedTranslateValue"],[128,44,77,39],[128,45,77,40,"interpolate"],[128,56,77,17],[128,57,77,52],[129,0,78,6,"inputRange"],[129,12,78,6,"inputRange"],[129,22,78,16],[129,24,78,18],[129,25,78,19],[129,26,78,18],[129,28,78,22],[129,29,78,18],[129,30,77,52],[130,0,79,6,"outputRange"],[130,12,79,6,"outputRange"],[130,23,79,17],[130,25,79,19],[130,26,79,20,"height"],[130,32,79,26],[130,35,79,29,"prevIndex"],[130,44,79,19],[130,46,79,40,"height"],[130,52,79,46],[130,55,79,49,"index"],[130,60,79,19],[131,0,77,52],[131,11,77,17],[132,0,76,4],[132,9,75,10],[132,10,75,3],[133,0,83,3],[135,0,84,2],[135,10,84,6,"index"],[135,15,84,11],[135,18,84,14,"prevIndex"],[135,27,84,2],[135,29,84,25],[136,0,85,3],[136,15,85,10],[136,16,86,4],[137,0,87,5,"translateY"],[137,10,87,5,"translateY"],[137,20,87,15],[137,22,87,17,"animatedTranslateValue"],[137,44,87,39],[137,45,87,40,"interpolate"],[137,56,87,17],[137,57,87,52],[138,0,88,6,"inputRange"],[138,12,88,6,"inputRange"],[138,22,88,16],[138,24,88,18],[138,25,88,19],[138,26,88,18],[138,28,88,22],[138,29,88,18],[138,30,87,52],[139,0,89,6,"outputRange"],[139,12,89,6,"outputRange"],[139,23,89,17],[139,25,89,19],[139,26,89,20,"height"],[139,32,89,26],[139,35,89,29,"index"],[139,40,89,19],[139,42,89,36,"height"],[139,48,89,42],[139,51,89,45,"prevIndex"],[139,60,89,19],[140,0,87,52],[140,11,87,17],[141,0,86,4],[141,9,85,10],[141,10,85,3],[142,0,93,3],[144,0,94,2],[145,0,95,2],[147,0,97,1],[147,11,98,2],[147,40,98,3],[147,57,98,2],[148,0,98,8],[148,6,98,8],[148,11,98,13],[148,13,98,15],[149,0,98,17,"marginTop"],[149,8,98,17,"marginTop"],[149,17,98,26],[149,19,98,28],[150,0,98,15],[150,7,98,2],[151,0,98,2],[152,0,98,2],[153,0,98,2],[154,0,98,2],[155,0,98,2],[155,7,99,4,"transitionList"],[155,21,99,18],[155,22,99,19,"map"],[155,25,99,4],[155,26,99,23],[155,36,99,24,"list"],[155,40,99,23],[155,42,99,30,"index"],[155,47,99,23],[156,0,99,23],[156,13,100,4],[156,42,100,5],[156,63,100,4],[156,64,100,14],[156,68,100,4],[157,0,101,5],[157,8,101,5],[157,11,101,8],[157,13,101,10,"index"],[157,18,100,4],[158,0,102,5],[158,8,102,5],[158,13,102,10],[158,15,102,12],[159,0,103,6,"width"],[159,10,103,6,"width"],[159,15,103,11],[159,17,103,13],[159,20,102,12],[160,0,104,6,"height"],[160,10,104,6,"height"],[160,16,104,12],[160,18,104,14,"height"],[160,24,102,12],[161,0,105,6,"position"],[161,10,105,6,"position"],[161,18,105,14],[161,20,105,16],[161,30,102,12],[162,0,106,6,"top"],[162,10,106,6,"top"],[162,13,106,9],[162,15,106,11,"height"],[162,21,106,17],[162,24,106,20,"list"],[162,28,106,24],[162,29,106,25,"prevIndex"],[162,38,106,11],[162,42,106,38,"height"],[162,48,106,44],[162,51,106,47,"index"],[162,56,102,12],[163,0,107,6,"backgroundColor"],[163,10,107,6,"backgroundColor"],[163,25,107,21],[163,27,107,23,"list"],[163,31,107,27],[163,32,107,28,"color"],[163,37,102,12],[164,0,108,6,"transform"],[164,10,108,6,"transform"],[164,19,108,15],[164,21,108,17,"getTranslation"],[164,35,108,31],[164,36,108,32,"index"],[164,41,108,31],[164,43,108,39,"list"],[164,47,108,43],[164,48,108,44,"prevIndex"],[164,57,108,31],[165,0,102,12],[165,9,100,4],[166,0,100,4],[167,0,100,4],[168,0,100,4],[169,0,100,4],[170,0,100,4],[170,9,111,6,"console"],[170,16,111,13],[170,17,111,14,"log"],[170,20,111,6],[170,21,111,18,"list"],[170,25,111,6],[170,27,111,24,"index"],[170,32,111,6],[170,33,100,4],[170,35,112,5],[170,64,112,6],[170,81,112,5],[171,0,112,5],[172,0,112,5],[173,0,112,5],[174,0,112,5],[175,0,112,5],[175,9,113,7,"list"],[175,13,113,11],[175,14,113,12,"text"],[175,18,112,5],[175,25,113,19,"list"],[175,29,113,23],[175,30,113,24,"value"],[175,35,112,5],[175,36,100,4],[175,37,99,23],[176,0,99,23],[176,5,99,4],[176,6,98,2],[176,8,117,3],[176,37,117,4],[176,66,117,3],[177,0,117,21],[177,6,117,21],[177,13,117,28],[177,15,117,30],[178,0,117,30],[178,15,117,36,"startScaleAnimation"],[178,34,117,55],[178,36,117,30],[179,0,117,30],[179,7,117,3],[180,0,117,3],[181,0,117,3],[182,0,117,3],[183,0,117,3],[184,0,117,3],[184,7,118,4],[184,36,118,5],[184,53,118,4],[185,0,118,4],[186,0,118,4],[187,0,118,4],[188,0,118,4],[189,0,118,4],[189,16,117,3],[189,17,98,2],[189,18,97,1],[190,0,122,1],[192,5,29,24,"ConnexionScreen"],[192,20],[194,7,29,24,"ConnexionScreen"],[194,22]],"functionMap":{"names":["<global>","ConnexionScreen","List.sort$argument_0","animatedValue.addListener$argument_0","startScaleAnimation","NewList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;YCI,yCD;2BEM;EFE;CGE;iBCO,4CD;UES,gDF;WGC,yCH;YIK;IJI;EHE;CQE;ERsB;uBSI;ITiB;8BUC,2BV;CDK"}},"type":"js/module"}]}