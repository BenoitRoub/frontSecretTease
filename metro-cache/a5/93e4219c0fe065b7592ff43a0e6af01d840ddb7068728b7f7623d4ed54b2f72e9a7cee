{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Screens/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\"\n  }, {\n    value: 1,\n    text: \"Benoit\"\n  }, {\n    value: 6,\n    text: \"Morgane\"\n  }];\n  var NewList = [{\n    value: 15,\n    text: \"Felix\"\n  }, {\n    value: 20,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen() {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(List.sort(function (list, _list) {\n      return list.value < _list.value;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var _useState7 = (0, _react.useState)(true),\n        _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n        changed = _useState8[0],\n        setChanged = _useState8[1];\n\n    var height = 50;\n\n    var _useState9 = (0, _react.useState)(0),\n        _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n        value = _useState10[0],\n        setValue = _useState10[1];\n\n    animatedValue.addListener(function (_ref) {\n      var value = _ref.value;\n      setValue(value);\n    });\n\n    function startScaleAnimation() {\n      var newTransitionList = transitionList;\n      setChanged(false);\n\n      var _loop = function _loop(i) {\n        console.log(i);\n\n        if (transitionList[i].value < NewList.find(function (list) {\n          return list.text === transitionList[i].text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          setChanged(true);\n        }\n      };\n\n      for (var i in transitionList) {\n        _loop(i);\n      }\n\n      console.log(newTransitionList);\n\n      if (changed) {\n        setTransitionList(newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          return list.value < _list.value;\n        }));\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          timing: 12000\n        }).start(function () {\n          if (changed) {\n            startScaleAnimation();\n          }\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [height * prevIndex, height * index]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [height * index, height * prevIndex]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      }\n    }, transitionList.map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 320,\n          height: height,\n          position: absolute,\n          top: height * list.prevIndex,\n          backgroundColor: \"#253237\",\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        }\n      }, console.log(list, index), _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      onPress: function onPress() {\n        return startScaleAnimation();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      }\n    }, \"start \")));\n  }\n\n  _s(ConnexionScreen, \"eEtkQYV+ht9/h9HY7/ApEreU/8k=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":199,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[31,0,19,1],[31,3,18,13],[31,5,20,1],[32,0,20,3,"value"],[32,4,20,3,"value"],[32,9,20,8],[32,11,20,10],[32,12,20,1],[33,0,20,13,"text"],[33,4,20,13,"text"],[33,8,20,17],[33,10,20,19],[34,0,20,1],[34,3,18,13],[34,5,21,1],[35,0,21,3,"value"],[35,4,21,3,"value"],[35,9,21,8],[35,11,21,10],[35,12,21,1],[36,0,21,13,"text"],[36,4,21,13,"text"],[36,8,21,17],[36,10,21,19],[37,0,21,1],[37,3,18,13],[37,4,18,0],[38,0,23,0],[38,6,23,6,"NewList"],[38,13,23,13],[38,16,23,16],[38,17,24,1],[39,0,24,3,"value"],[39,4,24,3,"value"],[39,9,24,8],[39,11,24,10],[39,13,24,1],[40,0,24,14,"text"],[40,4,24,14,"text"],[40,8,24,18],[40,10,24,20],[41,0,24,1],[41,3,23,16],[41,5,25,1],[42,0,25,3,"value"],[42,4,25,3,"value"],[42,9,25,8],[42,11,25,10],[42,13,25,1],[43,0,25,14,"text"],[43,4,25,14,"text"],[43,8,25,18],[43,10,25,20],[44,0,25,1],[44,3,23,16],[44,5,26,1],[45,0,26,3,"value"],[45,4,26,3,"value"],[45,9,26,8],[45,11,26,10],[45,12,26,1],[46,0,26,13,"text"],[46,4,26,13,"text"],[46,8,26,17],[46,10,26,19],[47,0,26,1],[47,3,23,16],[47,4,23,0],[49,0,29,15],[49,11,29,24,"ConnexionScreen"],[49,26,29,15],[49,29,29,42],[50,0,29,42],[52,0,29,42],[52,20,30,25],[52,41,30,34],[52,45,30,38,"Animated"],[52,67,30,47,"Value"],[52,72,30,34],[52,73,30,53],[52,74,30,34],[52,75,30,25],[52,76,29,42],[53,0,29,42],[54,0,29,42],[54,8,30,8,"animatedValue"],[54,21,29,42],[56,0,29,42],[56,21,31,34],[56,42,31,43],[56,46,31,47,"Animated"],[56,68,31,56,"Value"],[56,73,31,43],[56,74,31,62],[56,75,31,43],[56,76,31,34],[56,77,29,42],[57,0,29,42],[58,0,29,42],[58,8,31,8,"animatedTranslateValue"],[58,30,29,42],[60,0,29,42],[60,21,32,45],[60,42,33,2,"List"],[60,46,33,6],[60,47,33,7,"sort"],[60,51,33,2],[60,52,33,12],[60,62,33,13,"list"],[60,66,33,12],[60,68,33,19,"_list"],[60,73,33,12],[61,0,33,12],[61,13,33,29,"list"],[61,17,33,33],[61,18,33,34,"value"],[61,23,33,29],[61,26,33,42,"_list"],[61,31,33,47],[61,32,33,48,"value"],[61,37,33,12],[62,0,33,12],[62,5,33,2],[62,6,32,45],[62,7,29,42],[63,0,29,42],[64,0,29,42],[64,8,32,8,"transitionList"],[64,22,29,42],[65,0,29,42],[65,8,32,24,"setTransitionList"],[65,25,29,42],[67,0,29,42],[67,21,35,31],[67,42,35,40],[67,46,35,31],[67,47,29,42],[68,0,29,42],[69,0,29,42],[69,8,35,8,"changed"],[69,15,29,42],[70,0,29,42],[70,8,35,17,"setChanged"],[70,18,29,42],[72,0,37,1],[72,8,37,7,"height"],[72,14,37,13],[72,17,37,16],[72,19,37,1],[74,0,29,42],[74,21,38,27],[74,42,38,36],[74,43,38,27],[74,44,29,42],[75,0,29,42],[76,0,29,42],[76,8,38,8,"value"],[76,13,29,42],[77,0,29,42],[77,8,38,15,"setValue"],[77,16,29,42],[79,0,39,1,"animatedValue"],[79,4,39,1,"animatedValue"],[79,17,39,14],[79,18,39,15,"addListener"],[79,29,39,1],[79,30,39,27],[79,46,39,42],[80,0,39,42],[80,10,39,30,"value"],[80,15,39,42],[80,23,39,30,"value"],[80,28,39,42],[81,0,40,2,"setValue"],[81,6,40,2,"setValue"],[81,14,40,10],[81,15,40,11,"value"],[81,20,40,10],[81,21,40,2],[82,0,41,2],[82,5,39,1],[84,0,43,1],[84,13,43,10,"startScaleAnimation"],[84,32,43,1],[84,35,43,32],[85,0,44,2],[85,10,44,6,"newTransitionList"],[85,27,44,23],[85,30,44,26,"transitionList"],[85,44,44,2],[86,0,45,2,"setChanged"],[86,6,45,2,"setChanged"],[86,16,45,12],[86,17,45,13],[86,22,45,12],[86,23,45,2],[88,0,43,32],[88,33,47,13,"i"],[88,34,43,32],[89,0,48,3,"console"],[89,8,48,3,"console"],[89,15,48,10],[89,16,48,11,"log"],[89,19,48,3],[89,20,48,15,"i"],[89,21,48,3],[91,0,49,3],[91,12,50,4,"transitionList"],[91,26,50,18],[91,27,50,19,"i"],[91,28,50,18],[91,29,50,4],[91,30,50,22,"value"],[91,35,50,4],[91,38,51,4,"NewList"],[91,45,51,11],[91,46,51,12,"find"],[91,50,51,4],[91,51,51,17],[91,61,51,17,"list"],[91,65,51,21],[92,0,51,21],[92,17,51,25,"list"],[92,21,51,29],[92,22,51,30,"text"],[92,26,51,25],[92,31,51,39,"transitionList"],[92,45,51,53],[92,46,51,54,"i"],[92,47,51,53],[92,48,51,39],[92,49,51,57,"text"],[92,53,51,21],[93,0,51,21],[93,9,51,4],[93,11,51,63,"value"],[93,16,49,3],[93,18,52,5],[94,0,53,4,"newTransitionList"],[94,10,53,4,"newTransitionList"],[94,27,53,21],[94,28,53,22,"i"],[94,29,53,21],[94,30,53,4],[94,31,53,25,"value"],[94,36,53,4],[94,40,53,34],[94,41,53,4],[95,0,54,4,"setChanged"],[95,10,54,4,"setChanged"],[95,20,54,14],[95,21,54,15],[95,25,54,14],[95,26,54,4],[96,0,55,4],[97,0,43,32],[99,0,47,2],[99,11,47,7],[99,15,47,13,"i"],[99,16,47,2],[99,20,47,18,"transitionList"],[99,34,47,2],[99,36,47,34],[100,0,47,34],[100,14,47,13,"i"],[100,15,47,34],[101,0,56,3],[103,0,57,2,"console"],[103,6,57,2,"console"],[103,13,57,9],[103,14,57,10,"log"],[103,17,57,2],[103,18,57,14,"newTransitionList"],[103,35,57,2],[105,0,58,2],[105,10,58,6,"changed"],[105,17,58,2],[105,19,58,15],[106,0,59,3,"setTransitionList"],[106,8,59,3,"setTransitionList"],[106,25,59,20],[106,26,60,4,"newTransitionList"],[106,43,60,21],[106,44,61,6,"map"],[106,47,60,4],[106,48,61,10],[106,58,61,11,"list"],[106,62,61,10],[106,64,61,17,"index"],[106,69,61,10],[107,0,61,10],[107,35,61,33,"list"],[107,39,61,10],[108,0,61,39,"prevIndex"],[108,12,61,39,"prevIndex"],[108,21,61,48],[108,23,61,50,"index"],[109,0,61,10],[110,0,61,10],[110,9,60,4],[110,11,62,6,"sort"],[110,15,60,4],[110,16,62,11],[110,26,62,12,"list"],[110,30,62,11],[110,32,62,18,"_list"],[110,37,62,11],[111,0,62,11],[111,17,62,28,"list"],[111,21,62,32],[111,22,62,33,"value"],[111,27,62,28],[111,30,62,41,"_list"],[111,35,62,46],[111,36,62,47,"value"],[111,41,62,11],[112,0,62,11],[112,9,60,4],[112,10,59,20],[112,11,59,3],[114,0,64,3,"Animated"],[114,30,64,12,"timing"],[114,36,64,3],[114,37,64,19,"animatedTranslateValue"],[114,59,64,3],[114,61,64,43],[115,0,65,4,"toValue"],[115,10,65,4,"toValue"],[115,17,65,11],[115,19,65,13],[115,20,64,43],[116,0,66,4,"timing"],[116,10,66,4,"timing"],[116,16,66,10],[116,18,66,12],[117,0,64,43],[117,9,64,3],[117,11,67,6,"start"],[117,16,64,3],[117,17,67,12],[117,29,67,18],[118,0,68,4],[118,14,68,8,"changed"],[118,21,68,4],[118,23,68,17],[119,0,69,5,"startScaleAnimation"],[119,12,69,5,"startScaleAnimation"],[119,31,69,24],[120,0,70,5],[121,0,71,4],[121,9,64,3],[122,0,72,3],[123,0,73,2],[125,0,75,1],[125,13,75,10,"getTranslation"],[125,27,75,1],[125,28,75,25,"index"],[125,33,75,1],[125,35,75,32,"prevIndex"],[125,44,75,1],[125,46,75,43],[126,0,76,2],[126,10,76,6,"index"],[126,15,76,11],[126,18,76,14,"prevIndex"],[126,27,76,2],[126,29,76,25],[127,0,77,3],[127,15,77,10],[127,16,78,4],[128,0,79,5,"translateY"],[128,10,79,5,"translateY"],[128,20,79,15],[128,22,79,17,"animatedTranslateValue"],[128,44,79,39],[128,45,79,40,"interpolate"],[128,56,79,17],[128,57,79,52],[129,0,80,6,"inputRange"],[129,12,80,6,"inputRange"],[129,22,80,16],[129,24,80,18],[129,25,80,19],[129,26,80,18],[129,28,80,22],[129,29,80,18],[129,30,79,52],[130,0,81,6,"outputRange"],[130,12,81,6,"outputRange"],[130,23,81,17],[130,25,81,19],[130,26,81,20,"height"],[130,32,81,26],[130,35,81,29,"prevIndex"],[130,44,81,19],[130,46,81,40,"height"],[130,52,81,46],[130,55,81,49,"index"],[130,60,81,19],[131,0,79,52],[131,11,79,17],[132,0,78,4],[132,9,77,10],[132,10,77,3],[133,0,85,3],[135,0,86,2],[135,10,86,6,"index"],[135,15,86,11],[135,18,86,14,"prevIndex"],[135,27,86,2],[135,29,86,25],[136,0,87,3],[136,15,87,10],[136,16,88,4],[137,0,89,5,"translateY"],[137,10,89,5,"translateY"],[137,20,89,15],[137,22,89,17,"animatedTranslateValue"],[137,44,89,39],[137,45,89,40,"interpolate"],[137,56,89,17],[137,57,89,52],[138,0,90,6,"inputRange"],[138,12,90,6,"inputRange"],[138,22,90,16],[138,24,90,18],[138,25,90,19],[138,26,90,18],[138,28,90,22],[138,29,90,18],[138,30,89,52],[139,0,91,6,"outputRange"],[139,12,91,6,"outputRange"],[139,23,91,17],[139,25,91,19],[139,26,91,20,"height"],[139,32,91,26],[139,35,91,29,"index"],[139,40,91,19],[139,42,91,36,"height"],[139,48,91,42],[139,51,91,45,"prevIndex"],[139,60,91,19],[140,0,89,52],[140,11,89,17],[141,0,88,4],[141,9,87,10],[141,10,87,3],[142,0,95,3],[144,0,96,2],[145,0,97,2],[147,0,99,1],[147,11,100,2],[147,40,100,3],[147,57,100,2],[148,0,100,8],[148,6,100,8],[148,11,100,13],[148,13,100,15],[149,0,100,17,"marginTop"],[149,8,100,17,"marginTop"],[149,17,100,26],[149,19,100,28],[150,0,100,15],[150,7,100,2],[151,0,100,2],[152,0,100,2],[153,0,100,2],[154,0,100,2],[155,0,100,2],[155,7,101,4,"transitionList"],[155,21,101,18],[155,22,101,19,"map"],[155,25,101,4],[155,26,101,23],[155,36,101,24,"list"],[155,40,101,23],[155,42,101,30,"index"],[155,47,101,23],[156,0,101,23],[156,13,102,4],[156,42,102,5],[156,63,102,4],[156,64,102,14],[156,68,102,4],[157,0,103,5],[157,8,103,5],[157,11,103,8],[157,13,103,10,"index"],[157,18,102,4],[158,0,104,5],[158,8,104,5],[158,13,104,10],[158,15,104,12],[159,0,105,6,"width"],[159,10,105,6,"width"],[159,15,105,11],[159,17,105,13],[159,20,104,12],[160,0,106,6,"height"],[160,10,106,6,"height"],[160,16,106,12],[160,18,106,14,"height"],[160,24,104,12],[161,0,107,6,"position"],[161,10,107,6,"position"],[161,18,107,14],[161,20,107,16,"absolute"],[161,28,104,12],[162,0,108,6,"top"],[162,10,108,6,"top"],[162,13,108,9],[162,15,108,11,"height"],[162,21,108,17],[162,24,108,20,"list"],[162,28,108,24],[162,29,108,25,"prevIndex"],[162,38,104,12],[163,0,109,6,"backgroundColor"],[163,10,109,6,"backgroundColor"],[163,25,109,21],[163,27,109,23],[163,36,104,12],[164,0,110,6,"transform"],[164,10,110,6,"transform"],[164,19,110,15],[164,21,110,17,"getTranslation"],[164,35,110,31],[164,36,110,32,"index"],[164,41,110,31],[164,43,110,39,"list"],[164,47,110,43],[164,48,110,44,"prevIndex"],[164,57,110,31],[165,0,104,12],[165,9,102,4],[166,0,102,4],[167,0,102,4],[168,0,102,4],[169,0,102,4],[170,0,102,4],[170,9,113,6,"console"],[170,16,113,13],[170,17,113,14,"log"],[170,20,113,6],[170,21,113,18,"list"],[170,25,113,6],[170,27,113,24,"index"],[170,32,113,6],[170,33,102,4],[170,35,114,5],[170,64,114,6],[170,81,114,5],[171,0,114,5],[172,0,114,5],[173,0,114,5],[174,0,114,5],[175,0,114,5],[175,9,115,7,"list"],[175,13,115,11],[175,14,115,12,"text"],[175,18,114,5],[175,25,115,19,"list"],[175,29,115,23],[175,30,115,24,"value"],[175,35,114,5],[175,36,102,4],[175,37,101,23],[176,0,101,23],[176,5,101,4],[176,6,100,2],[176,8,119,3],[176,37,119,4],[176,66,119,3],[177,0,119,21],[177,6,119,21],[177,13,119,28],[177,15,119,30],[178,0,119,30],[178,15,119,36,"startScaleAnimation"],[178,34,119,55],[178,36,119,30],[179,0,119,30],[179,7,119,3],[180,0,119,3],[181,0,119,3],[182,0,119,3],[183,0,119,3],[184,0,119,3],[184,7,120,4],[184,36,120,5],[184,53,120,4],[185,0,120,4],[186,0,120,4],[187,0,120,4],[188,0,120,4],[189,0,120,4],[189,16,119,3],[189,17,100,2],[189,18,99,1],[190,0,124,1],[192,5,29,24,"ConnexionScreen"],[192,20],[194,7,29,24,"ConnexionScreen"],[194,22]],"functionMap":{"names":["<global>","ConnexionScreen","List.sort$argument_0","animatedValue.addListener$argument_0","startScaleAnimation","NewList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;YCI,yCD;2BEM;EFE;CGE;iBCQ,4CD;UEU,gDF;WGC,yCH;YIK;IJI;EHE;CQE;ERsB;uBSI;ITiB;8BUC,2BV;CDK"}},"type":"js/module"}]}