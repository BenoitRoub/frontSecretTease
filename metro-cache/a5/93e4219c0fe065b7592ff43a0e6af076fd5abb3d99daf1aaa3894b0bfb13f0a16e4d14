{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Screens/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 3,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var NewList = [{\n    value: 11,\n    text: \"Felix\"\n  }, {\n    value: 13,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen() {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(List.sort(function (list, _list) {\n      return list.value < _list.value;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var height = 50;\n\n    var _useState7 = (0, _react.useState)(0),\n        _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n        value = _useState8[0],\n        setValue = _useState8[1];\n\n    animatedValue.addListener(function (_ref) {\n      var value = _ref.value;\n      setValue(value);\n    });\n\n    function startScaleAnimation(changed) {\n      var newTransitionList = transitionList;\n      console.log(changed);\n\n      var _loop = function _loop(i) {\n        if (transitionList[i].value < NewList.find(function (list) {\n          return list.text === transitionList[i].text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          changed = true;\n        }\n      };\n\n      for (var i in transitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        setTransitionList(newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          return list.value < _list.value && list.prevIndex < _list.prevIndex;\n        }));\n        console.log(\"new\", newTransitionList);\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          duration: 500\n        }).start(function () {\n          return _reactNative.Animated.timing(animatedTranslateValue, {\n            toValue: 0,\n            duration: 1\n          }).start(function () {\n            if (changed) {\n              startScaleAnimation(false);\n            }\n          });\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -height]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, height]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      }\n    }, transitionList.map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 320,\n          height: height,\n          position: \"absolute\",\n          top: height * (list.prevIndex + 1) || height * (index + 1),\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: {\n        top: 300\n      },\n      onPress: function onPress() {\n        return startScaleAnimation(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      }\n    }, \"start \")));\n  }\n\n  _s(ConnexionScreen, \"mOLQUmJd1vyRBSQ47ZNva1CGyKc=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":202,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,13],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,13],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,13],[40,4,18,0],[41,0,23,0],[41,6,23,6,"NewList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,13,24,1],[43,0,24,14,"text"],[43,4,24,14,"text"],[43,8,24,18],[43,10,24,20],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,13,25,1],[46,0,25,14,"text"],[46,4,25,14,"text"],[46,8,25,18],[46,10,25,20],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"ConnexionScreen"],[52,26,29,15],[52,29,29,42],[53,0,29,42],[55,0,29,42],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,42],[56,0,29,42],[57,0,29,42],[57,8,30,8,"animatedValue"],[57,21,29,42],[59,0,29,42],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,42],[60,0,29,42],[61,0,29,42],[61,8,31,8,"animatedTranslateValue"],[61,30,29,42],[63,0,29,42],[63,21,32,45],[63,42,33,2,"List"],[63,46,33,6],[63,47,33,7,"sort"],[63,51,33,2],[63,52,33,12],[63,62,33,13,"list"],[63,66,33,12],[63,68,33,19,"_list"],[63,73,33,12],[64,0,33,12],[64,13,33,29,"list"],[64,17,33,33],[64,18,33,34,"value"],[64,23,33,29],[64,26,33,42,"_list"],[64,31,33,47],[64,32,33,48,"value"],[64,37,33,12],[65,0,33,12],[65,5,33,2],[65,6,32,45],[65,7,29,42],[66,0,29,42],[67,0,29,42],[67,8,32,8,"transitionList"],[67,22,29,42],[68,0,29,42],[68,8,32,24,"setTransitionList"],[68,25,29,42],[70,0,36,1],[70,8,36,7,"height"],[70,14,36,13],[70,17,36,16],[70,19,36,1],[72,0,29,42],[72,21,37,27],[72,42,37,36],[72,43,37,27],[72,44,29,42],[73,0,29,42],[74,0,29,42],[74,8,37,8,"value"],[74,13,29,42],[75,0,29,42],[75,8,37,15,"setValue"],[75,16,29,42],[77,0,38,1,"animatedValue"],[77,4,38,1,"animatedValue"],[77,17,38,14],[77,18,38,15,"addListener"],[77,29,38,1],[77,30,38,27],[77,46,38,42],[78,0,38,42],[78,10,38,30,"value"],[78,15,38,42],[78,23,38,30,"value"],[78,28,38,42],[79,0,39,2,"setValue"],[79,6,39,2,"setValue"],[79,14,39,10],[79,15,39,11,"value"],[79,20,39,10],[79,21,39,2],[80,0,40,2],[80,5,38,1],[82,0,42,1],[82,13,42,10,"startScaleAnimation"],[82,32,42,1],[82,33,42,30,"changed"],[82,40,42,1],[82,42,42,39],[83,0,43,2],[83,10,43,6,"newTransitionList"],[83,27,43,23],[83,30,43,26,"transitionList"],[83,44,43,2],[84,0,44,2,"console"],[84,6,44,2,"console"],[84,13,44,9],[84,14,44,10,"log"],[84,17,44,2],[84,18,44,14,"changed"],[84,25,44,2],[86,0,42,39],[86,33,45,13,"i"],[86,34,42,39],[87,0,46,3],[87,12,47,4,"transitionList"],[87,26,47,18],[87,27,47,19,"i"],[87,28,47,18],[87,29,47,4],[87,30,47,22,"value"],[87,35,47,4],[87,38,48,4,"NewList"],[87,45,48,11],[87,46,48,12,"find"],[87,50,48,4],[87,51,48,17],[87,61,48,17,"list"],[87,65,48,21],[88,0,48,21],[88,17,48,25,"list"],[88,21,48,29],[88,22,48,30,"text"],[88,26,48,25],[88,31,48,39,"transitionList"],[88,45,48,53],[88,46,48,54,"i"],[88,47,48,53],[88,48,48,39],[88,49,48,57,"text"],[88,53,48,21],[89,0,48,21],[89,9,48,4],[89,11,48,63,"value"],[89,16,46,3],[89,18,49,5],[90,0,50,4,"newTransitionList"],[90,10,50,4,"newTransitionList"],[90,27,50,21],[90,28,50,22,"i"],[90,29,50,21],[90,30,50,4],[90,31,50,25,"value"],[90,36,50,4],[90,40,50,34],[90,41,50,4],[91,0,51,4,"changed"],[91,10,51,4,"changed"],[91,17,51,11],[91,20,51,14],[91,24,51,4],[92,0,52,4],[93,0,42,39],[95,0,45,2],[95,11,45,7],[95,15,45,13,"i"],[95,16,45,2],[95,20,45,18,"transitionList"],[95,34,45,2],[95,36,45,34],[96,0,45,34],[96,14,45,13,"i"],[96,15,45,34],[97,0,53,3],[99,0,54,2],[99,10,54,6,"changed"],[99,17,54,2],[99,19,54,15],[100,0,55,3,"setTransitionList"],[100,8,55,3,"setTransitionList"],[100,25,55,20],[100,26,56,4,"newTransitionList"],[100,43,56,21],[100,44,57,6,"map"],[100,47,56,4],[100,48,57,10],[100,58,57,11,"list"],[100,62,57,10],[100,64,57,17,"index"],[100,69,57,10],[101,0,57,10],[101,35,57,33,"list"],[101,39,57,10],[102,0,57,39,"prevIndex"],[102,12,57,39,"prevIndex"],[102,21,57,48],[102,23,57,50,"index"],[103,0,57,10],[104,0,57,10],[104,9,56,4],[104,11,58,6,"sort"],[104,15,56,4],[104,16,59,6],[104,26,59,7,"list"],[104,30,59,6],[104,32,59,13,"_list"],[104,37,59,6],[105,0,59,6],[105,17,60,7,"list"],[105,21,60,11],[105,22,60,12,"value"],[105,27,60,7],[105,30,60,20,"_list"],[105,35,60,25],[105,36,60,26,"value"],[105,41,60,7],[105,45,61,7,"list"],[105,49,61,11],[105,50,61,12,"prevIndex"],[105,59,61,7],[105,62,61,24,"_list"],[105,67,61,29],[105,68,61,30,"prevIndex"],[105,77,59,6],[106,0,59,6],[106,9,56,4],[106,10,55,20],[106,11,55,3],[107,0,64,3,"console"],[107,8,64,3,"console"],[107,15,64,10],[107,16,64,11,"log"],[107,19,64,3],[107,20,64,15],[107,25,64,3],[107,27,64,22,"newTransitionList"],[107,44,64,3],[109,0,65,3,"Animated"],[109,30,65,12,"timing"],[109,36,65,3],[109,37,65,19,"animatedTranslateValue"],[109,59,65,3],[109,61,65,43],[110,0,66,4,"toValue"],[110,10,66,4,"toValue"],[110,17,66,11],[110,19,66,13],[110,20,65,43],[111,0,67,4,"duration"],[111,10,67,4,"duration"],[111,18,67,12],[111,20,67,14],[112,0,65,43],[112,9,65,3],[112,11,68,6,"start"],[112,16,65,3],[112,17,68,12],[113,0,68,12],[113,17,69,4,"Animated"],[113,39,69,13,"timing"],[113,45,69,4],[113,46,69,20,"animatedTranslateValue"],[113,68,69,4],[113,70,69,44],[114,0,70,5,"toValue"],[114,12,70,5,"toValue"],[114,19,70,12],[114,21,70,14],[114,22,69,44],[115,0,71,5,"duration"],[115,12,71,5,"duration"],[115,20,71,13],[115,22,71,15],[116,0,69,44],[116,11,69,4],[116,13,72,7,"start"],[116,18,69,4],[116,19,72,13],[116,31,72,19],[117,0,73,5],[117,16,73,9,"changed"],[117,23,73,5],[117,25,73,18],[118,0,74,6,"startScaleAnimation"],[118,14,74,6,"startScaleAnimation"],[118,33,74,25],[118,34,74,26],[118,39,74,25],[118,40,74,6],[119,0,75,6],[120,0,76,5],[120,11,69,4],[120,12,68,12],[121,0,68,12],[121,9,65,3],[122,0,78,3],[123,0,79,2],[125,0,81,1],[125,13,81,10,"getTranslation"],[125,27,81,1],[125,28,81,25,"index"],[125,33,81,1],[125,35,81,32,"prevIndex"],[125,44,81,1],[125,46,81,43],[126,0,82,2],[126,10,82,6,"index"],[126,15,82,11],[126,18,82,14,"prevIndex"],[126,27,82,2],[126,29,82,25],[127,0,83,3],[127,15,83,10],[127,16,84,4],[128,0,85,5,"translateY"],[128,10,85,5,"translateY"],[128,20,85,15],[128,22,85,17,"animatedTranslateValue"],[128,44,85,39],[128,45,85,40,"interpolate"],[128,56,85,17],[128,57,85,52],[129,0,86,6,"inputRange"],[129,12,86,6,"inputRange"],[129,22,86,16],[129,24,86,18],[129,25,86,19],[129,26,86,18],[129,28,86,22],[129,29,86,18],[129,30,85,52],[130,0,87,6,"outputRange"],[130,12,87,6,"outputRange"],[130,23,87,17],[130,25,87,19],[130,26,87,20],[130,27,87,19],[130,29,87,23],[130,30,87,24,"height"],[130,36,87,19],[131,0,85,52],[131,11,85,17],[132,0,84,4],[132,9,83,10],[132,10,83,3],[133,0,91,3],[135,0,92,2],[135,10,92,6,"index"],[135,15,92,11],[135,18,92,14,"prevIndex"],[135,27,92,2],[135,29,92,25],[136,0,93,3],[136,15,93,10],[136,16,94,4],[137,0,95,5,"translateY"],[137,10,95,5,"translateY"],[137,20,95,15],[137,22,95,17,"animatedTranslateValue"],[137,44,95,39],[137,45,95,40,"interpolate"],[137,56,95,17],[137,57,95,52],[138,0,96,6,"inputRange"],[138,12,96,6,"inputRange"],[138,22,96,16],[138,24,96,18],[138,25,96,19],[138,26,96,18],[138,28,96,22],[138,29,96,18],[138,30,95,52],[139,0,97,6,"outputRange"],[139,12,97,6,"outputRange"],[139,23,97,17],[139,25,97,19],[139,26,97,20],[139,27,97,19],[139,29,97,23,"height"],[139,35,97,19],[140,0,95,52],[140,11,95,17],[141,0,94,4],[141,9,93,10],[141,10,93,3],[142,0,101,3],[144,0,102,2],[145,0,103,2],[147,0,105,1],[147,11,106,2],[147,40,106,3],[147,57,106,2],[148,0,106,8],[148,6,106,8],[148,11,106,13],[148,13,106,15],[149,0,106,17,"marginTop"],[149,8,106,17,"marginTop"],[149,17,106,26],[149,19,106,28],[150,0,106,15],[150,7,106,2],[151,0,106,2],[152,0,106,2],[153,0,106,2],[154,0,106,2],[155,0,106,2],[155,7,107,4,"transitionList"],[155,21,107,18],[155,22,107,19,"map"],[155,25,107,4],[155,26,107,23],[155,36,107,24,"list"],[155,40,107,23],[155,42,107,30,"index"],[155,47,107,23],[156,0,107,23],[156,13,108,4],[156,42,108,5],[156,63,108,4],[156,64,108,14],[156,68,108,4],[157,0,109,5],[157,8,109,5],[157,11,109,8],[157,13,109,10,"index"],[157,18,108,4],[158,0,110,5],[158,8,110,5],[158,13,110,10],[158,15,110,12],[159,0,111,6,"width"],[159,10,111,6,"width"],[159,15,111,11],[159,17,111,13],[159,20,110,12],[160,0,112,6,"height"],[160,10,112,6,"height"],[160,16,112,12],[160,18,112,14,"height"],[160,24,110,12],[161,0,113,6,"position"],[161,10,113,6,"position"],[161,18,113,14],[161,20,113,16],[161,30,110,12],[162,0,114,6,"top"],[162,10,114,6,"top"],[162,13,114,9],[162,15,115,7,"height"],[162,21,115,13],[162,25,115,17,"list"],[162,29,115,21],[162,30,115,22,"prevIndex"],[162,39,115,17],[162,42,115,34],[162,43,115,13],[162,44,115,7],[162,48,116,7,"height"],[162,54,116,13],[162,58,116,17,"index"],[162,63,116,22],[162,66,116,25],[162,67,116,13],[162,68,110,12],[163,0,117,6,"backgroundColor"],[163,10,117,6,"backgroundColor"],[163,25,117,21],[163,27,117,23,"list"],[163,31,117,27],[163,32,117,28,"color"],[163,37,110,12],[164,0,118,6,"transform"],[164,10,118,6,"transform"],[164,19,118,15],[164,21,118,17,"getTranslation"],[164,35,118,31],[164,36,118,32,"index"],[164,41,118,31],[164,43,118,39,"list"],[164,47,118,43],[164,48,118,44,"prevIndex"],[164,57,118,31],[165,0,110,12],[165,9,108,4],[166,0,108,4],[167,0,108,4],[168,0,108,4],[169,0,108,4],[170,0,108,4],[170,9,121,5],[170,38,121,6],[170,55,121,5],[171,0,121,5],[172,0,121,5],[173,0,121,5],[174,0,121,5],[175,0,121,5],[175,9,122,7,"list"],[175,13,122,11],[175,14,122,12,"text"],[175,18,121,5],[175,25,122,19,"list"],[175,29,122,23],[175,30,122,24,"value"],[175,35,121,5],[175,36,108,4],[175,37,107,23],[176,0,107,23],[176,5,107,4],[176,6,106,2],[176,8,126,3],[176,37,126,4],[176,66,126,3],[177,0,127,4],[177,6,127,4],[177,11,127,9],[177,13,127,11],[178,0,127,13,"top"],[178,8,127,13,"top"],[178,11,127,16],[178,13,127,18],[179,0,127,11],[179,7,126,3],[180,0,128,4],[180,6,128,4],[180,13,128,11],[180,15,128,13],[181,0,128,13],[181,15,128,19,"startScaleAnimation"],[181,34,128,38],[181,35,128,39],[181,40,128,38],[181,41,128,13],[182,0,128,13],[182,7,126,3],[183,0,126,3],[184,0,126,3],[185,0,126,3],[186,0,126,3],[187,0,126,3],[187,7,130,4],[187,36,130,5],[187,53,130,4],[188,0,130,4],[189,0,130,4],[190,0,130,4],[191,0,130,4],[192,0,130,4],[192,16,126,3],[192,17,106,2],[192,18,105,1],[193,0,134,1],[195,5,29,24,"ConnexionScreen"],[195,20],[197,7,29,24,"ConnexionScreen"],[197,22]],"functionMap":{"names":["<global>","ConnexionScreen","List.sort$argument_0","animatedValue.addListener$argument_0","startScaleAnimation","NewList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;YCI,yCD;2BEK;EFE;CGE;iBCM,4CD;UES,gDF;MGE;uCHE;YIO;MJQ;EHG;CQE;ERsB;uBSI;ITkB;aUG,gCV;CDM"}},"type":"js/module"}]}