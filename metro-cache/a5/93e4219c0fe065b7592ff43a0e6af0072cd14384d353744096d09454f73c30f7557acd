{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Screens/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\"\n  }, {\n    value: 1,\n    text: \"Benoit\"\n  }, {\n    value: 6,\n    text: \"Morgane\"\n  }];\n  var NewList = [{\n    value: 15,\n    text: \"Felix\"\n  }, {\n    value: 20,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen() {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(List),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var _useState7 = (0, _react.useState)(true),\n        _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n        changed = _useState8[0],\n        setChanged = _useState8[1];\n\n    var height = 50;\n\n    var _useState9 = (0, _react.useState)(0),\n        _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n        value = _useState10[0],\n        setValue = _useState10[1];\n\n    animatedValue.addListener(function (_ref) {\n      var value = _ref.value;\n      setValue(value);\n    });\n\n    function startScaleAnimation() {\n      var newTransitionList = transitionList;\n\n      for (var i in transitionList) {\n        console.log(i);\n\n        if (transitionList[i].value < NewList.find(function (list) {\n          return list.text === transitionList.text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          setChanged(true);\n        }\n      }\n\n      if (changed) {\n        setTransitionList(newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          return list.value > _list.value;\n        }));\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          timing: 1200\n        }).start(function () {\n          return startScaleAnimation();\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [height * prevIndex, height * index]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [height * index, height * prevIndex]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      }\n    }, List.map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 320,\n          height: height,\n          backgroundColor: \"#253237\",\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      onPress: function onPress() {\n        return startScaleAnimation();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      }\n    }, \"start \")));\n  }\n\n  _s(ConnexionScreen, \"OSqyX/PmQ5r42wSvLJUrPAO+XQ4=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":186,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[31,0,19,1],[31,3,18,13],[31,5,20,1],[32,0,20,3,"value"],[32,4,20,3,"value"],[32,9,20,8],[32,11,20,10],[32,12,20,1],[33,0,20,13,"text"],[33,4,20,13,"text"],[33,8,20,17],[33,10,20,19],[34,0,20,1],[34,3,18,13],[34,5,21,1],[35,0,21,3,"value"],[35,4,21,3,"value"],[35,9,21,8],[35,11,21,10],[35,12,21,1],[36,0,21,13,"text"],[36,4,21,13,"text"],[36,8,21,17],[36,10,21,19],[37,0,21,1],[37,3,18,13],[37,4,18,0],[38,0,23,0],[38,6,23,6,"NewList"],[38,13,23,13],[38,16,23,16],[38,17,24,1],[39,0,24,3,"value"],[39,4,24,3,"value"],[39,9,24,8],[39,11,24,10],[39,13,24,1],[40,0,24,14,"text"],[40,4,24,14,"text"],[40,8,24,18],[40,10,24,20],[41,0,24,1],[41,3,23,16],[41,5,25,1],[42,0,25,3,"value"],[42,4,25,3,"value"],[42,9,25,8],[42,11,25,10],[42,13,25,1],[43,0,25,14,"text"],[43,4,25,14,"text"],[43,8,25,18],[43,10,25,20],[44,0,25,1],[44,3,23,16],[44,5,26,1],[45,0,26,3,"value"],[45,4,26,3,"value"],[45,9,26,8],[45,11,26,10],[45,12,26,1],[46,0,26,13,"text"],[46,4,26,13,"text"],[46,8,26,17],[46,10,26,19],[47,0,26,1],[47,3,23,16],[47,4,23,0],[49,0,29,15],[49,11,29,24,"ConnexionScreen"],[49,26,29,15],[49,29,29,42],[50,0,29,42],[52,0,29,42],[52,20,30,25],[52,41,30,34],[52,45,30,38,"Animated"],[52,67,30,47,"Value"],[52,72,30,34],[52,73,30,53],[52,74,30,34],[52,75,30,25],[52,76,29,42],[53,0,29,42],[54,0,29,42],[54,8,30,8,"animatedValue"],[54,21,29,42],[56,0,29,42],[56,21,31,34],[56,42,31,43],[56,46,31,47,"Animated"],[56,68,31,56,"Value"],[56,73,31,43],[56,74,31,62],[56,75,31,43],[56,76,31,34],[56,77,29,42],[57,0,29,42],[58,0,29,42],[58,8,31,8,"animatedTranslateValue"],[58,30,29,42],[60,0,29,42],[60,21,32,45],[60,42,32,54,"List"],[60,46,32,45],[60,47,29,42],[61,0,29,42],[62,0,29,42],[62,8,32,8,"transitionList"],[62,22,29,42],[63,0,29,42],[63,8,32,24,"setTransitionList"],[63,25,29,42],[65,0,29,42],[65,21,33,31],[65,42,33,40],[65,46,33,31],[65,47,29,42],[66,0,29,42],[67,0,29,42],[67,8,33,8,"changed"],[67,15,29,42],[68,0,29,42],[68,8,33,17,"setChanged"],[68,18,29,42],[70,0,35,1],[70,8,35,7,"height"],[70,14,35,13],[70,17,35,16],[70,19,35,1],[72,0,29,42],[72,21,36,27],[72,42,36,36],[72,43,36,27],[72,44,29,42],[73,0,29,42],[74,0,29,42],[74,8,36,8,"value"],[74,13,29,42],[75,0,29,42],[75,8,36,15,"setValue"],[75,16,29,42],[77,0,37,1,"animatedValue"],[77,4,37,1,"animatedValue"],[77,17,37,14],[77,18,37,15,"addListener"],[77,29,37,1],[77,30,37,27],[77,46,37,42],[78,0,37,42],[78,10,37,30,"value"],[78,15,37,42],[78,23,37,30,"value"],[78,28,37,42],[79,0,38,2,"setValue"],[79,6,38,2,"setValue"],[79,14,38,10],[79,15,38,11,"value"],[79,20,38,10],[79,21,38,2],[80,0,39,2],[80,5,37,1],[82,0,41,1],[82,13,41,10,"startScaleAnimation"],[82,32,41,1],[82,35,41,32],[83,0,42,2],[83,10,42,6,"newTransitionList"],[83,27,42,23],[83,30,42,26,"transitionList"],[83,44,42,2],[85,0,44,2],[85,11,44,7],[85,15,44,13,"i"],[85,16,44,2],[85,20,44,18,"transitionList"],[85,34,44,2],[85,36,44,34],[86,0,45,3,"console"],[86,8,45,3,"console"],[86,15,45,10],[86,16,45,11,"log"],[86,19,45,3],[86,20,45,15,"i"],[86,21,45,3],[88,0,46,3],[88,12,47,4,"transitionList"],[88,26,47,18],[88,27,47,19,"i"],[88,28,47,18],[88,29,47,4],[88,30,47,22,"value"],[88,35,47,4],[88,38,48,4,"NewList"],[88,45,48,11],[88,46,48,12,"find"],[88,50,48,4],[88,51,48,17],[88,61,48,17,"list"],[88,65,48,21],[89,0,48,21],[89,17,48,25,"list"],[89,21,48,29],[89,22,48,30,"text"],[89,26,48,25],[89,31,48,39,"transitionList"],[89,45,48,53],[89,46,48,54,"text"],[89,50,48,21],[90,0,48,21],[90,9,48,4],[90,11,48,60,"value"],[90,16,46,3],[90,18,49,5],[91,0,50,4,"newTransitionList"],[91,10,50,4,"newTransitionList"],[91,27,50,21],[91,28,50,22,"i"],[91,29,50,21],[91,30,50,4],[91,31,50,25,"value"],[91,36,50,4],[91,40,50,34],[91,41,50,4],[92,0,51,4,"setChanged"],[92,10,51,4,"setChanged"],[92,20,51,14],[92,21,51,15],[92,25,51,14],[92,26,51,4],[93,0,52,4],[94,0,53,3],[96,0,54,2],[96,10,54,6,"changed"],[96,17,54,2],[96,19,54,15],[97,0,55,3,"setTransitionList"],[97,8,55,3,"setTransitionList"],[97,25,55,20],[97,26,56,4,"newTransitionList"],[97,43,56,21],[97,44,57,6,"map"],[97,47,56,4],[97,48,57,10],[97,58,57,11,"list"],[97,62,57,10],[97,64,57,17,"index"],[97,69,57,10],[98,0,57,10],[98,35,57,33,"list"],[98,39,57,10],[99,0,57,39,"prevIndex"],[99,12,57,39,"prevIndex"],[99,21,57,48],[99,23,57,50,"index"],[100,0,57,10],[101,0,57,10],[101,9,56,4],[101,11,58,6,"sort"],[101,15,56,4],[101,16,58,11],[101,26,58,12,"list"],[101,30,58,11],[101,32,58,18,"_list"],[101,37,58,11],[102,0,58,11],[102,17,58,28,"list"],[102,21,58,32],[102,22,58,33,"value"],[102,27,58,28],[102,30,58,41,"_list"],[102,35,58,46],[102,36,58,47,"value"],[102,41,58,11],[103,0,58,11],[103,9,56,4],[103,10,55,20],[103,11,55,3],[105,0,60,3,"Animated"],[105,30,60,12,"timing"],[105,36,60,3],[105,37,60,19,"animatedTranslateValue"],[105,59,60,3],[105,61,60,43],[106,0,61,4,"toValue"],[106,10,61,4,"toValue"],[106,17,61,11],[106,19,61,13],[106,20,60,43],[107,0,62,4,"timing"],[107,10,62,4,"timing"],[107,16,62,10],[107,18,62,12],[108,0,60,43],[108,9,60,3],[108,11,63,6,"start"],[108,16,60,3],[108,17,63,12],[109,0,63,12],[109,17,63,18,"startScaleAnimation"],[109,36,63,37],[109,38,63,12],[110,0,63,12],[110,9,60,3],[111,0,64,3],[112,0,65,2],[114,0,67,1],[114,13,67,10,"getTranslation"],[114,27,67,1],[114,28,67,25,"index"],[114,33,67,1],[114,35,67,32,"prevIndex"],[114,44,67,1],[114,46,67,43],[115,0,68,2],[115,10,68,6,"index"],[115,15,68,11],[115,18,68,14,"prevIndex"],[115,27,68,2],[115,29,68,25],[116,0,69,3],[116,15,69,10],[116,16,70,4],[117,0,71,5,"translateY"],[117,10,71,5,"translateY"],[117,20,71,15],[117,22,71,17,"animatedTranslateValue"],[117,44,71,39],[117,45,71,40,"interpolate"],[117,56,71,17],[117,57,71,52],[118,0,72,6,"inputRange"],[118,12,72,6,"inputRange"],[118,22,72,16],[118,24,72,18],[118,25,72,19],[118,26,72,18],[118,28,72,22],[118,29,72,18],[118,30,71,52],[119,0,73,6,"outputRange"],[119,12,73,6,"outputRange"],[119,23,73,17],[119,25,73,19],[119,26,73,20,"height"],[119,32,73,26],[119,35,73,29,"prevIndex"],[119,44,73,19],[119,46,73,40,"height"],[119,52,73,46],[119,55,73,49,"index"],[119,60,73,19],[120,0,71,52],[120,11,71,17],[121,0,70,4],[121,9,69,10],[121,10,69,3],[122,0,77,3],[124,0,78,2],[124,10,78,6,"index"],[124,15,78,11],[124,18,78,14,"prevIndex"],[124,27,78,2],[124,29,78,25],[125,0,79,3],[125,15,79,10],[125,16,80,4],[126,0,81,5,"translateY"],[126,10,81,5,"translateY"],[126,20,81,15],[126,22,81,17,"animatedTranslateValue"],[126,44,81,39],[126,45,81,40,"interpolate"],[126,56,81,17],[126,57,81,52],[127,0,82,6,"inputRange"],[127,12,82,6,"inputRange"],[127,22,82,16],[127,24,82,18],[127,25,82,19],[127,26,82,18],[127,28,82,22],[127,29,82,18],[127,30,81,52],[128,0,83,6,"outputRange"],[128,12,83,6,"outputRange"],[128,23,83,17],[128,25,83,19],[128,26,83,20,"height"],[128,32,83,26],[128,35,83,29,"index"],[128,40,83,19],[128,42,83,36,"height"],[128,48,83,42],[128,51,83,45,"prevIndex"],[128,60,83,19],[129,0,81,52],[129,11,81,17],[130,0,80,4],[130,9,79,10],[130,10,79,3],[131,0,87,3],[133,0,88,2],[134,0,89,2],[136,0,91,1],[136,11,92,2],[136,40,92,3],[136,57,92,2],[137,0,92,8],[137,6,92,8],[137,11,92,13],[137,13,92,15],[138,0,92,17,"marginTop"],[138,8,92,17,"marginTop"],[138,17,92,26],[138,19,92,28],[139,0,92,15],[139,7,92,2],[140,0,92,2],[141,0,92,2],[142,0,92,2],[143,0,92,2],[144,0,92,2],[144,7,93,4,"List"],[144,11,93,8],[144,12,93,9,"map"],[144,15,93,4],[144,16,93,13],[144,26,93,14,"list"],[144,30,93,13],[144,32,93,20,"index"],[144,37,93,13],[145,0,93,13],[145,13,94,4],[145,42,94,5],[145,63,94,4],[145,64,94,14],[145,68,94,4],[146,0,95,5],[146,8,95,5],[146,11,95,8],[146,13,95,10,"index"],[146,18,94,4],[147,0,96,5],[147,8,96,5],[147,13,96,10],[147,15,96,12],[148,0,97,6,"width"],[148,10,97,6,"width"],[148,15,97,11],[148,17,97,13],[148,20,96,12],[149,0,98,6,"height"],[149,10,98,6,"height"],[149,16,98,12],[149,18,98,14,"height"],[149,24,96,12],[150,0,99,6,"backgroundColor"],[150,10,99,6,"backgroundColor"],[150,25,99,21],[150,27,99,23],[150,36,96,12],[151,0,100,6,"transform"],[151,10,100,6,"transform"],[151,19,100,15],[151,21,100,17,"getTranslation"],[151,35,100,31],[151,36,100,32,"index"],[151,41,100,31],[151,43,100,39,"list"],[151,47,100,43],[151,48,100,44,"prevIndex"],[151,57,100,31],[152,0,96,12],[152,9,94,4],[153,0,94,4],[154,0,94,4],[155,0,94,4],[156,0,94,4],[157,0,94,4],[157,9,103,5],[157,38,103,6],[157,55,103,5],[158,0,103,5],[159,0,103,5],[160,0,103,5],[161,0,103,5],[162,0,103,5],[162,9,104,7,"list"],[162,13,104,11],[162,14,104,12,"text"],[162,18,103,5],[162,25,104,19,"list"],[162,29,104,23],[162,30,104,24,"value"],[162,35,103,5],[162,36,94,4],[162,37,93,13],[163,0,93,13],[163,5,93,4],[163,6,92,2],[163,8,108,3],[163,37,108,4],[163,66,108,3],[164,0,108,21],[164,6,108,21],[164,13,108,28],[164,15,108,30],[165,0,108,30],[165,15,108,36,"startScaleAnimation"],[165,34,108,55],[165,36,108,30],[166,0,108,30],[166,7,108,3],[167,0,108,3],[168,0,108,3],[169,0,108,3],[170,0,108,3],[171,0,108,3],[171,7,109,4],[171,36,109,5],[171,53,109,4],[172,0,109,4],[173,0,109,4],[174,0,109,4],[175,0,109,4],[176,0,109,4],[176,16,108,3],[176,17,92,2],[176,18,91,1],[177,0,113,1],[179,5,29,24,"ConnexionScreen"],[179,20],[181,7,29,24,"ConnexionScreen"],[181,22]],"functionMap":{"names":["<global>","ConnexionScreen","animatedValue.addListener$argument_0","startScaleAnimation","NewList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","List.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;2BCQ;EDE;CEE;iBCO,yCD;UES,gDF;WGC,yCH;YIK,2BJ;EFE;COE;EPsB;aQI;IRc;8BSC,2BT;CDK"}},"type":"js/module"}]}