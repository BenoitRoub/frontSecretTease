{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Screens/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\"\n  }, {\n    value: 1,\n    text: \"Benoit\"\n  }, {\n    value: 6,\n    text: \"Morgane\"\n  }];\n  var NewList = [{\n    value: 15,\n    text: \"Felix\"\n  }, {\n    value: 20,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen() {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(List),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var _useState7 = (0, _react.useState)(true),\n        _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n        changed = _useState8[0],\n        setChanged = _useState8[1];\n\n    var height = 50;\n\n    var _useState9 = (0, _react.useState)(0),\n        _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n        value = _useState10[0],\n        setValue = _useState10[1];\n\n    animatedValue.addListener(function (_ref) {\n      var value = _ref.value;\n      setValue(value);\n    });\n\n    function startScaleAnimation() {\n      var newTransitionList = transitionList;\n\n      var _loop = function _loop(i) {\n        console.log(i);\n\n        if (transitionList[i].value < NewList.find(function (list) {\n          return list.text === transitionList[i].text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          setChanged(true);\n        }\n      };\n\n      for (var i in transitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        setTransitionList(newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          return list.value > _list.value;\n        }));\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          timing: 1200\n        }).start(function () {\n          return startScaleAnimation();\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [height * prevIndex, height * index]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [height * index, height * prevIndex]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      }\n    }, List.map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 320,\n          height: height,\n          backgroundColor: \"#253237\",\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      onPress: function onPress() {\n        return startScaleAnimation();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      }\n    }, \"start \")));\n  }\n\n  _s(ConnexionScreen, \"OSqyX/PmQ5r42wSvLJUrPAO+XQ4=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":190,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[31,0,19,1],[31,3,18,13],[31,5,20,1],[32,0,20,3,"value"],[32,4,20,3,"value"],[32,9,20,8],[32,11,20,10],[32,12,20,1],[33,0,20,13,"text"],[33,4,20,13,"text"],[33,8,20,17],[33,10,20,19],[34,0,20,1],[34,3,18,13],[34,5,21,1],[35,0,21,3,"value"],[35,4,21,3,"value"],[35,9,21,8],[35,11,21,10],[35,12,21,1],[36,0,21,13,"text"],[36,4,21,13,"text"],[36,8,21,17],[36,10,21,19],[37,0,21,1],[37,3,18,13],[37,4,18,0],[38,0,23,0],[38,6,23,6,"NewList"],[38,13,23,13],[38,16,23,16],[38,17,24,1],[39,0,24,3,"value"],[39,4,24,3,"value"],[39,9,24,8],[39,11,24,10],[39,13,24,1],[40,0,24,14,"text"],[40,4,24,14,"text"],[40,8,24,18],[40,10,24,20],[41,0,24,1],[41,3,23,16],[41,5,25,1],[42,0,25,3,"value"],[42,4,25,3,"value"],[42,9,25,8],[42,11,25,10],[42,13,25,1],[43,0,25,14,"text"],[43,4,25,14,"text"],[43,8,25,18],[43,10,25,20],[44,0,25,1],[44,3,23,16],[44,5,26,1],[45,0,26,3,"value"],[45,4,26,3,"value"],[45,9,26,8],[45,11,26,10],[45,12,26,1],[46,0,26,13,"text"],[46,4,26,13,"text"],[46,8,26,17],[46,10,26,19],[47,0,26,1],[47,3,23,16],[47,4,23,0],[49,0,29,15],[49,11,29,24,"ConnexionScreen"],[49,26,29,15],[49,29,29,42],[50,0,29,42],[52,0,29,42],[52,20,30,25],[52,41,30,34],[52,45,30,38,"Animated"],[52,67,30,47,"Value"],[52,72,30,34],[52,73,30,53],[52,74,30,34],[52,75,30,25],[52,76,29,42],[53,0,29,42],[54,0,29,42],[54,8,30,8,"animatedValue"],[54,21,29,42],[56,0,29,42],[56,21,31,34],[56,42,31,43],[56,46,31,47,"Animated"],[56,68,31,56,"Value"],[56,73,31,43],[56,74,31,62],[56,75,31,43],[56,76,31,34],[56,77,29,42],[57,0,29,42],[58,0,29,42],[58,8,31,8,"animatedTranslateValue"],[58,30,29,42],[60,0,29,42],[60,21,32,45],[60,42,32,54,"List"],[60,46,32,45],[60,47,29,42],[61,0,29,42],[62,0,29,42],[62,8,32,8,"transitionList"],[62,22,29,42],[63,0,29,42],[63,8,32,24,"setTransitionList"],[63,25,29,42],[65,0,29,42],[65,21,33,31],[65,42,33,40],[65,46,33,31],[65,47,29,42],[66,0,29,42],[67,0,29,42],[67,8,33,8,"changed"],[67,15,29,42],[68,0,29,42],[68,8,33,17,"setChanged"],[68,18,29,42],[70,0,35,1],[70,8,35,7,"height"],[70,14,35,13],[70,17,35,16],[70,19,35,1],[72,0,29,42],[72,21,36,27],[72,42,36,36],[72,43,36,27],[72,44,29,42],[73,0,29,42],[74,0,29,42],[74,8,36,8,"value"],[74,13,29,42],[75,0,29,42],[75,8,36,15,"setValue"],[75,16,29,42],[77,0,37,1,"animatedValue"],[77,4,37,1,"animatedValue"],[77,17,37,14],[77,18,37,15,"addListener"],[77,29,37,1],[77,30,37,27],[77,46,37,42],[78,0,37,42],[78,10,37,30,"value"],[78,15,37,42],[78,23,37,30,"value"],[78,28,37,42],[79,0,38,2,"setValue"],[79,6,38,2,"setValue"],[79,14,38,10],[79,15,38,11,"value"],[79,20,38,10],[79,21,38,2],[80,0,39,2],[80,5,37,1],[82,0,41,1],[82,13,41,10,"startScaleAnimation"],[82,32,41,1],[82,35,41,32],[83,0,42,2],[83,10,42,6,"newTransitionList"],[83,27,42,23],[83,30,42,26,"transitionList"],[83,44,42,2],[85,0,41,32],[85,33,44,13,"i"],[85,34,41,32],[86,0,45,3,"console"],[86,8,45,3,"console"],[86,15,45,10],[86,16,45,11,"log"],[86,19,45,3],[86,20,45,15,"i"],[86,21,45,3],[88,0,46,3],[88,12,47,4,"transitionList"],[88,26,47,18],[88,27,47,19,"i"],[88,28,47,18],[88,29,47,4],[88,30,47,22,"value"],[88,35,47,4],[88,38,48,4,"NewList"],[88,45,48,11],[88,46,48,12,"find"],[88,50,48,4],[88,51,48,17],[88,61,48,17,"list"],[88,65,48,21],[89,0,48,21],[89,17,48,25,"list"],[89,21,48,29],[89,22,48,30,"text"],[89,26,48,25],[89,31,48,39,"transitionList"],[89,45,48,53],[89,46,48,54,"i"],[89,47,48,53],[89,48,48,39],[89,49,48,57,"text"],[89,53,48,21],[90,0,48,21],[90,9,48,4],[90,11,48,63,"value"],[90,16,46,3],[90,18,49,5],[91,0,50,4,"newTransitionList"],[91,10,50,4,"newTransitionList"],[91,27,50,21],[91,28,50,22,"i"],[91,29,50,21],[91,30,50,4],[91,31,50,25,"value"],[91,36,50,4],[91,40,50,34],[91,41,50,4],[92,0,51,4,"setChanged"],[92,10,51,4,"setChanged"],[92,20,51,14],[92,21,51,15],[92,25,51,14],[92,26,51,4],[93,0,52,4],[94,0,41,32],[96,0,44,2],[96,11,44,7],[96,15,44,13,"i"],[96,16,44,2],[96,20,44,18,"transitionList"],[96,34,44,2],[96,36,44,34],[97,0,44,34],[97,14,44,13,"i"],[97,15,44,34],[98,0,53,3],[100,0,54,2],[100,10,54,6,"changed"],[100,17,54,2],[100,19,54,15],[101,0,55,3,"setTransitionList"],[101,8,55,3,"setTransitionList"],[101,25,55,20],[101,26,56,4,"newTransitionList"],[101,43,56,21],[101,44,57,6,"map"],[101,47,56,4],[101,48,57,10],[101,58,57,11,"list"],[101,62,57,10],[101,64,57,17,"index"],[101,69,57,10],[102,0,57,10],[102,35,57,33,"list"],[102,39,57,10],[103,0,57,39,"prevIndex"],[103,12,57,39,"prevIndex"],[103,21,57,48],[103,23,57,50,"index"],[104,0,57,10],[105,0,57,10],[105,9,56,4],[105,11,58,6,"sort"],[105,15,56,4],[105,16,58,11],[105,26,58,12,"list"],[105,30,58,11],[105,32,58,18,"_list"],[105,37,58,11],[106,0,58,11],[106,17,58,28,"list"],[106,21,58,32],[106,22,58,33,"value"],[106,27,58,28],[106,30,58,41,"_list"],[106,35,58,46],[106,36,58,47,"value"],[106,41,58,11],[107,0,58,11],[107,9,56,4],[107,10,55,20],[107,11,55,3],[109,0,60,3,"Animated"],[109,30,60,12,"timing"],[109,36,60,3],[109,37,60,19,"animatedTranslateValue"],[109,59,60,3],[109,61,60,43],[110,0,61,4,"toValue"],[110,10,61,4,"toValue"],[110,17,61,11],[110,19,61,13],[110,20,60,43],[111,0,62,4,"timing"],[111,10,62,4,"timing"],[111,16,62,10],[111,18,62,12],[112,0,60,43],[112,9,60,3],[112,11,63,6,"start"],[112,16,60,3],[112,17,63,12],[113,0,63,12],[113,17,63,18,"startScaleAnimation"],[113,36,63,37],[113,38,63,12],[114,0,63,12],[114,9,60,3],[115,0,64,3],[116,0,65,2],[118,0,67,1],[118,13,67,10,"getTranslation"],[118,27,67,1],[118,28,67,25,"index"],[118,33,67,1],[118,35,67,32,"prevIndex"],[118,44,67,1],[118,46,67,43],[119,0,68,2],[119,10,68,6,"index"],[119,15,68,11],[119,18,68,14,"prevIndex"],[119,27,68,2],[119,29,68,25],[120,0,69,3],[120,15,69,10],[120,16,70,4],[121,0,71,5,"translateY"],[121,10,71,5,"translateY"],[121,20,71,15],[121,22,71,17,"animatedTranslateValue"],[121,44,71,39],[121,45,71,40,"interpolate"],[121,56,71,17],[121,57,71,52],[122,0,72,6,"inputRange"],[122,12,72,6,"inputRange"],[122,22,72,16],[122,24,72,18],[122,25,72,19],[122,26,72,18],[122,28,72,22],[122,29,72,18],[122,30,71,52],[123,0,73,6,"outputRange"],[123,12,73,6,"outputRange"],[123,23,73,17],[123,25,73,19],[123,26,73,20,"height"],[123,32,73,26],[123,35,73,29,"prevIndex"],[123,44,73,19],[123,46,73,40,"height"],[123,52,73,46],[123,55,73,49,"index"],[123,60,73,19],[124,0,71,52],[124,11,71,17],[125,0,70,4],[125,9,69,10],[125,10,69,3],[126,0,77,3],[128,0,78,2],[128,10,78,6,"index"],[128,15,78,11],[128,18,78,14,"prevIndex"],[128,27,78,2],[128,29,78,25],[129,0,79,3],[129,15,79,10],[129,16,80,4],[130,0,81,5,"translateY"],[130,10,81,5,"translateY"],[130,20,81,15],[130,22,81,17,"animatedTranslateValue"],[130,44,81,39],[130,45,81,40,"interpolate"],[130,56,81,17],[130,57,81,52],[131,0,82,6,"inputRange"],[131,12,82,6,"inputRange"],[131,22,82,16],[131,24,82,18],[131,25,82,19],[131,26,82,18],[131,28,82,22],[131,29,82,18],[131,30,81,52],[132,0,83,6,"outputRange"],[132,12,83,6,"outputRange"],[132,23,83,17],[132,25,83,19],[132,26,83,20,"height"],[132,32,83,26],[132,35,83,29,"index"],[132,40,83,19],[132,42,83,36,"height"],[132,48,83,42],[132,51,83,45,"prevIndex"],[132,60,83,19],[133,0,81,52],[133,11,81,17],[134,0,80,4],[134,9,79,10],[134,10,79,3],[135,0,87,3],[137,0,88,2],[138,0,89,2],[140,0,91,1],[140,11,92,2],[140,40,92,3],[140,57,92,2],[141,0,92,8],[141,6,92,8],[141,11,92,13],[141,13,92,15],[142,0,92,17,"marginTop"],[142,8,92,17,"marginTop"],[142,17,92,26],[142,19,92,28],[143,0,92,15],[143,7,92,2],[144,0,92,2],[145,0,92,2],[146,0,92,2],[147,0,92,2],[148,0,92,2],[148,7,93,4,"List"],[148,11,93,8],[148,12,93,9,"map"],[148,15,93,4],[148,16,93,13],[148,26,93,14,"list"],[148,30,93,13],[148,32,93,20,"index"],[148,37,93,13],[149,0,93,13],[149,13,94,4],[149,42,94,5],[149,63,94,4],[149,64,94,14],[149,68,94,4],[150,0,95,5],[150,8,95,5],[150,11,95,8],[150,13,95,10,"index"],[150,18,94,4],[151,0,96,5],[151,8,96,5],[151,13,96,10],[151,15,96,12],[152,0,97,6,"width"],[152,10,97,6,"width"],[152,15,97,11],[152,17,97,13],[152,20,96,12],[153,0,98,6,"height"],[153,10,98,6,"height"],[153,16,98,12],[153,18,98,14,"height"],[153,24,96,12],[154,0,99,6,"backgroundColor"],[154,10,99,6,"backgroundColor"],[154,25,99,21],[154,27,99,23],[154,36,96,12],[155,0,100,6,"transform"],[155,10,100,6,"transform"],[155,19,100,15],[155,21,100,17,"getTranslation"],[155,35,100,31],[155,36,100,32,"index"],[155,41,100,31],[155,43,100,39,"list"],[155,47,100,43],[155,48,100,44,"prevIndex"],[155,57,100,31],[156,0,96,12],[156,9,94,4],[157,0,94,4],[158,0,94,4],[159,0,94,4],[160,0,94,4],[161,0,94,4],[161,9,103,5],[161,38,103,6],[161,55,103,5],[162,0,103,5],[163,0,103,5],[164,0,103,5],[165,0,103,5],[166,0,103,5],[166,9,104,7,"list"],[166,13,104,11],[166,14,104,12,"text"],[166,18,103,5],[166,25,104,19,"list"],[166,29,104,23],[166,30,104,24,"value"],[166,35,103,5],[166,36,94,4],[166,37,93,13],[167,0,93,13],[167,5,93,4],[167,6,92,2],[167,8,108,3],[167,37,108,4],[167,66,108,3],[168,0,108,21],[168,6,108,21],[168,13,108,28],[168,15,108,30],[169,0,108,30],[169,15,108,36,"startScaleAnimation"],[169,34,108,55],[169,36,108,30],[170,0,108,30],[170,7,108,3],[171,0,108,3],[172,0,108,3],[173,0,108,3],[174,0,108,3],[175,0,108,3],[175,7,109,4],[175,36,109,5],[175,53,109,4],[176,0,109,4],[177,0,109,4],[178,0,109,4],[179,0,109,4],[180,0,109,4],[180,16,108,3],[180,17,92,2],[180,18,91,1],[181,0,113,1],[183,5,29,24,"ConnexionScreen"],[183,20],[185,7,29,24,"ConnexionScreen"],[185,22]],"functionMap":{"names":["<global>","ConnexionScreen","animatedValue.addListener$argument_0","startScaleAnimation","NewList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","List.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;2BCQ;EDE;CEE;iBCO,4CD;UES,gDF;WGC,yCH;YIK,2BJ;EFE;COE;EPsB;aQI;IRc;8BSC,2BT;CDK"}},"type":"js/module"}]}