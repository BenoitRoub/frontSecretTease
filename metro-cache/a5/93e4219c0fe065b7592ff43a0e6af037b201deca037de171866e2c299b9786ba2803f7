{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Screens/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 1,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var NewList = [{\n    value: 15,\n    text: \"Felix\"\n  }, {\n    value: 20,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen() {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(List.sort(function (list, _list) {\n      return list.value < _list.value;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var _useState7 = (0, _react.useState)(true),\n        _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n        changed = _useState8[0],\n        setChanged = _useState8[1];\n\n    var height = 50;\n\n    var _useState9 = (0, _react.useState)(0),\n        _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n        value = _useState10[0],\n        setValue = _useState10[1];\n\n    animatedValue.addListener(function (_ref) {\n      var value = _ref.value;\n      setValue(value);\n    });\n\n    function startScaleAnimation() {\n      var newTransitionList = transitionList;\n      setChanged(false);\n      console.log(changed);\n\n      var _loop = function _loop(i) {\n        console.log(i);\n\n        if (transitionList[i].value < NewList.find(function (list) {\n          return list.text === transitionList[i].text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          console.log(\"ici\");\n          setChanged(true);\n        }\n      };\n\n      for (var i in transitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        setTransitionList(newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          return list.value < _list.value;\n        }));\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          timing: 12000\n        }).start(function () {\n          if (changed) {\n            startScaleAnimation();\n          }\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [height * prevIndex, height * index]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [height * index, height * prevIndex]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      }\n    }, transitionList.map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 320,\n          height: height,\n          position: \"absolute\",\n          top: height * list.prevIndex || height * index,\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        }\n      }, console.log(list, index), _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      onPress: function onPress() {\n        return startScaleAnimation();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      }\n    }, \"start \")));\n  }\n\n  _s(ConnexionScreen, \"eEtkQYV+ht9/h9HY7/ApEreU/8k=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":202,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,13],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,13],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,13],[40,4,18,0],[41,0,23,0],[41,6,23,6,"NewList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,13,24,1],[43,0,24,14,"text"],[43,4,24,14,"text"],[43,8,24,18],[43,10,24,20],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,13,25,1],[46,0,25,14,"text"],[46,4,25,14,"text"],[46,8,25,18],[46,10,25,20],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"ConnexionScreen"],[52,26,29,15],[52,29,29,42],[53,0,29,42],[55,0,29,42],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,42],[56,0,29,42],[57,0,29,42],[57,8,30,8,"animatedValue"],[57,21,29,42],[59,0,29,42],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,42],[60,0,29,42],[61,0,29,42],[61,8,31,8,"animatedTranslateValue"],[61,30,29,42],[63,0,29,42],[63,21,32,45],[63,42,33,2,"List"],[63,46,33,6],[63,47,33,7,"sort"],[63,51,33,2],[63,52,33,12],[63,62,33,13,"list"],[63,66,33,12],[63,68,33,19,"_list"],[63,73,33,12],[64,0,33,12],[64,13,33,29,"list"],[64,17,33,33],[64,18,33,34,"value"],[64,23,33,29],[64,26,33,42,"_list"],[64,31,33,47],[64,32,33,48,"value"],[64,37,33,12],[65,0,33,12],[65,5,33,2],[65,6,32,45],[65,7,29,42],[66,0,29,42],[67,0,29,42],[67,8,32,8,"transitionList"],[67,22,29,42],[68,0,29,42],[68,8,32,24,"setTransitionList"],[68,25,29,42],[70,0,29,42],[70,21,35,31],[70,42,35,40],[70,46,35,31],[70,47,29,42],[71,0,29,42],[72,0,29,42],[72,8,35,8,"changed"],[72,15,29,42],[73,0,29,42],[73,8,35,17,"setChanged"],[73,18,29,42],[75,0,37,1],[75,8,37,7,"height"],[75,14,37,13],[75,17,37,16],[75,19,37,1],[77,0,29,42],[77,21,38,27],[77,42,38,36],[77,43,38,27],[77,44,29,42],[78,0,29,42],[79,0,29,42],[79,8,38,8,"value"],[79,13,29,42],[80,0,29,42],[80,8,38,15,"setValue"],[80,16,29,42],[82,0,39,1,"animatedValue"],[82,4,39,1,"animatedValue"],[82,17,39,14],[82,18,39,15,"addListener"],[82,29,39,1],[82,30,39,27],[82,46,39,42],[83,0,39,42],[83,10,39,30,"value"],[83,15,39,42],[83,23,39,30,"value"],[83,28,39,42],[84,0,40,2,"setValue"],[84,6,40,2,"setValue"],[84,14,40,10],[84,15,40,11,"value"],[84,20,40,10],[84,21,40,2],[85,0,41,2],[85,5,39,1],[87,0,43,1],[87,13,43,10,"startScaleAnimation"],[87,32,43,1],[87,35,43,32],[88,0,44,2],[88,10,44,6,"newTransitionList"],[88,27,44,23],[88,30,44,26,"transitionList"],[88,44,44,2],[89,0,45,2,"setChanged"],[89,6,45,2,"setChanged"],[89,16,45,12],[89,17,45,13],[89,22,45,12],[89,23,45,2],[90,0,46,2,"console"],[90,6,46,2,"console"],[90,13,46,9],[90,14,46,10,"log"],[90,17,46,2],[90,18,46,14,"changed"],[90,25,46,2],[92,0,43,32],[92,33,47,13,"i"],[92,34,43,32],[93,0,48,3,"console"],[93,8,48,3,"console"],[93,15,48,10],[93,16,48,11,"log"],[93,19,48,3],[93,20,48,15,"i"],[93,21,48,3],[95,0,49,3],[95,12,50,4,"transitionList"],[95,26,50,18],[95,27,50,19,"i"],[95,28,50,18],[95,29,50,4],[95,30,50,22,"value"],[95,35,50,4],[95,38,51,4,"NewList"],[95,45,51,11],[95,46,51,12,"find"],[95,50,51,4],[95,51,51,17],[95,61,51,17,"list"],[95,65,51,21],[96,0,51,21],[96,17,51,25,"list"],[96,21,51,29],[96,22,51,30,"text"],[96,26,51,25],[96,31,51,39,"transitionList"],[96,45,51,53],[96,46,51,54,"i"],[96,47,51,53],[96,48,51,39],[96,49,51,57,"text"],[96,53,51,21],[97,0,51,21],[97,9,51,4],[97,11,51,63,"value"],[97,16,49,3],[97,18,52,5],[98,0,53,4,"newTransitionList"],[98,10,53,4,"newTransitionList"],[98,27,53,21],[98,28,53,22,"i"],[98,29,53,21],[98,30,53,4],[98,31,53,25,"value"],[98,36,53,4],[98,40,53,34],[98,41,53,4],[99,0,54,4,"console"],[99,10,54,4,"console"],[99,17,54,11],[99,18,54,12,"log"],[99,21,54,4],[99,22,54,16],[99,27,54,4],[100,0,55,4,"setChanged"],[100,10,55,4,"setChanged"],[100,20,55,14],[100,21,55,15],[100,25,55,14],[100,26,55,4],[101,0,56,4],[102,0,43,32],[104,0,47,2],[104,11,47,7],[104,15,47,13,"i"],[104,16,47,2],[104,20,47,18,"transitionList"],[104,34,47,2],[104,36,47,34],[105,0,47,34],[105,14,47,13,"i"],[105,15,47,34],[106,0,57,3],[108,0,58,2],[108,10,58,6,"changed"],[108,17,58,2],[108,19,58,15],[109,0,59,3,"setTransitionList"],[109,8,59,3,"setTransitionList"],[109,25,59,20],[109,26,60,4,"newTransitionList"],[109,43,60,21],[109,44,61,6,"map"],[109,47,60,4],[109,48,61,10],[109,58,61,11,"list"],[109,62,61,10],[109,64,61,17,"index"],[109,69,61,10],[110,0,61,10],[110,35,61,33,"list"],[110,39,61,10],[111,0,61,39,"prevIndex"],[111,12,61,39,"prevIndex"],[111,21,61,48],[111,23,61,50,"index"],[112,0,61,10],[113,0,61,10],[113,9,60,4],[113,11,62,6,"sort"],[113,15,60,4],[113,16,62,11],[113,26,62,12,"list"],[113,30,62,11],[113,32,62,18,"_list"],[113,37,62,11],[114,0,62,11],[114,17,62,28,"list"],[114,21,62,32],[114,22,62,33,"value"],[114,27,62,28],[114,30,62,41,"_list"],[114,35,62,46],[114,36,62,47,"value"],[114,41,62,11],[115,0,62,11],[115,9,60,4],[115,10,59,20],[115,11,59,3],[117,0,64,3,"Animated"],[117,30,64,12,"timing"],[117,36,64,3],[117,37,64,19,"animatedTranslateValue"],[117,59,64,3],[117,61,64,43],[118,0,65,4,"toValue"],[118,10,65,4,"toValue"],[118,17,65,11],[118,19,65,13],[118,20,64,43],[119,0,66,4,"timing"],[119,10,66,4,"timing"],[119,16,66,10],[119,18,66,12],[120,0,64,43],[120,9,64,3],[120,11,67,6,"start"],[120,16,64,3],[120,17,67,12],[120,29,67,18],[121,0,68,4],[121,14,68,8,"changed"],[121,21,68,4],[121,23,68,17],[122,0,69,5,"startScaleAnimation"],[122,12,69,5,"startScaleAnimation"],[122,31,69,24],[123,0,70,5],[124,0,71,4],[124,9,64,3],[125,0,72,3],[126,0,73,2],[128,0,75,1],[128,13,75,10,"getTranslation"],[128,27,75,1],[128,28,75,25,"index"],[128,33,75,1],[128,35,75,32,"prevIndex"],[128,44,75,1],[128,46,75,43],[129,0,76,2],[129,10,76,6,"index"],[129,15,76,11],[129,18,76,14,"prevIndex"],[129,27,76,2],[129,29,76,25],[130,0,77,3],[130,15,77,10],[130,16,78,4],[131,0,79,5,"translateY"],[131,10,79,5,"translateY"],[131,20,79,15],[131,22,79,17,"animatedTranslateValue"],[131,44,79,39],[131,45,79,40,"interpolate"],[131,56,79,17],[131,57,79,52],[132,0,80,6,"inputRange"],[132,12,80,6,"inputRange"],[132,22,80,16],[132,24,80,18],[132,25,80,19],[132,26,80,18],[132,28,80,22],[132,29,80,18],[132,30,79,52],[133,0,81,6,"outputRange"],[133,12,81,6,"outputRange"],[133,23,81,17],[133,25,81,19],[133,26,81,20,"height"],[133,32,81,26],[133,35,81,29,"prevIndex"],[133,44,81,19],[133,46,81,40,"height"],[133,52,81,46],[133,55,81,49,"index"],[133,60,81,19],[134,0,79,52],[134,11,79,17],[135,0,78,4],[135,9,77,10],[135,10,77,3],[136,0,85,3],[138,0,86,2],[138,10,86,6,"index"],[138,15,86,11],[138,18,86,14,"prevIndex"],[138,27,86,2],[138,29,86,25],[139,0,87,3],[139,15,87,10],[139,16,88,4],[140,0,89,5,"translateY"],[140,10,89,5,"translateY"],[140,20,89,15],[140,22,89,17,"animatedTranslateValue"],[140,44,89,39],[140,45,89,40,"interpolate"],[140,56,89,17],[140,57,89,52],[141,0,90,6,"inputRange"],[141,12,90,6,"inputRange"],[141,22,90,16],[141,24,90,18],[141,25,90,19],[141,26,90,18],[141,28,90,22],[141,29,90,18],[141,30,89,52],[142,0,91,6,"outputRange"],[142,12,91,6,"outputRange"],[142,23,91,17],[142,25,91,19],[142,26,91,20,"height"],[142,32,91,26],[142,35,91,29,"index"],[142,40,91,19],[142,42,91,36,"height"],[142,48,91,42],[142,51,91,45,"prevIndex"],[142,60,91,19],[143,0,89,52],[143,11,89,17],[144,0,88,4],[144,9,87,10],[144,10,87,3],[145,0,95,3],[147,0,96,2],[148,0,97,2],[150,0,99,1],[150,11,100,2],[150,40,100,3],[150,57,100,2],[151,0,100,8],[151,6,100,8],[151,11,100,13],[151,13,100,15],[152,0,100,17,"marginTop"],[152,8,100,17,"marginTop"],[152,17,100,26],[152,19,100,28],[153,0,100,15],[153,7,100,2],[154,0,100,2],[155,0,100,2],[156,0,100,2],[157,0,100,2],[158,0,100,2],[158,7,101,4,"transitionList"],[158,21,101,18],[158,22,101,19,"map"],[158,25,101,4],[158,26,101,23],[158,36,101,24,"list"],[158,40,101,23],[158,42,101,30,"index"],[158,47,101,23],[159,0,101,23],[159,13,102,4],[159,42,102,5],[159,63,102,4],[159,64,102,14],[159,68,102,4],[160,0,103,5],[160,8,103,5],[160,11,103,8],[160,13,103,10,"index"],[160,18,102,4],[161,0,104,5],[161,8,104,5],[161,13,104,10],[161,15,104,12],[162,0,105,6,"width"],[162,10,105,6,"width"],[162,15,105,11],[162,17,105,13],[162,20,104,12],[163,0,106,6,"height"],[163,10,106,6,"height"],[163,16,106,12],[163,18,106,14,"height"],[163,24,104,12],[164,0,107,6,"position"],[164,10,107,6,"position"],[164,18,107,14],[164,20,107,16],[164,30,104,12],[165,0,108,6,"top"],[165,10,108,6,"top"],[165,13,108,9],[165,15,108,11,"height"],[165,21,108,17],[165,24,108,20,"list"],[165,28,108,24],[165,29,108,25,"prevIndex"],[165,38,108,11],[165,42,108,38,"height"],[165,48,108,44],[165,51,108,47,"index"],[165,56,104,12],[166,0,109,6,"backgroundColor"],[166,10,109,6,"backgroundColor"],[166,25,109,21],[166,27,109,23,"list"],[166,31,109,27],[166,32,109,28,"color"],[166,37,104,12],[167,0,110,6,"transform"],[167,10,110,6,"transform"],[167,19,110,15],[167,21,110,17,"getTranslation"],[167,35,110,31],[167,36,110,32,"index"],[167,41,110,31],[167,43,110,39,"list"],[167,47,110,43],[167,48,110,44,"prevIndex"],[167,57,110,31],[168,0,104,12],[168,9,102,4],[169,0,102,4],[170,0,102,4],[171,0,102,4],[172,0,102,4],[173,0,102,4],[173,9,113,6,"console"],[173,16,113,13],[173,17,113,14,"log"],[173,20,113,6],[173,21,113,18,"list"],[173,25,113,6],[173,27,113,24,"index"],[173,32,113,6],[173,33,102,4],[173,35,114,5],[173,64,114,6],[173,81,114,5],[174,0,114,5],[175,0,114,5],[176,0,114,5],[177,0,114,5],[178,0,114,5],[178,9,115,7,"list"],[178,13,115,11],[178,14,115,12,"text"],[178,18,114,5],[178,25,115,19,"list"],[178,29,115,23],[178,30,115,24,"value"],[178,35,114,5],[178,36,102,4],[178,37,101,23],[179,0,101,23],[179,5,101,4],[179,6,100,2],[179,8,119,3],[179,37,119,4],[179,66,119,3],[180,0,119,21],[180,6,119,21],[180,13,119,28],[180,15,119,30],[181,0,119,30],[181,15,119,36,"startScaleAnimation"],[181,34,119,55],[181,36,119,30],[182,0,119,30],[182,7,119,3],[183,0,119,3],[184,0,119,3],[185,0,119,3],[186,0,119,3],[187,0,119,3],[187,7,120,4],[187,36,120,5],[187,53,120,4],[188,0,120,4],[189,0,120,4],[190,0,120,4],[191,0,120,4],[192,0,120,4],[192,16,119,3],[192,17,100,2],[192,18,99,1],[193,0,124,1],[195,5,29,24,"ConnexionScreen"],[195,20],[197,7,29,24,"ConnexionScreen"],[197,22]],"functionMap":{"names":["<global>","ConnexionScreen","List.sort$argument_0","animatedValue.addListener$argument_0","startScaleAnimation","NewList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;YCI,yCD;2BEM;EFE;CGE;iBCQ,4CD;UEU,gDF;WGC,yCH;YIK;IJI;EHE;CQE;ERsB;uBSI;ITiB;8BUC,2BV;CDK"}},"type":"js/module"}]}