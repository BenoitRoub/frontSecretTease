{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Screens/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 3,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var NewList = [{\n    value: 12,\n    text: \"Felix\"\n  }, {\n    value: 13,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen() {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(List.sort(function (list, _list) {\n      if (list.value > _list.value) return 1;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var height = 50;\n    (0, _react.useEffect)(function () {\n      var newTransitionList = transitionList.map(function (list, index) {\n        return _objectSpread({}, list, {\n          prevIndex: index\n        });\n      });\n      setTransitionList(newTransitionList);\n    }, []);\n\n    function startScaleAnimation(changed) {\n      var newTransitionList = transitionList.sort(function (list, _list) {\n        if (list.value < _list.value) return 1;\n        if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n      });\n      console.log(newTransitionList);\n\n      var _loop = function _loop(i) {\n        if (newTransitionList[i].value < NewList.find(function (list) {\n          return list.text === newTransitionList[i].text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          changed = true;\n        }\n      };\n\n      for (var i in newTransitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        console.log(newTransitionList);\n        var listtt = newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          if (list.value < _list.value) return 1;\n          if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n        });\n        console.log(\"sorted\", listtt);\n        setTransitionList(listtt);\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          duration: 500\n        }).start(function () {\n          return _reactNative.Animated.timing(animatedTranslateValue, {\n            toValue: 0,\n            duration: 1\n          }).start(function () {\n            if (changed) {\n              startScaleAnimation(false);\n            }\n          });\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -height * (prevIndex - index)]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, height * (index - prevIndex)]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      }\n    }, transitionList.sort(function (list, _list) {\n      if (list.value < _list.value) return 1;\n      if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n    }).map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 320,\n          height: height,\n          position: \"absolute\",\n          top: height * (list.prevIndex + 1) || height * (index + 1),\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: {\n        top: 300\n      },\n      onPress: function onPress() {\n        return startScaleAnimation(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      }\n    }, \"start \")));\n  }\n\n  _s(ConnexionScreen, \"X0a0+Tmrt9iXpr3+3UPMHrrrg8A=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":209,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,13],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,13],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,13],[40,4,18,0],[41,0,23,0],[41,6,23,6,"NewList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,13,24,1],[43,0,24,14,"text"],[43,4,24,14,"text"],[43,8,24,18],[43,10,24,20],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,13,25,1],[46,0,25,14,"text"],[46,4,25,14,"text"],[46,8,25,18],[46,10,25,20],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"ConnexionScreen"],[52,26,29,15],[52,29,29,42],[53,0,29,42],[55,0,29,42],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,42],[56,0,29,42],[57,0,29,42],[57,8,30,8,"animatedValue"],[57,21,29,42],[59,0,29,42],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,42],[60,0,29,42],[61,0,29,42],[61,8,31,8,"animatedTranslateValue"],[61,30,29,42],[63,0,29,42],[63,21,32,45],[63,42,33,2,"List"],[63,46,33,6],[63,47,33,7,"sort"],[63,51,33,2],[63,52,33,12],[63,62,33,13,"list"],[63,66,33,12],[63,68,33,19,"_list"],[63,73,33,12],[63,75,33,29],[64,0,34,3],[64,10,34,7,"list"],[64,14,34,11],[64,15,34,12,"value"],[64,20,34,7],[64,23,34,20,"_list"],[64,28,34,25],[64,29,34,26,"value"],[64,34,34,3],[64,36,34,33],[64,43,34,40],[64,44,34,33],[65,0,35,3],[65,5,33,2],[65,6,32,45],[65,7,29,42],[66,0,29,42],[67,0,29,42],[67,8,32,8,"transitionList"],[67,22,29,42],[68,0,29,42],[68,8,32,24,"setTransitionList"],[68,25,29,42],[70,0,38,1],[70,8,38,7,"height"],[70,14,38,13],[70,17,38,16],[70,19,38,1],[71,0,39,1],[71,26,39,11],[71,38,39,17],[72,0,40,2],[72,10,40,8,"newTransitionList"],[72,27,40,25],[72,30,40,28,"transitionList"],[72,44,40,42],[72,45,40,43,"map"],[72,48,40,28],[72,49,40,47],[72,59,40,48,"list"],[72,63,40,47],[72,65,40,54,"index"],[72,70,40,47],[73,0,40,47],[73,33,41,6,"list"],[73,37,40,47],[74,0,42,3,"prevIndex"],[74,10,42,3,"prevIndex"],[74,19,42,12],[74,21,42,14,"index"],[75,0,40,47],[76,0,40,47],[76,7,40,28],[76,8,40,2],[77,0,44,2,"setTransitionList"],[77,6,44,2,"setTransitionList"],[77,23,44,19],[77,24,44,20,"newTransitionList"],[77,41,44,19],[77,42,44,2],[78,0,45,2],[78,5,39,1],[78,7,45,4],[78,9,39,1],[80,0,47,1],[80,13,47,10,"startScaleAnimation"],[80,32,47,1],[80,33,47,30,"changed"],[80,40,47,1],[80,42,47,39],[81,0,48,2],[81,10,48,8,"newTransitionList"],[81,27,48,25],[81,30,48,28,"transitionList"],[81,44,48,42],[81,45,48,43,"sort"],[81,49,48,28],[81,50,48,48],[81,60,48,49,"list"],[81,64,48,48],[81,66,48,55,"_list"],[81,71,48,48],[81,73,48,65],[82,0,49,3],[82,12,49,7,"list"],[82,16,49,11],[82,17,49,12,"value"],[82,22,49,7],[82,25,49,20,"_list"],[82,30,49,25],[82,31,49,26,"value"],[82,36,49,3],[82,38,49,33],[82,45,49,40],[82,46,49,33],[83,0,50,3],[83,12,50,7,"list"],[83,16,50,11],[83,17,50,12,"value"],[83,22,50,7],[83,27,50,22,"_list"],[83,32,50,27],[83,33,50,28,"value"],[83,38,50,7],[83,42,50,37,"list"],[83,46,50,41],[83,47,50,42,"prevIndex"],[83,56,50,37],[83,59,50,54,"_list"],[83,64,50,59],[83,65,50,60,"prevIndex"],[83,74,50,3],[83,76,51,4],[83,83,51,11],[83,84,51,4],[83,85,50,3],[83,90,52,8],[83,97,52,15],[83,98,52,16],[83,99,52,8],[84,0,53,3],[84,7,48,28],[84,8,48,2],[85,0,54,2,"console"],[85,6,54,2,"console"],[85,13,54,9],[85,14,54,10,"log"],[85,17,54,2],[85,18,54,14,"newTransitionList"],[85,35,54,2],[87,0,47,39],[87,33,55,13,"i"],[87,34,47,39],[88,0,56,3],[88,12,57,4,"newTransitionList"],[88,29,57,21],[88,30,57,22,"i"],[88,31,57,21],[88,32,57,4],[88,33,57,25,"value"],[88,38,57,4],[88,41,58,4,"NewList"],[88,48,58,11],[88,49,58,12,"find"],[88,53,58,4],[88,54,58,17],[88,64,58,17,"list"],[88,68,58,21],[89,0,58,21],[89,17,58,25,"list"],[89,21,58,29],[89,22,58,30,"text"],[89,26,58,25],[89,31,58,39,"newTransitionList"],[89,48,58,56],[89,49,58,57,"i"],[89,50,58,56],[89,51,58,39],[89,52,58,60,"text"],[89,56,58,21],[90,0,58,21],[90,9,58,4],[90,11,59,6,"value"],[90,16,56,3],[90,18,60,5],[91,0,61,4,"newTransitionList"],[91,10,61,4,"newTransitionList"],[91,27,61,21],[91,28,61,22,"i"],[91,29,61,21],[91,30,61,4],[91,31,61,25,"value"],[91,36,61,4],[91,40,61,34],[91,41,61,4],[92,0,62,4,"changed"],[92,10,62,4,"changed"],[92,17,62,11],[92,20,62,14],[92,24,62,4],[93,0,63,4],[94,0,47,39],[96,0,55,2],[96,11,55,7],[96,15,55,13,"i"],[96,16,55,2],[96,20,55,18,"newTransitionList"],[96,37,55,2],[96,39,55,37],[97,0,55,37],[97,14,55,13,"i"],[97,15,55,37],[98,0,64,3],[100,0,65,2],[100,10,65,6,"changed"],[100,17,65,2],[100,19,65,15],[101,0,66,3,"console"],[101,8,66,3,"console"],[101,15,66,10],[101,16,66,11,"log"],[101,19,66,3],[101,20,66,15,"newTransitionList"],[101,37,66,3],[102,0,67,3],[102,12,67,9,"listtt"],[102,18,67,15],[102,21,67,18,"newTransitionList"],[102,38,67,35],[102,39,68,5,"map"],[102,42,67,18],[102,43,68,9],[102,53,68,10,"list"],[102,57,68,9],[102,59,68,16,"index"],[102,64,68,9],[103,0,68,9],[103,35,68,32,"list"],[103,39,68,9],[104,0,68,38,"prevIndex"],[104,12,68,38,"prevIndex"],[104,21,68,47],[104,23,68,49,"index"],[105,0,68,9],[106,0,68,9],[106,9,67,18],[106,11,69,5,"sort"],[106,15,67,18],[106,16,69,10],[106,26,69,11,"list"],[106,30,69,10],[106,32,69,17,"_list"],[106,37,69,10],[106,39,69,27],[107,0,70,5],[107,14,70,9,"list"],[107,18,70,13],[107,19,70,14,"value"],[107,24,70,9],[107,27,70,22,"_list"],[107,32,70,27],[107,33,70,28,"value"],[107,38,70,5],[107,40,70,35],[107,47,70,42],[107,48,70,35],[108,0,71,5],[108,14,72,6,"list"],[108,18,72,10],[108,19,72,11,"value"],[108,24,72,6],[108,29,72,21,"_list"],[108,34,72,26],[108,35,72,27,"value"],[108,40,72,6],[108,44,73,6,"list"],[108,48,73,10],[108,49,73,11,"prevIndex"],[108,58,73,6],[108,61,73,23,"_list"],[108,66,73,28],[108,67,73,29,"prevIndex"],[108,76,71,5],[108,78,75,6],[108,85,75,13],[108,86,75,6],[108,87,71,5],[108,92,76,10],[108,99,76,17],[108,100,76,18],[108,101,76,10],[109,0,77,5],[109,9,67,18],[109,10,67,3],[110,0,78,3,"console"],[110,8,78,3,"console"],[110,15,78,10],[110,16,78,11,"log"],[110,19,78,3],[110,20,78,15],[110,28,78,3],[110,30,78,25,"listtt"],[110,36,78,3],[111,0,79,3,"setTransitionList"],[111,8,79,3,"setTransitionList"],[111,25,79,20],[111,26,79,21,"listtt"],[111,32,79,20],[111,33,79,3],[113,0,80,3,"Animated"],[113,30,80,12,"timing"],[113,36,80,3],[113,37,80,19,"animatedTranslateValue"],[113,59,80,3],[113,61,80,43],[114,0,81,4,"toValue"],[114,10,81,4,"toValue"],[114,17,81,11],[114,19,81,13],[114,20,80,43],[115,0,82,4,"duration"],[115,10,82,4,"duration"],[115,18,82,12],[115,20,82,14],[116,0,80,43],[116,9,80,3],[116,11,83,6,"start"],[116,16,80,3],[116,17,83,12],[117,0,83,12],[117,17,84,4,"Animated"],[117,39,84,13,"timing"],[117,45,84,4],[117,46,84,20,"animatedTranslateValue"],[117,68,84,4],[117,70,84,44],[118,0,85,5,"toValue"],[118,12,85,5,"toValue"],[118,19,85,12],[118,21,85,14],[118,22,84,44],[119,0,86,5,"duration"],[119,12,86,5,"duration"],[119,20,86,13],[119,22,86,15],[120,0,84,44],[120,11,84,4],[120,13,87,7,"start"],[120,18,84,4],[120,19,87,13],[120,31,87,19],[121,0,88,5],[121,16,88,9,"changed"],[121,23,88,5],[121,25,88,18],[122,0,89,6,"startScaleAnimation"],[122,14,89,6,"startScaleAnimation"],[122,33,89,25],[122,34,89,26],[122,39,89,25],[122,40,89,6],[123,0,90,6],[124,0,91,5],[124,11,84,4],[124,12,83,12],[125,0,83,12],[125,9,80,3],[126,0,93,3],[127,0,94,2],[129,0,96,1],[129,13,96,10,"getTranslation"],[129,27,96,1],[129,28,96,25,"index"],[129,33,96,1],[129,35,96,32,"prevIndex"],[129,44,96,1],[129,46,96,43],[130,0,97,2],[130,10,97,6,"index"],[130,15,97,11],[130,18,97,14,"prevIndex"],[130,27,97,2],[130,29,97,25],[131,0,98,3],[131,15,98,10],[131,16,99,4],[132,0,100,5,"translateY"],[132,10,100,5,"translateY"],[132,20,100,15],[132,22,100,17,"animatedTranslateValue"],[132,44,100,39],[132,45,100,40,"interpolate"],[132,56,100,17],[132,57,100,52],[133,0,101,6,"inputRange"],[133,12,101,6,"inputRange"],[133,22,101,16],[133,24,101,18],[133,25,101,19],[133,26,101,18],[133,28,101,22],[133,29,101,18],[133,30,100,52],[134,0,102,6,"outputRange"],[134,12,102,6,"outputRange"],[134,23,102,17],[134,25,102,19],[134,26,102,20],[134,27,102,19],[134,29,102,23],[134,30,102,24,"height"],[134,36,102,23],[134,40,102,34,"prevIndex"],[134,49,102,43],[134,52,102,46,"index"],[134,57,102,23],[134,58,102,19],[135,0,100,52],[135,11,100,17],[136,0,99,4],[136,9,98,10],[136,10,98,3],[137,0,106,3],[139,0,107,2],[139,10,107,6,"index"],[139,15,107,11],[139,18,107,14,"prevIndex"],[139,27,107,2],[139,29,107,25],[140,0,108,3],[140,15,108,10],[140,16,109,4],[141,0,110,5,"translateY"],[141,10,110,5,"translateY"],[141,20,110,15],[141,22,110,17,"animatedTranslateValue"],[141,44,110,39],[141,45,110,40,"interpolate"],[141,56,110,17],[141,57,110,52],[142,0,111,6,"inputRange"],[142,12,111,6,"inputRange"],[142,22,111,16],[142,24,111,18],[142,25,111,19],[142,26,111,18],[142,28,111,22],[142,29,111,18],[142,30,110,52],[143,0,112,6,"outputRange"],[143,12,112,6,"outputRange"],[143,23,112,17],[143,25,112,19],[143,26,112,20],[143,27,112,19],[143,29,112,23,"height"],[143,35,112,29],[143,39,112,33,"index"],[143,44,112,38],[143,47,112,41,"prevIndex"],[143,56,112,29],[143,57,112,19],[144,0,110,52],[144,11,110,17],[145,0,109,4],[145,9,108,10],[145,10,108,3],[146,0,116,3],[148,0,117,2],[149,0,118,2],[151,0,120,1],[151,11,121,2],[151,40,121,3],[151,57,121,2],[152,0,121,8],[152,6,121,8],[152,11,121,13],[152,13,121,15],[153,0,121,17,"marginTop"],[153,8,121,17,"marginTop"],[153,17,121,26],[153,19,121,28],[154,0,121,15],[154,7,121,2],[155,0,121,2],[156,0,121,2],[157,0,121,2],[158,0,121,2],[159,0,121,2],[159,7,122,4,"transitionList"],[159,21,122,18],[159,22,123,5,"sort"],[159,26,122,4],[159,27,123,10],[159,37,123,11,"list"],[159,41,123,10],[159,43,123,17,"_list"],[159,48,123,10],[159,50,123,27],[160,0,124,5],[160,10,124,9,"list"],[160,14,124,13],[160,15,124,14,"value"],[160,20,124,9],[160,23,124,22,"_list"],[160,28,124,27],[160,29,124,28,"value"],[160,34,124,5],[160,36,124,35],[160,43,124,42],[160,44,124,35],[161,0,125,5],[161,10,126,6,"list"],[161,14,126,10],[161,15,126,11,"value"],[161,20,126,6],[161,25,126,21,"_list"],[161,30,126,26],[161,31,126,27,"value"],[161,36,126,6],[161,40,127,6,"list"],[161,44,127,10],[161,45,127,11,"prevIndex"],[161,54,127,6],[161,57,127,23,"_list"],[161,62,127,28],[161,63,127,29,"prevIndex"],[161,72,125,5],[161,74,129,6],[161,81,129,13],[161,82,129,6],[161,83,125,5],[161,88,130,10],[161,95,130,17],[161,96,130,18],[161,97,130,10],[162,0,131,5],[162,5,122,4],[162,7,132,5,"map"],[162,10,122,4],[162,11,132,9],[162,21,132,10,"list"],[162,25,132,9],[162,27,132,16,"index"],[162,32,132,9],[163,0,132,9],[163,13,133,5],[163,42,133,6],[163,63,133,5],[163,64,133,15],[163,68,133,5],[164,0,134,6],[164,8,134,6],[164,11,134,9],[164,13,134,11,"index"],[164,18,133,5],[165,0,135,6],[165,8,135,6],[165,13,135,11],[165,15,135,13],[166,0,136,7,"width"],[166,10,136,7,"width"],[166,15,136,12],[166,17,136,14],[166,20,135,13],[167,0,137,7,"height"],[167,10,137,7,"height"],[167,16,137,13],[167,18,137,15,"height"],[167,24,135,13],[168,0,138,7,"position"],[168,10,138,7,"position"],[168,18,138,15],[168,20,138,17],[168,30,135,13],[169,0,139,7,"top"],[169,10,139,7,"top"],[169,13,139,10],[169,15,140,8,"height"],[169,21,140,14],[169,25,140,18,"list"],[169,29,140,22],[169,30,140,23,"prevIndex"],[169,39,140,18],[169,42,140,35],[169,43,140,14],[169,44,140,8],[169,48,141,8,"height"],[169,54,141,14],[169,58,141,18,"index"],[169,63,141,23],[169,66,141,26],[169,67,141,14],[169,68,135,13],[170,0,142,7,"backgroundColor"],[170,10,142,7,"backgroundColor"],[170,25,142,22],[170,27,142,24,"list"],[170,31,142,28],[170,32,142,29,"color"],[170,37,135,13],[171,0,143,7,"transform"],[171,10,143,7,"transform"],[171,19,143,16],[171,21,143,18,"getTranslation"],[171,35,143,32],[171,36,143,33,"index"],[171,41,143,32],[171,43,143,40,"list"],[171,47,143,44],[171,48,143,45,"prevIndex"],[171,57,143,32],[172,0,135,13],[172,9,133,5],[173,0,133,5],[174,0,133,5],[175,0,133,5],[176,0,133,5],[177,0,133,5],[177,9,146,6],[177,38,146,7],[177,55,146,6],[178,0,146,6],[179,0,146,6],[180,0,146,6],[181,0,146,6],[182,0,146,6],[182,9,147,8,"list"],[182,13,147,12],[182,14,147,13,"text"],[182,18,146,6],[182,25,147,20,"list"],[182,29,147,24],[182,30,147,25,"value"],[182,35,146,6],[182,36,133,5],[182,37,132,9],[183,0,132,9],[183,5,122,4],[183,6,121,2],[183,8,151,3],[183,37,151,4],[183,66,151,3],[184,0,152,4],[184,6,152,4],[184,11,152,9],[184,13,152,11],[185,0,152,13,"top"],[185,8,152,13,"top"],[185,11,152,16],[185,13,152,18],[186,0,152,11],[186,7,151,3],[187,0,153,4],[187,6,153,4],[187,13,153,11],[187,15,153,13],[188,0,153,13],[188,15,153,19,"startScaleAnimation"],[188,34,153,38],[188,35,153,39],[188,40,153,38],[188,41,153,13],[189,0,153,13],[189,7,151,3],[190,0,151,3],[191,0,151,3],[192,0,151,3],[193,0,151,3],[194,0,151,3],[194,7,155,4],[194,36,155,5],[194,53,155,4],[195,0,155,4],[196,0,155,4],[197,0,155,4],[198,0,155,4],[199,0,155,4],[199,16,151,3],[199,17,121,2],[199,18,120,1],[200,0,159,1],[202,5,29,24,"ConnexionScreen"],[202,20],[204,7,29,24,"ConnexionScreen"],[204,22]],"functionMap":{"names":["<global>","ConnexionScreen","List.sort$argument_0","useEffect$argument_0","transitionList.map$argument_0","startScaleAnimation","transitionList.sort$argument_0","NewList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.sort.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;YCI;GDE;WEI;+CCC;IDG;EFE;CIE;gDCC;GDK;iBEK,+CF;SGU,gDH;UIC;KJQ;YKM;MLQ;EJG;CUE;EVsB;UKK;KLQ;SWC;KXkB;aYG,gCZ;CDM"}},"type":"js/module"}]}