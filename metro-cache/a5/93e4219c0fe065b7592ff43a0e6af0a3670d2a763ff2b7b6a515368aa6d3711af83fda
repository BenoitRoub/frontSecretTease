{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Screens/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\"\n  }, {\n    value: 1,\n    text: \"Benoit\"\n  }, {\n    value: 6,\n    text: \"Morgane\"\n  }];\n  var NewList = [{\n    value: 15,\n    text: \"Felix\"\n  }, {\n    value: 20,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen() {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(List.sort(function (list, _list) {\n      return list.value < _list.value;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var _useState7 = (0, _react.useState)(true),\n        _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n        changed = _useState8[0],\n        setChanged = _useState8[1];\n\n    var height = 50;\n\n    var _useState9 = (0, _react.useState)(0),\n        _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n        value = _useState10[0],\n        setValue = _useState10[1];\n\n    animatedValue.addListener(function (_ref) {\n      var value = _ref.value;\n      setValue(value);\n    });\n\n    function startScaleAnimation() {\n      var newTransitionList = transitionList;\n      setChanged(false);\n\n      var _loop = function _loop(i) {\n        console.log(i);\n\n        if (transitionList[i].value < NewList.find(function (list) {\n          return list.text === transitionList[i].text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          setChanged(true);\n        }\n      };\n\n      for (var i in transitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        setTransitionList(newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          return list.value < _list.value;\n        }));\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          timing: 12000\n        }).start(function () {\n          if (changed) {\n            startScaleAnimation();\n          }\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [height * prevIndex, height * index]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [height * index, height * prevIndex]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      }\n    }, transitionList.map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 320,\n          height: height,\n          position: \"absolute\",\n          top: height * list.prevIndex || height * index,\n          backgroundColor: \"#253237\",\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        }\n      }, console.log(list, index), _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      onPress: function onPress() {\n        return startScaleAnimation();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      }\n    }, \"start \")));\n  }\n\n  _s(ConnexionScreen, \"eEtkQYV+ht9/h9HY7/ApEreU/8k=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":197,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[31,0,19,1],[31,3,18,13],[31,5,20,1],[32,0,20,3,"value"],[32,4,20,3,"value"],[32,9,20,8],[32,11,20,10],[32,12,20,1],[33,0,20,13,"text"],[33,4,20,13,"text"],[33,8,20,17],[33,10,20,19],[34,0,20,1],[34,3,18,13],[34,5,21,1],[35,0,21,3,"value"],[35,4,21,3,"value"],[35,9,21,8],[35,11,21,10],[35,12,21,1],[36,0,21,13,"text"],[36,4,21,13,"text"],[36,8,21,17],[36,10,21,19],[37,0,21,1],[37,3,18,13],[37,4,18,0],[38,0,23,0],[38,6,23,6,"NewList"],[38,13,23,13],[38,16,23,16],[38,17,24,1],[39,0,24,3,"value"],[39,4,24,3,"value"],[39,9,24,8],[39,11,24,10],[39,13,24,1],[40,0,24,14,"text"],[40,4,24,14,"text"],[40,8,24,18],[40,10,24,20],[41,0,24,1],[41,3,23,16],[41,5,25,1],[42,0,25,3,"value"],[42,4,25,3,"value"],[42,9,25,8],[42,11,25,10],[42,13,25,1],[43,0,25,14,"text"],[43,4,25,14,"text"],[43,8,25,18],[43,10,25,20],[44,0,25,1],[44,3,23,16],[44,5,26,1],[45,0,26,3,"value"],[45,4,26,3,"value"],[45,9,26,8],[45,11,26,10],[45,12,26,1],[46,0,26,13,"text"],[46,4,26,13,"text"],[46,8,26,17],[46,10,26,19],[47,0,26,1],[47,3,23,16],[47,4,23,0],[49,0,29,15],[49,11,29,24,"ConnexionScreen"],[49,26,29,15],[49,29,29,42],[50,0,29,42],[52,0,29,42],[52,20,30,25],[52,41,30,34],[52,45,30,38,"Animated"],[52,67,30,47,"Value"],[52,72,30,34],[52,73,30,53],[52,74,30,34],[52,75,30,25],[52,76,29,42],[53,0,29,42],[54,0,29,42],[54,8,30,8,"animatedValue"],[54,21,29,42],[56,0,29,42],[56,21,31,34],[56,42,31,43],[56,46,31,47,"Animated"],[56,68,31,56,"Value"],[56,73,31,43],[56,74,31,62],[56,75,31,43],[56,76,31,34],[56,77,29,42],[57,0,29,42],[58,0,29,42],[58,8,31,8,"animatedTranslateValue"],[58,30,29,42],[60,0,29,42],[60,21,32,45],[60,42,33,2,"List"],[60,46,33,6],[60,47,33,7,"sort"],[60,51,33,2],[60,52,33,12],[60,62,33,13,"list"],[60,66,33,12],[60,68,33,19,"_list"],[60,73,33,12],[61,0,33,12],[61,13,33,29,"list"],[61,17,33,33],[61,18,33,34,"value"],[61,23,33,29],[61,26,33,42,"_list"],[61,31,33,47],[61,32,33,48,"value"],[61,37,33,12],[62,0,33,12],[62,5,33,2],[62,6,32,45],[62,7,29,42],[63,0,29,42],[64,0,29,42],[64,8,32,8,"transitionList"],[64,22,29,42],[65,0,29,42],[65,8,32,24,"setTransitionList"],[65,25,29,42],[67,0,29,42],[67,21,35,31],[67,42,35,40],[67,46,35,31],[67,47,29,42],[68,0,29,42],[69,0,29,42],[69,8,35,8,"changed"],[69,15,29,42],[70,0,29,42],[70,8,35,17,"setChanged"],[70,18,29,42],[72,0,37,1],[72,8,37,7,"height"],[72,14,37,13],[72,17,37,16],[72,19,37,1],[74,0,29,42],[74,21,38,27],[74,42,38,36],[74,43,38,27],[74,44,29,42],[75,0,29,42],[76,0,29,42],[76,8,38,8,"value"],[76,13,29,42],[77,0,29,42],[77,8,38,15,"setValue"],[77,16,29,42],[79,0,39,1,"animatedValue"],[79,4,39,1,"animatedValue"],[79,17,39,14],[79,18,39,15,"addListener"],[79,29,39,1],[79,30,39,27],[79,46,39,42],[80,0,39,42],[80,10,39,30,"value"],[80,15,39,42],[80,23,39,30,"value"],[80,28,39,42],[81,0,40,2,"setValue"],[81,6,40,2,"setValue"],[81,14,40,10],[81,15,40,11,"value"],[81,20,40,10],[81,21,40,2],[82,0,41,2],[82,5,39,1],[84,0,43,1],[84,13,43,10,"startScaleAnimation"],[84,32,43,1],[84,35,43,32],[85,0,44,2],[85,10,44,6,"newTransitionList"],[85,27,44,23],[85,30,44,26,"transitionList"],[85,44,44,2],[86,0,45,2,"setChanged"],[86,6,45,2,"setChanged"],[86,16,45,12],[86,17,45,13],[86,22,45,12],[86,23,45,2],[88,0,43,32],[88,33,47,13,"i"],[88,34,43,32],[89,0,48,3,"console"],[89,8,48,3,"console"],[89,15,48,10],[89,16,48,11,"log"],[89,19,48,3],[89,20,48,15,"i"],[89,21,48,3],[91,0,49,3],[91,12,50,4,"transitionList"],[91,26,50,18],[91,27,50,19,"i"],[91,28,50,18],[91,29,50,4],[91,30,50,22,"value"],[91,35,50,4],[91,38,51,4,"NewList"],[91,45,51,11],[91,46,51,12,"find"],[91,50,51,4],[91,51,51,17],[91,61,51,17,"list"],[91,65,51,21],[92,0,51,21],[92,17,51,25,"list"],[92,21,51,29],[92,22,51,30,"text"],[92,26,51,25],[92,31,51,39,"transitionList"],[92,45,51,53],[92,46,51,54,"i"],[92,47,51,53],[92,48,51,39],[92,49,51,57,"text"],[92,53,51,21],[93,0,51,21],[93,9,51,4],[93,11,51,63,"value"],[93,16,49,3],[93,18,52,5],[94,0,53,4,"newTransitionList"],[94,10,53,4,"newTransitionList"],[94,27,53,21],[94,28,53,22,"i"],[94,29,53,21],[94,30,53,4],[94,31,53,25,"value"],[94,36,53,4],[94,40,53,34],[94,41,53,4],[95,0,54,4,"setChanged"],[95,10,54,4,"setChanged"],[95,20,54,14],[95,21,54,15],[95,25,54,14],[95,26,54,4],[96,0,55,4],[97,0,43,32],[99,0,47,2],[99,11,47,7],[99,15,47,13,"i"],[99,16,47,2],[99,20,47,18,"transitionList"],[99,34,47,2],[99,36,47,34],[100,0,47,34],[100,14,47,13,"i"],[100,15,47,34],[101,0,56,3],[103,0,57,2],[103,10,57,6,"changed"],[103,17,57,2],[103,19,57,15],[104,0,58,3,"setTransitionList"],[104,8,58,3,"setTransitionList"],[104,25,58,20],[104,26,59,4,"newTransitionList"],[104,43,59,21],[104,44,60,6,"map"],[104,47,59,4],[104,48,60,10],[104,58,60,11,"list"],[104,62,60,10],[104,64,60,17,"index"],[104,69,60,10],[105,0,60,10],[105,35,60,33,"list"],[105,39,60,10],[106,0,60,39,"prevIndex"],[106,12,60,39,"prevIndex"],[106,21,60,48],[106,23,60,50,"index"],[107,0,60,10],[108,0,60,10],[108,9,59,4],[108,11,61,6,"sort"],[108,15,59,4],[108,16,61,11],[108,26,61,12,"list"],[108,30,61,11],[108,32,61,18,"_list"],[108,37,61,11],[109,0,61,11],[109,17,61,28,"list"],[109,21,61,32],[109,22,61,33,"value"],[109,27,61,28],[109,30,61,41,"_list"],[109,35,61,46],[109,36,61,47,"value"],[109,41,61,11],[110,0,61,11],[110,9,59,4],[110,10,58,20],[110,11,58,3],[112,0,63,3,"Animated"],[112,30,63,12,"timing"],[112,36,63,3],[112,37,63,19,"animatedTranslateValue"],[112,59,63,3],[112,61,63,43],[113,0,64,4,"toValue"],[113,10,64,4,"toValue"],[113,17,64,11],[113,19,64,13],[113,20,63,43],[114,0,65,4,"timing"],[114,10,65,4,"timing"],[114,16,65,10],[114,18,65,12],[115,0,63,43],[115,9,63,3],[115,11,66,6,"start"],[115,16,63,3],[115,17,66,12],[115,29,66,18],[116,0,67,4],[116,14,67,8,"changed"],[116,21,67,4],[116,23,67,17],[117,0,68,5,"startScaleAnimation"],[117,12,68,5,"startScaleAnimation"],[117,31,68,24],[118,0,69,5],[119,0,70,4],[119,9,63,3],[120,0,71,3],[121,0,72,2],[123,0,74,1],[123,13,74,10,"getTranslation"],[123,27,74,1],[123,28,74,25,"index"],[123,33,74,1],[123,35,74,32,"prevIndex"],[123,44,74,1],[123,46,74,43],[124,0,75,2],[124,10,75,6,"index"],[124,15,75,11],[124,18,75,14,"prevIndex"],[124,27,75,2],[124,29,75,25],[125,0,76,3],[125,15,76,10],[125,16,77,4],[126,0,78,5,"translateY"],[126,10,78,5,"translateY"],[126,20,78,15],[126,22,78,17,"animatedTranslateValue"],[126,44,78,39],[126,45,78,40,"interpolate"],[126,56,78,17],[126,57,78,52],[127,0,79,6,"inputRange"],[127,12,79,6,"inputRange"],[127,22,79,16],[127,24,79,18],[127,25,79,19],[127,26,79,18],[127,28,79,22],[127,29,79,18],[127,30,78,52],[128,0,80,6,"outputRange"],[128,12,80,6,"outputRange"],[128,23,80,17],[128,25,80,19],[128,26,80,20,"height"],[128,32,80,26],[128,35,80,29,"prevIndex"],[128,44,80,19],[128,46,80,40,"height"],[128,52,80,46],[128,55,80,49,"index"],[128,60,80,19],[129,0,78,52],[129,11,78,17],[130,0,77,4],[130,9,76,10],[130,10,76,3],[131,0,84,3],[133,0,85,2],[133,10,85,6,"index"],[133,15,85,11],[133,18,85,14,"prevIndex"],[133,27,85,2],[133,29,85,25],[134,0,86,3],[134,15,86,10],[134,16,87,4],[135,0,88,5,"translateY"],[135,10,88,5,"translateY"],[135,20,88,15],[135,22,88,17,"animatedTranslateValue"],[135,44,88,39],[135,45,88,40,"interpolate"],[135,56,88,17],[135,57,88,52],[136,0,89,6,"inputRange"],[136,12,89,6,"inputRange"],[136,22,89,16],[136,24,89,18],[136,25,89,19],[136,26,89,18],[136,28,89,22],[136,29,89,18],[136,30,88,52],[137,0,90,6,"outputRange"],[137,12,90,6,"outputRange"],[137,23,90,17],[137,25,90,19],[137,26,90,20,"height"],[137,32,90,26],[137,35,90,29,"index"],[137,40,90,19],[137,42,90,36,"height"],[137,48,90,42],[137,51,90,45,"prevIndex"],[137,60,90,19],[138,0,88,52],[138,11,88,17],[139,0,87,4],[139,9,86,10],[139,10,86,3],[140,0,94,3],[142,0,95,2],[143,0,96,2],[145,0,98,1],[145,11,99,2],[145,40,99,3],[145,57,99,2],[146,0,99,8],[146,6,99,8],[146,11,99,13],[146,13,99,15],[147,0,99,17,"marginTop"],[147,8,99,17,"marginTop"],[147,17,99,26],[147,19,99,28],[148,0,99,15],[148,7,99,2],[149,0,99,2],[150,0,99,2],[151,0,99,2],[152,0,99,2],[153,0,99,2],[153,7,100,4,"transitionList"],[153,21,100,18],[153,22,100,19,"map"],[153,25,100,4],[153,26,100,23],[153,36,100,24,"list"],[153,40,100,23],[153,42,100,30,"index"],[153,47,100,23],[154,0,100,23],[154,13,101,4],[154,42,101,5],[154,63,101,4],[154,64,101,14],[154,68,101,4],[155,0,102,5],[155,8,102,5],[155,11,102,8],[155,13,102,10,"index"],[155,18,101,4],[156,0,103,5],[156,8,103,5],[156,13,103,10],[156,15,103,12],[157,0,104,6,"width"],[157,10,104,6,"width"],[157,15,104,11],[157,17,104,13],[157,20,103,12],[158,0,105,6,"height"],[158,10,105,6,"height"],[158,16,105,12],[158,18,105,14,"height"],[158,24,103,12],[159,0,106,6,"position"],[159,10,106,6,"position"],[159,18,106,14],[159,20,106,16],[159,30,103,12],[160,0,107,6,"top"],[160,10,107,6,"top"],[160,13,107,9],[160,15,107,11,"height"],[160,21,107,17],[160,24,107,20,"list"],[160,28,107,24],[160,29,107,25,"prevIndex"],[160,38,107,11],[160,42,107,38,"height"],[160,48,107,44],[160,51,107,47,"index"],[160,56,103,12],[161,0,108,6,"backgroundColor"],[161,10,108,6,"backgroundColor"],[161,25,108,21],[161,27,108,23],[161,36,103,12],[162,0,109,6,"transform"],[162,10,109,6,"transform"],[162,19,109,15],[162,21,109,17,"getTranslation"],[162,35,109,31],[162,36,109,32,"index"],[162,41,109,31],[162,43,109,39,"list"],[162,47,109,43],[162,48,109,44,"prevIndex"],[162,57,109,31],[163,0,103,12],[163,9,101,4],[164,0,101,4],[165,0,101,4],[166,0,101,4],[167,0,101,4],[168,0,101,4],[168,9,112,6,"console"],[168,16,112,13],[168,17,112,14,"log"],[168,20,112,6],[168,21,112,18,"list"],[168,25,112,6],[168,27,112,24,"index"],[168,32,112,6],[168,33,101,4],[168,35,113,5],[168,64,113,6],[168,81,113,5],[169,0,113,5],[170,0,113,5],[171,0,113,5],[172,0,113,5],[173,0,113,5],[173,9,114,7,"list"],[173,13,114,11],[173,14,114,12,"text"],[173,18,113,5],[173,25,114,19,"list"],[173,29,114,23],[173,30,114,24,"value"],[173,35,113,5],[173,36,101,4],[173,37,100,23],[174,0,100,23],[174,5,100,4],[174,6,99,2],[174,8,118,3],[174,37,118,4],[174,66,118,3],[175,0,118,21],[175,6,118,21],[175,13,118,28],[175,15,118,30],[176,0,118,30],[176,15,118,36,"startScaleAnimation"],[176,34,118,55],[176,36,118,30],[177,0,118,30],[177,7,118,3],[178,0,118,3],[179,0,118,3],[180,0,118,3],[181,0,118,3],[182,0,118,3],[182,7,119,4],[182,36,119,5],[182,53,119,4],[183,0,119,4],[184,0,119,4],[185,0,119,4],[186,0,119,4],[187,0,119,4],[187,16,118,3],[187,17,99,2],[187,18,98,1],[188,0,123,1],[190,5,29,24,"ConnexionScreen"],[190,20],[192,7,29,24,"ConnexionScreen"],[192,22]],"functionMap":{"names":["<global>","ConnexionScreen","List.sort$argument_0","animatedValue.addListener$argument_0","startScaleAnimation","NewList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;YCI,yCD;2BEM;EFE;CGE;iBCQ,4CD;UES,gDF;WGC,yCH;YIK;IJI;EHE;CQE;ERsB;uBSI;ITiB;8BUC,2BV;CDK"}},"type":"js/module"}]}