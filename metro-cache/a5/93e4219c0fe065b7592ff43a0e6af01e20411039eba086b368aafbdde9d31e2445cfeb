{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Screens/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 3,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var NewList = [{\n    value: 11,\n    text: \"Felix\"\n  }, {\n    value: 13,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen() {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(List.sort(function (list, _list) {\n      return list.value < _list.value;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var height = 50;\n\n    function startScaleAnimation(changed) {\n      var newTransitionList = transitionList;\n\n      var _loop = function _loop(i) {\n        if (transitionList[i].value < NewList.find(function (list) {\n          return list.text === transitionList[i].text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          changed = true;\n        }\n      };\n\n      for (var i in transitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        setTransitionList(newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          if (list.value < _list.value && list.prevIndex > _list.prevIndex) return 1;else return -1;\n        }));\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          duration: 500\n        }).start(function () {\n          return _reactNative.Animated.timing(animatedTranslateValue, {\n            toValue: 0,\n            duration: 1\n          }).start(function () {\n            if (changed) {\n              startScaleAnimation(false);\n            }\n          });\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -height]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, height]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      }\n    }, transitionList.sort(function (list, _list) {\n      if (list.value < _list.value && list.prevIndex > _list.prevIndex) return 1;else return -1;\n    }).map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 320,\n          height: height,\n          position: \"absolute\",\n          top: height * (list.prevIndex + 1) || height * (index + 1),\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: {\n        top: 300\n      },\n      onPress: function onPress() {\n        return startScaleAnimation(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      }\n    }, \"start \")));\n  }\n\n  _s(ConnexionScreen, \"7LsDFqLLL0YGYUgkYz3QOycd2Do=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":192,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,13],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,13],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,13],[40,4,18,0],[41,0,23,0],[41,6,23,6,"NewList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,13,24,1],[43,0,24,14,"text"],[43,4,24,14,"text"],[43,8,24,18],[43,10,24,20],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,13,25,1],[46,0,25,14,"text"],[46,4,25,14,"text"],[46,8,25,18],[46,10,25,20],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"ConnexionScreen"],[52,26,29,15],[52,29,29,42],[53,0,29,42],[55,0,29,42],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,42],[56,0,29,42],[57,0,29,42],[57,8,30,8,"animatedValue"],[57,21,29,42],[59,0,29,42],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,42],[60,0,29,42],[61,0,29,42],[61,8,31,8,"animatedTranslateValue"],[61,30,29,42],[63,0,29,42],[63,21,32,45],[63,42,33,2,"List"],[63,46,33,6],[63,47,33,7,"sort"],[63,51,33,2],[63,52,33,12],[63,62,33,13,"list"],[63,66,33,12],[63,68,33,19,"_list"],[63,73,33,12],[64,0,33,12],[64,13,33,29,"list"],[64,17,33,33],[64,18,33,34,"value"],[64,23,33,29],[64,26,33,42,"_list"],[64,31,33,47],[64,32,33,48,"value"],[64,37,33,12],[65,0,33,12],[65,5,33,2],[65,6,32,45],[65,7,29,42],[66,0,29,42],[67,0,29,42],[67,8,32,8,"transitionList"],[67,22,29,42],[68,0,29,42],[68,8,32,24,"setTransitionList"],[68,25,29,42],[70,0,36,1],[70,8,36,7,"height"],[70,14,36,13],[70,17,36,16],[70,19,36,1],[72,0,38,1],[72,13,38,10,"startScaleAnimation"],[72,32,38,1],[72,33,38,30,"changed"],[72,40,38,1],[72,42,38,39],[73,0,39,2],[73,10,39,6,"newTransitionList"],[73,27,39,23],[73,30,39,26,"transitionList"],[73,44,39,2],[75,0,38,39],[75,33,40,13,"i"],[75,34,38,39],[76,0,41,3],[76,12,42,4,"transitionList"],[76,26,42,18],[76,27,42,19,"i"],[76,28,42,18],[76,29,42,4],[76,30,42,22,"value"],[76,35,42,4],[76,38,43,4,"NewList"],[76,45,43,11],[76,46,43,12,"find"],[76,50,43,4],[76,51,43,17],[76,61,43,17,"list"],[76,65,43,21],[77,0,43,21],[77,17,43,25,"list"],[77,21,43,29],[77,22,43,30,"text"],[77,26,43,25],[77,31,43,39,"transitionList"],[77,45,43,53],[77,46,43,54,"i"],[77,47,43,53],[77,48,43,39],[77,49,43,57,"text"],[77,53,43,21],[78,0,43,21],[78,9,43,4],[78,11,43,63,"value"],[78,16,41,3],[78,18,44,5],[79,0,45,4,"newTransitionList"],[79,10,45,4,"newTransitionList"],[79,27,45,21],[79,28,45,22,"i"],[79,29,45,21],[79,30,45,4],[79,31,45,25,"value"],[79,36,45,4],[79,40,45,34],[79,41,45,4],[80,0,46,4,"changed"],[80,10,46,4,"changed"],[80,17,46,11],[80,20,46,14],[80,24,46,4],[81,0,47,4],[82,0,38,39],[84,0,40,2],[84,11,40,7],[84,15,40,13,"i"],[84,16,40,2],[84,20,40,18,"transitionList"],[84,34,40,2],[84,36,40,34],[85,0,40,34],[85,14,40,13,"i"],[85,15,40,34],[86,0,48,3],[88,0,49,2],[88,10,49,6,"changed"],[88,17,49,2],[88,19,49,15],[89,0,50,3,"setTransitionList"],[89,8,50,3,"setTransitionList"],[89,25,50,20],[89,26,51,4,"newTransitionList"],[89,43,51,21],[89,44,52,6,"map"],[89,47,51,4],[89,48,52,10],[89,58,52,11,"list"],[89,62,52,10],[89,64,52,17,"index"],[89,69,52,10],[90,0,52,10],[90,35,52,33,"list"],[90,39,52,10],[91,0,52,39,"prevIndex"],[91,12,52,39,"prevIndex"],[91,21,52,48],[91,23,52,50,"index"],[92,0,52,10],[93,0,52,10],[93,9,51,4],[93,11,53,6,"sort"],[93,15,51,4],[93,16,53,11],[93,26,53,12,"list"],[93,30,53,11],[93,32,53,18,"_list"],[93,37,53,11],[93,39,53,28],[94,0,54,6],[94,14,55,7,"list"],[94,18,55,11],[94,19,55,12,"value"],[94,24,55,7],[94,27,55,20,"_list"],[94,32,55,25],[94,33,55,26,"value"],[94,38,55,7],[94,42,56,7,"list"],[94,46,56,11],[94,47,56,12,"prevIndex"],[94,56,56,7],[94,59,56,24,"_list"],[94,64,56,29],[94,65,56,30,"prevIndex"],[94,74,54,6],[94,76,58,7],[94,83,58,14],[94,84,58,7],[94,85,54,6],[94,90,59,11],[94,97,59,18],[94,98,59,19],[94,99,59,11],[95,0,60,6],[95,9,51,4],[95,10,50,20],[95,11,50,3],[97,0,62,3,"Animated"],[97,30,62,12,"timing"],[97,36,62,3],[97,37,62,19,"animatedTranslateValue"],[97,59,62,3],[97,61,62,43],[98,0,63,4,"toValue"],[98,10,63,4,"toValue"],[98,17,63,11],[98,19,63,13],[98,20,62,43],[99,0,64,4,"duration"],[99,10,64,4,"duration"],[99,18,64,12],[99,20,64,14],[100,0,62,43],[100,9,62,3],[100,11,65,6,"start"],[100,16,62,3],[100,17,65,12],[101,0,65,12],[101,17,66,4,"Animated"],[101,39,66,13,"timing"],[101,45,66,4],[101,46,66,20,"animatedTranslateValue"],[101,68,66,4],[101,70,66,44],[102,0,67,5,"toValue"],[102,12,67,5,"toValue"],[102,19,67,12],[102,21,67,14],[102,22,66,44],[103,0,68,5,"duration"],[103,12,68,5,"duration"],[103,20,68,13],[103,22,68,15],[104,0,66,44],[104,11,66,4],[104,13,69,7,"start"],[104,18,66,4],[104,19,69,13],[104,31,69,19],[105,0,70,5],[105,16,70,9,"changed"],[105,23,70,5],[105,25,70,18],[106,0,71,6,"startScaleAnimation"],[106,14,71,6,"startScaleAnimation"],[106,33,71,25],[106,34,71,26],[106,39,71,25],[106,40,71,6],[107,0,72,6],[108,0,73,5],[108,11,66,4],[108,12,65,12],[109,0,65,12],[109,9,62,3],[110,0,75,3],[111,0,76,2],[113,0,78,1],[113,13,78,10,"getTranslation"],[113,27,78,1],[113,28,78,25,"index"],[113,33,78,1],[113,35,78,32,"prevIndex"],[113,44,78,1],[113,46,78,43],[114,0,79,2],[114,10,79,6,"index"],[114,15,79,11],[114,18,79,14,"prevIndex"],[114,27,79,2],[114,29,79,25],[115,0,80,3],[115,15,80,10],[115,16,81,4],[116,0,82,5,"translateY"],[116,10,82,5,"translateY"],[116,20,82,15],[116,22,82,17,"animatedTranslateValue"],[116,44,82,39],[116,45,82,40,"interpolate"],[116,56,82,17],[116,57,82,52],[117,0,83,6,"inputRange"],[117,12,83,6,"inputRange"],[117,22,83,16],[117,24,83,18],[117,25,83,19],[117,26,83,18],[117,28,83,22],[117,29,83,18],[117,30,82,52],[118,0,84,6,"outputRange"],[118,12,84,6,"outputRange"],[118,23,84,17],[118,25,84,19],[118,26,84,20],[118,27,84,19],[118,29,84,23],[118,30,84,24,"height"],[118,36,84,19],[119,0,82,52],[119,11,82,17],[120,0,81,4],[120,9,80,10],[120,10,80,3],[121,0,88,3],[123,0,89,2],[123,10,89,6,"index"],[123,15,89,11],[123,18,89,14,"prevIndex"],[123,27,89,2],[123,29,89,25],[124,0,90,3],[124,15,90,10],[124,16,91,4],[125,0,92,5,"translateY"],[125,10,92,5,"translateY"],[125,20,92,15],[125,22,92,17,"animatedTranslateValue"],[125,44,92,39],[125,45,92,40,"interpolate"],[125,56,92,17],[125,57,92,52],[126,0,93,6,"inputRange"],[126,12,93,6,"inputRange"],[126,22,93,16],[126,24,93,18],[126,25,93,19],[126,26,93,18],[126,28,93,22],[126,29,93,18],[126,30,92,52],[127,0,94,6,"outputRange"],[127,12,94,6,"outputRange"],[127,23,94,17],[127,25,94,19],[127,26,94,20],[127,27,94,19],[127,29,94,23,"height"],[127,35,94,19],[128,0,92,52],[128,11,92,17],[129,0,91,4],[129,9,90,10],[129,10,90,3],[130,0,98,3],[132,0,99,2],[133,0,100,2],[135,0,102,1],[135,11,103,2],[135,40,103,3],[135,57,103,2],[136,0,103,8],[136,6,103,8],[136,11,103,13],[136,13,103,15],[137,0,103,17,"marginTop"],[137,8,103,17,"marginTop"],[137,17,103,26],[137,19,103,28],[138,0,103,15],[138,7,103,2],[139,0,103,2],[140,0,103,2],[141,0,103,2],[142,0,103,2],[143,0,103,2],[143,7,104,4,"transitionList"],[143,21,104,18],[143,22,105,5,"sort"],[143,26,104,4],[143,27,105,10],[143,37,105,11,"list"],[143,41,105,10],[143,43,105,17,"_list"],[143,48,105,10],[143,50,105,27],[144,0,106,5],[144,10,107,6,"list"],[144,14,107,10],[144,15,107,11,"value"],[144,20,107,6],[144,23,107,19,"_list"],[144,28,107,24],[144,29,107,25,"value"],[144,34,107,6],[144,38,108,6,"list"],[144,42,108,10],[144,43,108,11,"prevIndex"],[144,52,108,6],[144,55,108,23,"_list"],[144,60,108,28],[144,61,108,29,"prevIndex"],[144,70,106,5],[144,72,110,6],[144,79,110,13],[144,80,110,6],[144,81,106,5],[144,86,111,10],[144,93,111,17],[144,94,111,18],[144,95,111,10],[145,0,112,5],[145,5,104,4],[145,7,113,5,"map"],[145,10,104,4],[145,11,113,9],[145,21,113,10,"list"],[145,25,113,9],[145,27,113,16,"index"],[145,32,113,9],[146,0,113,9],[146,13,114,5],[146,42,114,6],[146,63,114,5],[146,64,114,15],[146,68,114,5],[147,0,115,6],[147,8,115,6],[147,11,115,9],[147,13,115,11,"index"],[147,18,114,5],[148,0,116,6],[148,8,116,6],[148,13,116,11],[148,15,116,13],[149,0,117,7,"width"],[149,10,117,7,"width"],[149,15,117,12],[149,17,117,14],[149,20,116,13],[150,0,118,7,"height"],[150,10,118,7,"height"],[150,16,118,13],[150,18,118,15,"height"],[150,24,116,13],[151,0,119,7,"position"],[151,10,119,7,"position"],[151,18,119,15],[151,20,119,17],[151,30,116,13],[152,0,120,7,"top"],[152,10,120,7,"top"],[152,13,120,10],[152,15,121,8,"height"],[152,21,121,14],[152,25,121,18,"list"],[152,29,121,22],[152,30,121,23,"prevIndex"],[152,39,121,18],[152,42,121,35],[152,43,121,14],[152,44,121,8],[152,48,122,8,"height"],[152,54,122,14],[152,58,122,18,"index"],[152,63,122,23],[152,66,122,26],[152,67,122,14],[152,68,116,13],[153,0,123,7,"backgroundColor"],[153,10,123,7,"backgroundColor"],[153,25,123,22],[153,27,123,24,"list"],[153,31,123,28],[153,32,123,29,"color"],[153,37,116,13],[154,0,124,7,"transform"],[154,10,124,7,"transform"],[154,19,124,16],[154,21,124,18,"getTranslation"],[154,35,124,32],[154,36,124,33,"index"],[154,41,124,32],[154,43,124,40,"list"],[154,47,124,44],[154,48,124,45,"prevIndex"],[154,57,124,32],[155,0,116,13],[155,9,114,5],[156,0,114,5],[157,0,114,5],[158,0,114,5],[159,0,114,5],[160,0,114,5],[160,9,127,6],[160,38,127,7],[160,55,127,6],[161,0,127,6],[162,0,127,6],[163,0,127,6],[164,0,127,6],[165,0,127,6],[165,9,128,8,"list"],[165,13,128,12],[165,14,128,13,"text"],[165,18,127,6],[165,25,128,20,"list"],[165,29,128,24],[165,30,128,25,"value"],[165,35,127,6],[165,36,114,5],[165,37,113,9],[166,0,113,9],[166,5,104,4],[166,6,103,2],[166,8,132,3],[166,37,132,4],[166,66,132,3],[167,0,133,4],[167,6,133,4],[167,11,133,9],[167,13,133,11],[168,0,133,13,"top"],[168,8,133,13,"top"],[168,11,133,16],[168,13,133,18],[169,0,133,11],[169,7,132,3],[170,0,134,4],[170,6,134,4],[170,13,134,11],[170,15,134,13],[171,0,134,13],[171,15,134,19,"startScaleAnimation"],[171,34,134,38],[171,35,134,39],[171,40,134,38],[171,41,134,13],[172,0,134,13],[172,7,132,3],[173,0,132,3],[174,0,132,3],[175,0,132,3],[176,0,132,3],[177,0,132,3],[177,7,136,4],[177,36,136,5],[177,53,136,4],[178,0,136,4],[179,0,136,4],[180,0,136,4],[181,0,136,4],[182,0,136,4],[182,16,132,3],[182,17,103,2],[182,18,102,1],[183,0,140,1],[185,5,29,24,"ConnexionScreen"],[185,20],[187,7,29,24,"ConnexionScreen"],[187,22]],"functionMap":{"names":["<global>","ConnexionScreen","List.sort$argument_0","startScaleAnimation","NewList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.sort$argument_0","transitionList.sort.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;YCI,yCD;CEK;iBCK,4CD;UES,gDF;WGC;MHO;YIK;MJQ;EFG;COE;EPsB;UQK;KRO;SSC;KTkB;aUG,gCV;CDM"}},"type":"js/module"}]}