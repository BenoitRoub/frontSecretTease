{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Screens/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 3,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var NewList = [{\n    value: 6,\n    text: \"Felix\"\n  }, {\n    value: 6,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen() {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(List.sort(function (list, _list) {\n      if (list.value > _list.value) return 1;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var height = 50;\n\n    function startScaleAnimation(changed) {\n      var newTransitionList = transitionList.map(function (list, index) {\n        return _objectSpread({}, list, {\n          prevIndex: index\n        });\n      });\n      console.log(newTransitionList);\n      transitionList.sort(function (list, _list) {\n        if (list.value < _list.value) return 1;\n        if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n      });\n      console.log(transitionList);\n\n      var _loop = function _loop(i) {\n        if (transitionList[i].value < NewList.find(function (list) {\n          return list.text === transitionList[i].text;\n        }).value) {\n          transitionList[i].value += 1;\n          changed = true;\n        }\n      };\n\n      for (var i in transitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        console.log(transitionList);\n        var listtt = transitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          if (list.value < _list.value) return 1;\n          if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n        });\n        console.log(\"sorted\", listtt);\n        setTransitionList(listtt);\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          duration: 500\n        }).start(function () {\n          return _reactNative.Animated.timing(animatedTranslateValue, {\n            toValue: 0,\n            duration: 1\n          }).start(function () {\n            if (changed) {\n              startScaleAnimation(false);\n            }\n          });\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -height]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, height]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      }\n    }, transitionList.sort(function (list, _list) {\n      if (list.value < _list.value) return 1;\n      if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n    }).map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 320,\n          height: height,\n          position: \"absolute\",\n          top: height * (list.prevIndex + 1) || height * (index + 1),\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: {\n        top: 300\n      },\n      onPress: function onPress() {\n        return startScaleAnimation(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      }\n    }, \"start \")));\n  }\n\n  _s(ConnexionScreen, \"PI8oGq4oZWqlQTD53ehlTS4jib0=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":207,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,13],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,13],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,13],[40,4,18,0],[41,0,23,0],[41,6,23,6,"NewList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,12,24,1],[43,0,24,13,"text"],[43,4,24,13,"text"],[43,8,24,17],[43,10,24,19],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,12,25,1],[46,0,25,13,"text"],[46,4,25,13,"text"],[46,8,25,17],[46,10,25,19],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"ConnexionScreen"],[52,26,29,15],[52,29,29,42],[53,0,29,42],[55,0,29,42],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,42],[56,0,29,42],[57,0,29,42],[57,8,30,8,"animatedValue"],[57,21,29,42],[59,0,29,42],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,42],[60,0,29,42],[61,0,29,42],[61,8,31,8,"animatedTranslateValue"],[61,30,29,42],[63,0,29,42],[63,21,32,45],[63,42,33,2,"List"],[63,46,33,6],[63,47,33,7,"sort"],[63,51,33,2],[63,52,33,12],[63,62,33,13,"list"],[63,66,33,12],[63,68,33,19,"_list"],[63,73,33,12],[63,75,33,29],[64,0,34,3],[64,10,34,7,"list"],[64,14,34,11],[64,15,34,12,"value"],[64,20,34,7],[64,23,34,20,"_list"],[64,28,34,25],[64,29,34,26,"value"],[64,34,34,3],[64,36,34,33],[64,43,34,40],[64,44,34,33],[65,0,35,3],[65,5,33,2],[65,6,32,45],[65,7,29,42],[66,0,29,42],[67,0,29,42],[67,8,32,8,"transitionList"],[67,22,29,42],[68,0,29,42],[68,8,32,24,"setTransitionList"],[68,25,29,42],[70,0,38,1],[70,8,38,7,"height"],[70,14,38,13],[70,17,38,16],[70,19,38,1],[72,0,40,1],[72,13,40,10,"startScaleAnimation"],[72,32,40,1],[72,33,40,30,"changed"],[72,40,40,1],[72,42,40,39],[73,0,41,2],[73,10,41,8,"newTransitionList"],[73,27,41,25],[73,30,41,28,"transitionList"],[73,44,41,42],[73,45,41,43,"map"],[73,48,41,28],[73,49,41,47],[73,59,41,48,"list"],[73,63,41,47],[73,65,41,54,"index"],[73,70,41,47],[74,0,41,47],[74,33,42,6,"list"],[74,37,41,47],[75,0,43,3,"prevIndex"],[75,10,43,3,"prevIndex"],[75,19,43,12],[75,21,43,14,"index"],[76,0,41,47],[77,0,41,47],[77,7,41,28],[77,8,41,2],[78,0,45,2,"console"],[78,6,45,2,"console"],[78,13,45,9],[78,14,45,10,"log"],[78,17,45,2],[78,18,45,14,"newTransitionList"],[78,35,45,2],[79,0,46,2,"transitionList"],[79,6,46,2,"transitionList"],[79,20,46,16],[79,21,46,17,"sort"],[79,25,46,2],[79,26,46,22],[79,36,46,23,"list"],[79,40,46,22],[79,42,46,29,"_list"],[79,47,46,22],[79,49,46,39],[80,0,47,3],[80,12,47,7,"list"],[80,16,47,11],[80,17,47,12,"value"],[80,22,47,7],[80,25,47,20,"_list"],[80,30,47,25],[80,31,47,26,"value"],[80,36,47,3],[80,38,47,33],[80,45,47,40],[80,46,47,33],[81,0,48,3],[81,12,48,7,"list"],[81,16,48,11],[81,17,48,12,"value"],[81,22,48,7],[81,27,48,22,"_list"],[81,32,48,27],[81,33,48,28,"value"],[81,38,48,7],[81,42,48,37,"list"],[81,46,48,41],[81,47,48,42,"prevIndex"],[81,56,48,37],[81,59,48,54,"_list"],[81,64,48,59],[81,65,48,60,"prevIndex"],[81,74,48,3],[81,76,49,4],[81,83,49,11],[81,84,49,4],[81,85,48,3],[81,90,50,8],[81,97,50,15],[81,98,50,16],[81,99,50,8],[82,0,51,3],[82,7,46,2],[83,0,52,2,"console"],[83,6,52,2,"console"],[83,13,52,9],[83,14,52,10,"log"],[83,17,52,2],[83,18,52,14,"transitionList"],[83,32,52,2],[85,0,40,39],[85,33,53,13,"i"],[85,34,40,39],[86,0,54,3],[86,12,55,4,"transitionList"],[86,26,55,18],[86,27,55,19,"i"],[86,28,55,18],[86,29,55,4],[86,30,55,22,"value"],[86,35,55,4],[86,38,56,4,"NewList"],[86,45,56,11],[86,46,56,12,"find"],[86,50,56,4],[86,51,56,17],[86,61,56,17,"list"],[86,65,56,21],[87,0,56,21],[87,17,56,25,"list"],[87,21,56,29],[87,22,56,30,"text"],[87,26,56,25],[87,31,56,39,"transitionList"],[87,45,56,53],[87,46,56,54,"i"],[87,47,56,53],[87,48,56,39],[87,49,56,57,"text"],[87,53,56,21],[88,0,56,21],[88,9,56,4],[88,11,56,63,"value"],[88,16,54,3],[88,18,57,5],[89,0,58,4,"transitionList"],[89,10,58,4,"transitionList"],[89,24,58,18],[89,25,58,19,"i"],[89,26,58,18],[89,27,58,4],[89,28,58,22,"value"],[89,33,58,4],[89,37,58,31],[89,38,58,4],[90,0,59,4,"changed"],[90,10,59,4,"changed"],[90,17,59,11],[90,20,59,14],[90,24,59,4],[91,0,60,4],[92,0,40,39],[94,0,53,2],[94,11,53,7],[94,15,53,13,"i"],[94,16,53,2],[94,20,53,18,"transitionList"],[94,34,53,2],[94,36,53,34],[95,0,53,34],[95,14,53,13,"i"],[95,15,53,34],[96,0,61,3],[98,0,62,2],[98,10,62,6,"changed"],[98,17,62,2],[98,19,62,15],[99,0,63,3,"console"],[99,8,63,3,"console"],[99,15,63,10],[99,16,63,11,"log"],[99,19,63,3],[99,20,63,15,"transitionList"],[99,34,63,3],[100,0,64,3],[100,12,64,9,"listtt"],[100,18,64,15],[100,21,64,18,"transitionList"],[100,35,64,32],[100,36,65,5,"map"],[100,39,64,18],[100,40,65,9],[100,50,65,10,"list"],[100,54,65,9],[100,56,65,16,"index"],[100,61,65,9],[101,0,65,9],[101,35,65,32,"list"],[101,39,65,9],[102,0,65,38,"prevIndex"],[102,12,65,38,"prevIndex"],[102,21,65,47],[102,23,65,49,"index"],[103,0,65,9],[104,0,65,9],[104,9,64,18],[104,11,66,5,"sort"],[104,15,64,18],[104,16,66,10],[104,26,66,11,"list"],[104,30,66,10],[104,32,66,17,"_list"],[104,37,66,10],[104,39,66,27],[105,0,67,5],[105,14,67,9,"list"],[105,18,67,13],[105,19,67,14,"value"],[105,24,67,9],[105,27,67,22,"_list"],[105,32,67,27],[105,33,67,28,"value"],[105,38,67,5],[105,40,67,35],[105,47,67,42],[105,48,67,35],[106,0,68,5],[106,14,69,6,"list"],[106,18,69,10],[106,19,69,11,"value"],[106,24,69,6],[106,29,69,21,"_list"],[106,34,69,26],[106,35,69,27,"value"],[106,40,69,6],[106,44,70,6,"list"],[106,48,70,10],[106,49,70,11,"prevIndex"],[106,58,70,6],[106,61,70,23,"_list"],[106,66,70,28],[106,67,70,29,"prevIndex"],[106,76,68,5],[106,78,72,6],[106,85,72,13],[106,86,72,6],[106,87,68,5],[106,92,73,10],[106,99,73,17],[106,100,73,18],[106,101,73,10],[107,0,74,5],[107,9,64,18],[107,10,64,3],[108,0,75,3,"console"],[108,8,75,3,"console"],[108,15,75,10],[108,16,75,11,"log"],[108,19,75,3],[108,20,75,15],[108,28,75,3],[108,30,75,25,"listtt"],[108,36,75,3],[109,0,76,3,"setTransitionList"],[109,8,76,3,"setTransitionList"],[109,25,76,20],[109,26,76,21,"listtt"],[109,32,76,20],[109,33,76,3],[111,0,77,3,"Animated"],[111,30,77,12,"timing"],[111,36,77,3],[111,37,77,19,"animatedTranslateValue"],[111,59,77,3],[111,61,77,43],[112,0,78,4,"toValue"],[112,10,78,4,"toValue"],[112,17,78,11],[112,19,78,13],[112,20,77,43],[113,0,79,4,"duration"],[113,10,79,4,"duration"],[113,18,79,12],[113,20,79,14],[114,0,77,43],[114,9,77,3],[114,11,80,6,"start"],[114,16,77,3],[114,17,80,12],[115,0,80,12],[115,17,81,4,"Animated"],[115,39,81,13,"timing"],[115,45,81,4],[115,46,81,20,"animatedTranslateValue"],[115,68,81,4],[115,70,81,44],[116,0,82,5,"toValue"],[116,12,82,5,"toValue"],[116,19,82,12],[116,21,82,14],[116,22,81,44],[117,0,83,5,"duration"],[117,12,83,5,"duration"],[117,20,83,13],[117,22,83,15],[118,0,81,44],[118,11,81,4],[118,13,84,7,"start"],[118,18,81,4],[118,19,84,13],[118,31,84,19],[119,0,85,5],[119,16,85,9,"changed"],[119,23,85,5],[119,25,85,18],[120,0,86,6,"startScaleAnimation"],[120,14,86,6,"startScaleAnimation"],[120,33,86,25],[120,34,86,26],[120,39,86,25],[120,40,86,6],[121,0,87,6],[122,0,88,5],[122,11,81,4],[122,12,80,12],[123,0,80,12],[123,9,77,3],[124,0,90,3],[125,0,91,2],[127,0,93,1],[127,13,93,10,"getTranslation"],[127,27,93,1],[127,28,93,25,"index"],[127,33,93,1],[127,35,93,32,"prevIndex"],[127,44,93,1],[127,46,93,43],[128,0,94,2],[128,10,94,6,"index"],[128,15,94,11],[128,18,94,14,"prevIndex"],[128,27,94,2],[128,29,94,25],[129,0,95,3],[129,15,95,10],[129,16,96,4],[130,0,97,5,"translateY"],[130,10,97,5,"translateY"],[130,20,97,15],[130,22,97,17,"animatedTranslateValue"],[130,44,97,39],[130,45,97,40,"interpolate"],[130,56,97,17],[130,57,97,52],[131,0,98,6,"inputRange"],[131,12,98,6,"inputRange"],[131,22,98,16],[131,24,98,18],[131,25,98,19],[131,26,98,18],[131,28,98,22],[131,29,98,18],[131,30,97,52],[132,0,99,6,"outputRange"],[132,12,99,6,"outputRange"],[132,23,99,17],[132,25,99,19],[132,26,99,20],[132,27,99,19],[132,29,99,23],[132,30,99,24,"height"],[132,36,99,19],[133,0,97,52],[133,11,97,17],[134,0,96,4],[134,9,95,10],[134,10,95,3],[135,0,103,3],[137,0,104,2],[137,10,104,6,"index"],[137,15,104,11],[137,18,104,14,"prevIndex"],[137,27,104,2],[137,29,104,25],[138,0,105,3],[138,15,105,10],[138,16,106,4],[139,0,107,5,"translateY"],[139,10,107,5,"translateY"],[139,20,107,15],[139,22,107,17,"animatedTranslateValue"],[139,44,107,39],[139,45,107,40,"interpolate"],[139,56,107,17],[139,57,107,52],[140,0,108,6,"inputRange"],[140,12,108,6,"inputRange"],[140,22,108,16],[140,24,108,18],[140,25,108,19],[140,26,108,18],[140,28,108,22],[140,29,108,18],[140,30,107,52],[141,0,109,6,"outputRange"],[141,12,109,6,"outputRange"],[141,23,109,17],[141,25,109,19],[141,26,109,20],[141,27,109,19],[141,29,109,23,"height"],[141,35,109,19],[142,0,107,52],[142,11,107,17],[143,0,106,4],[143,9,105,10],[143,10,105,3],[144,0,113,3],[146,0,114,2],[147,0,115,2],[149,0,117,1],[149,11,118,2],[149,40,118,3],[149,57,118,2],[150,0,118,8],[150,6,118,8],[150,11,118,13],[150,13,118,15],[151,0,118,17,"marginTop"],[151,8,118,17,"marginTop"],[151,17,118,26],[151,19,118,28],[152,0,118,15],[152,7,118,2],[153,0,118,2],[154,0,118,2],[155,0,118,2],[156,0,118,2],[157,0,118,2],[157,7,119,4,"transitionList"],[157,21,119,18],[157,22,120,5,"sort"],[157,26,119,4],[157,27,120,10],[157,37,120,11,"list"],[157,41,120,10],[157,43,120,17,"_list"],[157,48,120,10],[157,50,120,27],[158,0,121,5],[158,10,121,9,"list"],[158,14,121,13],[158,15,121,14,"value"],[158,20,121,9],[158,23,121,22,"_list"],[158,28,121,27],[158,29,121,28,"value"],[158,34,121,5],[158,36,121,35],[158,43,121,42],[158,44,121,35],[159,0,122,5],[159,10,123,6,"list"],[159,14,123,10],[159,15,123,11,"value"],[159,20,123,6],[159,25,123,21,"_list"],[159,30,123,26],[159,31,123,27,"value"],[159,36,123,6],[159,40,124,6,"list"],[159,44,124,10],[159,45,124,11,"prevIndex"],[159,54,124,6],[159,57,124,23,"_list"],[159,62,124,28],[159,63,124,29,"prevIndex"],[159,72,122,5],[159,74,126,6],[159,81,126,13],[159,82,126,6],[159,83,122,5],[159,88,127,10],[159,95,127,17],[159,96,127,18],[159,97,127,10],[160,0,128,5],[160,5,119,4],[160,7,129,5,"map"],[160,10,119,4],[160,11,129,9],[160,21,129,10,"list"],[160,25,129,9],[160,27,129,16,"index"],[160,32,129,9],[161,0,129,9],[161,13,130,5],[161,42,130,6],[161,63,130,5],[161,64,130,15],[161,68,130,5],[162,0,131,6],[162,8,131,6],[162,11,131,9],[162,13,131,11,"index"],[162,18,130,5],[163,0,132,6],[163,8,132,6],[163,13,132,11],[163,15,132,13],[164,0,133,7,"width"],[164,10,133,7,"width"],[164,15,133,12],[164,17,133,14],[164,20,132,13],[165,0,134,7,"height"],[165,10,134,7,"height"],[165,16,134,13],[165,18,134,15,"height"],[165,24,132,13],[166,0,135,7,"position"],[166,10,135,7,"position"],[166,18,135,15],[166,20,135,17],[166,30,132,13],[167,0,136,7,"top"],[167,10,136,7,"top"],[167,13,136,10],[167,15,137,8,"height"],[167,21,137,14],[167,25,137,18,"list"],[167,29,137,22],[167,30,137,23,"prevIndex"],[167,39,137,18],[167,42,137,35],[167,43,137,14],[167,44,137,8],[167,48,138,8,"height"],[167,54,138,14],[167,58,138,18,"index"],[167,63,138,23],[167,66,138,26],[167,67,138,14],[167,68,132,13],[168,0,139,7,"backgroundColor"],[168,10,139,7,"backgroundColor"],[168,25,139,22],[168,27,139,24,"list"],[168,31,139,28],[168,32,139,29,"color"],[168,37,132,13],[169,0,140,7,"transform"],[169,10,140,7,"transform"],[169,19,140,16],[169,21,140,18,"getTranslation"],[169,35,140,32],[169,36,140,33,"index"],[169,41,140,32],[169,43,140,40,"list"],[169,47,140,44],[169,48,140,45,"prevIndex"],[169,57,140,32],[170,0,132,13],[170,9,130,5],[171,0,130,5],[172,0,130,5],[173,0,130,5],[174,0,130,5],[175,0,130,5],[175,9,143,6],[175,38,143,7],[175,55,143,6],[176,0,143,6],[177,0,143,6],[178,0,143,6],[179,0,143,6],[180,0,143,6],[180,9,144,8,"list"],[180,13,144,12],[180,14,144,13,"text"],[180,18,143,6],[180,25,144,20,"list"],[180,29,144,24],[180,30,144,25,"value"],[180,35,143,6],[180,36,130,5],[180,37,129,9],[181,0,129,9],[181,5,119,4],[181,6,118,2],[181,8,148,3],[181,37,148,4],[181,66,148,3],[182,0,149,4],[182,6,149,4],[182,11,149,9],[182,13,149,11],[183,0,149,13,"top"],[183,8,149,13,"top"],[183,11,149,16],[183,13,149,18],[184,0,149,11],[184,7,148,3],[185,0,150,4],[185,6,150,4],[185,13,150,11],[185,15,150,13],[186,0,150,13],[186,15,150,19,"startScaleAnimation"],[186,34,150,38],[186,35,150,39],[186,40,150,38],[186,41,150,13],[187,0,150,13],[187,7,148,3],[188,0,148,3],[189,0,148,3],[190,0,148,3],[191,0,148,3],[192,0,148,3],[192,7,152,4],[192,36,152,5],[192,53,152,4],[193,0,152,4],[194,0,152,4],[195,0,152,4],[196,0,152,4],[197,0,152,4],[197,16,148,3],[197,17,118,2],[197,18,117,1],[198,0,156,1],[200,5,29,24,"ConnexionScreen"],[200,20],[202,7,29,24,"ConnexionScreen"],[202,22]],"functionMap":{"names":["<global>","ConnexionScreen","List.sort$argument_0","startScaleAnimation","transitionList.map$argument_0","transitionList.sort$argument_0","NewList.find$argument_0","transitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.sort.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;YCI;GDE;CEK;+CCC;IDG;sBEE;GFK;iBGK,4CH;SCS,gDD;UIC;KJQ;YKM;MLQ;EFG;CQE;ERsB;UIK;KJQ;SSC;KTkB;aUG,gCV;CDM"}},"type":"js/module"}]}