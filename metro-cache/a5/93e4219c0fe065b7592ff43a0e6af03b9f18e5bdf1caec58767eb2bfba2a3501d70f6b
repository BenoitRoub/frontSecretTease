{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Screens/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 3,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var NewList = [{\n    value: 6,\n    text: \"Felix\"\n  }, {\n    value: 6,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen() {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(List.sort(function (list, _list) {\n      if (list.value > _list.value) return 1;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var height = 50;\n\n    function startScaleAnimation(changed) {\n      transilitionList.map(function (list, index) {\n        return _objectSpread({}, list, {\n          prevIndex: index\n        });\n      });\n      console.log(transitionList);\n      transitionList.sort(function (list, _list) {\n        if (list.value < _list.value) return 1;\n        if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n      });\n      console.log(transitionList);\n\n      var _loop = function _loop(i) {\n        if (transitionList[i].value < NewList.find(function (list) {\n          return list.text === transitionList[i].text;\n        }).value) {\n          transitionList[i].value += 1;\n          changed = true;\n        }\n      };\n\n      for (var i in transitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        console.log(transitionList);\n        var listtt = transitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          if (list.value < _list.value) return 1;\n          if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n        });\n        console.log(\"sorted\", listtt);\n        setTransitionList(listtt);\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          duration: 500\n        }).start(function () {\n          return _reactNative.Animated.timing(animatedTranslateValue, {\n            toValue: 0,\n            duration: 1\n          }).start(function () {\n            if (changed) {\n              startScaleAnimation(false);\n            }\n          });\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -height]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, height]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      }\n    }, transitionList.sort(function (list, _list) {\n      if (list.value < _list.value) return 1;\n      if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n    }).map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 320,\n          height: height,\n          position: \"absolute\",\n          top: height * (list.prevIndex + 1) || height * (index + 1),\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: {\n        top: 300\n      },\n      onPress: function onPress() {\n        return startScaleAnimation(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      }\n    }, \"start \")));\n  }\n\n  _s(ConnexionScreen, \"PI8oGq4oZWqlQTD53ehlTS4jib0=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":207,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,13],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,13],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,13],[40,4,18,0],[41,0,23,0],[41,6,23,6,"NewList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,12,24,1],[43,0,24,13,"text"],[43,4,24,13,"text"],[43,8,24,17],[43,10,24,19],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,12,25,1],[46,0,25,13,"text"],[46,4,25,13,"text"],[46,8,25,17],[46,10,25,19],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"ConnexionScreen"],[52,26,29,15],[52,29,29,42],[53,0,29,42],[55,0,29,42],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,42],[56,0,29,42],[57,0,29,42],[57,8,30,8,"animatedValue"],[57,21,29,42],[59,0,29,42],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,42],[60,0,29,42],[61,0,29,42],[61,8,31,8,"animatedTranslateValue"],[61,30,29,42],[63,0,29,42],[63,21,32,45],[63,42,33,2,"List"],[63,46,33,6],[63,47,33,7,"sort"],[63,51,33,2],[63,52,33,12],[63,62,33,13,"list"],[63,66,33,12],[63,68,33,19,"_list"],[63,73,33,12],[63,75,33,29],[64,0,34,3],[64,10,34,7,"list"],[64,14,34,11],[64,15,34,12,"value"],[64,20,34,7],[64,23,34,20,"_list"],[64,28,34,25],[64,29,34,26,"value"],[64,34,34,3],[64,36,34,33],[64,43,34,40],[64,44,34,33],[65,0,35,3],[65,5,33,2],[65,6,32,45],[65,7,29,42],[66,0,29,42],[67,0,29,42],[67,8,32,8,"transitionList"],[67,22,29,42],[68,0,29,42],[68,8,32,24,"setTransitionList"],[68,25,29,42],[70,0,38,1],[70,8,38,7,"height"],[70,14,38,13],[70,17,38,16],[70,19,38,1],[72,0,40,1],[72,13,40,10,"startScaleAnimation"],[72,32,40,1],[72,33,40,30,"changed"],[72,40,40,1],[72,42,40,39],[73,0,41,2,"transilitionList"],[73,6,41,2,"transilitionList"],[73,22,41,18],[73,23,41,19,"map"],[73,26,41,2],[73,27,41,23],[73,37,41,24,"list"],[73,41,41,23],[73,43,41,30,"index"],[73,48,41,23],[74,0,41,23],[74,33,41,46,"list"],[74,37,41,23],[75,0,41,52,"prevIndex"],[75,10,41,52,"prevIndex"],[75,19,41,61],[75,21,41,63,"index"],[76,0,41,23],[77,0,41,23],[77,7,41,2],[78,0,42,2,"console"],[78,6,42,2,"console"],[78,13,42,9],[78,14,42,10,"log"],[78,17,42,2],[78,18,42,14,"transitionList"],[78,32,42,2],[79,0,43,2,"transitionList"],[79,6,43,2,"transitionList"],[79,20,43,16],[79,21,43,17,"sort"],[79,25,43,2],[79,26,43,22],[79,36,43,23,"list"],[79,40,43,22],[79,42,43,29,"_list"],[79,47,43,22],[79,49,43,39],[80,0,44,3],[80,12,44,7,"list"],[80,16,44,11],[80,17,44,12,"value"],[80,22,44,7],[80,25,44,20,"_list"],[80,30,44,25],[80,31,44,26,"value"],[80,36,44,3],[80,38,44,33],[80,45,44,40],[80,46,44,33],[81,0,45,3],[81,12,45,7,"list"],[81,16,45,11],[81,17,45,12,"value"],[81,22,45,7],[81,27,45,22,"_list"],[81,32,45,27],[81,33,45,28,"value"],[81,38,45,7],[81,42,45,37,"list"],[81,46,45,41],[81,47,45,42,"prevIndex"],[81,56,45,37],[81,59,45,54,"_list"],[81,64,45,59],[81,65,45,60,"prevIndex"],[81,74,45,3],[81,76,46,4],[81,83,46,11],[81,84,46,4],[81,85,45,3],[81,90,47,8],[81,97,47,15],[81,98,47,16],[81,99,47,8],[82,0,48,3],[82,7,43,2],[83,0,49,2,"console"],[83,6,49,2,"console"],[83,13,49,9],[83,14,49,10,"log"],[83,17,49,2],[83,18,49,14,"transitionList"],[83,32,49,2],[85,0,40,39],[85,33,50,13,"i"],[85,34,40,39],[86,0,51,3],[86,12,52,4,"transitionList"],[86,26,52,18],[86,27,52,19,"i"],[86,28,52,18],[86,29,52,4],[86,30,52,22,"value"],[86,35,52,4],[86,38,53,4,"NewList"],[86,45,53,11],[86,46,53,12,"find"],[86,50,53,4],[86,51,53,17],[86,61,53,17,"list"],[86,65,53,21],[87,0,53,21],[87,17,53,25,"list"],[87,21,53,29],[87,22,53,30,"text"],[87,26,53,25],[87,31,53,39,"transitionList"],[87,45,53,53],[87,46,53,54,"i"],[87,47,53,53],[87,48,53,39],[87,49,53,57,"text"],[87,53,53,21],[88,0,53,21],[88,9,53,4],[88,11,53,63,"value"],[88,16,51,3],[88,18,54,5],[89,0,55,4,"transitionList"],[89,10,55,4,"transitionList"],[89,24,55,18],[89,25,55,19,"i"],[89,26,55,18],[89,27,55,4],[89,28,55,22,"value"],[89,33,55,4],[89,37,55,31],[89,38,55,4],[90,0,56,4,"changed"],[90,10,56,4,"changed"],[90,17,56,11],[90,20,56,14],[90,24,56,4],[91,0,57,4],[92,0,40,39],[94,0,50,2],[94,11,50,7],[94,15,50,13,"i"],[94,16,50,2],[94,20,50,18,"transitionList"],[94,34,50,2],[94,36,50,34],[95,0,50,34],[95,14,50,13,"i"],[95,15,50,34],[96,0,58,3],[98,0,59,2],[98,10,59,6,"changed"],[98,17,59,2],[98,19,59,15],[99,0,60,3,"console"],[99,8,60,3,"console"],[99,15,60,10],[99,16,60,11,"log"],[99,19,60,3],[99,20,60,15,"transitionList"],[99,34,60,3],[100,0,61,3],[100,12,61,9,"listtt"],[100,18,61,15],[100,21,61,18,"transitionList"],[100,35,61,32],[100,36,62,5,"map"],[100,39,61,18],[100,40,62,9],[100,50,62,10,"list"],[100,54,62,9],[100,56,62,16,"index"],[100,61,62,9],[101,0,62,9],[101,35,62,32,"list"],[101,39,62,9],[102,0,62,38,"prevIndex"],[102,12,62,38,"prevIndex"],[102,21,62,47],[102,23,62,49,"index"],[103,0,62,9],[104,0,62,9],[104,9,61,18],[104,11,63,5,"sort"],[104,15,61,18],[104,16,63,10],[104,26,63,11,"list"],[104,30,63,10],[104,32,63,17,"_list"],[104,37,63,10],[104,39,63,27],[105,0,64,5],[105,14,64,9,"list"],[105,18,64,13],[105,19,64,14,"value"],[105,24,64,9],[105,27,64,22,"_list"],[105,32,64,27],[105,33,64,28,"value"],[105,38,64,5],[105,40,64,35],[105,47,64,42],[105,48,64,35],[106,0,65,5],[106,14,66,6,"list"],[106,18,66,10],[106,19,66,11,"value"],[106,24,66,6],[106,29,66,21,"_list"],[106,34,66,26],[106,35,66,27,"value"],[106,40,66,6],[106,44,67,6,"list"],[106,48,67,10],[106,49,67,11,"prevIndex"],[106,58,67,6],[106,61,67,23,"_list"],[106,66,67,28],[106,67,67,29,"prevIndex"],[106,76,65,5],[106,78,69,6],[106,85,69,13],[106,86,69,6],[106,87,65,5],[106,92,70,10],[106,99,70,17],[106,100,70,18],[106,101,70,10],[107,0,71,5],[107,9,61,18],[107,10,61,3],[108,0,72,3,"console"],[108,8,72,3,"console"],[108,15,72,10],[108,16,72,11,"log"],[108,19,72,3],[108,20,72,15],[108,28,72,3],[108,30,72,25,"listtt"],[108,36,72,3],[109,0,73,3,"setTransitionList"],[109,8,73,3,"setTransitionList"],[109,25,73,20],[109,26,73,21,"listtt"],[109,32,73,20],[109,33,73,3],[111,0,74,3,"Animated"],[111,30,74,12,"timing"],[111,36,74,3],[111,37,74,19,"animatedTranslateValue"],[111,59,74,3],[111,61,74,43],[112,0,75,4,"toValue"],[112,10,75,4,"toValue"],[112,17,75,11],[112,19,75,13],[112,20,74,43],[113,0,76,4,"duration"],[113,10,76,4,"duration"],[113,18,76,12],[113,20,76,14],[114,0,74,43],[114,9,74,3],[114,11,77,6,"start"],[114,16,74,3],[114,17,77,12],[115,0,77,12],[115,17,78,4,"Animated"],[115,39,78,13,"timing"],[115,45,78,4],[115,46,78,20,"animatedTranslateValue"],[115,68,78,4],[115,70,78,44],[116,0,79,5,"toValue"],[116,12,79,5,"toValue"],[116,19,79,12],[116,21,79,14],[116,22,78,44],[117,0,80,5,"duration"],[117,12,80,5,"duration"],[117,20,80,13],[117,22,80,15],[118,0,78,44],[118,11,78,4],[118,13,81,7,"start"],[118,18,78,4],[118,19,81,13],[118,31,81,19],[119,0,82,5],[119,16,82,9,"changed"],[119,23,82,5],[119,25,82,18],[120,0,83,6,"startScaleAnimation"],[120,14,83,6,"startScaleAnimation"],[120,33,83,25],[120,34,83,26],[120,39,83,25],[120,40,83,6],[121,0,84,6],[122,0,85,5],[122,11,78,4],[122,12,77,12],[123,0,77,12],[123,9,74,3],[124,0,87,3],[125,0,88,2],[127,0,90,1],[127,13,90,10,"getTranslation"],[127,27,90,1],[127,28,90,25,"index"],[127,33,90,1],[127,35,90,32,"prevIndex"],[127,44,90,1],[127,46,90,43],[128,0,91,2],[128,10,91,6,"index"],[128,15,91,11],[128,18,91,14,"prevIndex"],[128,27,91,2],[128,29,91,25],[129,0,92,3],[129,15,92,10],[129,16,93,4],[130,0,94,5,"translateY"],[130,10,94,5,"translateY"],[130,20,94,15],[130,22,94,17,"animatedTranslateValue"],[130,44,94,39],[130,45,94,40,"interpolate"],[130,56,94,17],[130,57,94,52],[131,0,95,6,"inputRange"],[131,12,95,6,"inputRange"],[131,22,95,16],[131,24,95,18],[131,25,95,19],[131,26,95,18],[131,28,95,22],[131,29,95,18],[131,30,94,52],[132,0,96,6,"outputRange"],[132,12,96,6,"outputRange"],[132,23,96,17],[132,25,96,19],[132,26,96,20],[132,27,96,19],[132,29,96,23],[132,30,96,24,"height"],[132,36,96,19],[133,0,94,52],[133,11,94,17],[134,0,93,4],[134,9,92,10],[134,10,92,3],[135,0,100,3],[137,0,101,2],[137,10,101,6,"index"],[137,15,101,11],[137,18,101,14,"prevIndex"],[137,27,101,2],[137,29,101,25],[138,0,102,3],[138,15,102,10],[138,16,103,4],[139,0,104,5,"translateY"],[139,10,104,5,"translateY"],[139,20,104,15],[139,22,104,17,"animatedTranslateValue"],[139,44,104,39],[139,45,104,40,"interpolate"],[139,56,104,17],[139,57,104,52],[140,0,105,6,"inputRange"],[140,12,105,6,"inputRange"],[140,22,105,16],[140,24,105,18],[140,25,105,19],[140,26,105,18],[140,28,105,22],[140,29,105,18],[140,30,104,52],[141,0,106,6,"outputRange"],[141,12,106,6,"outputRange"],[141,23,106,17],[141,25,106,19],[141,26,106,20],[141,27,106,19],[141,29,106,23,"height"],[141,35,106,19],[142,0,104,52],[142,11,104,17],[143,0,103,4],[143,9,102,10],[143,10,102,3],[144,0,110,3],[146,0,111,2],[147,0,112,2],[149,0,114,1],[149,11,115,2],[149,40,115,3],[149,57,115,2],[150,0,115,8],[150,6,115,8],[150,11,115,13],[150,13,115,15],[151,0,115,17,"marginTop"],[151,8,115,17,"marginTop"],[151,17,115,26],[151,19,115,28],[152,0,115,15],[152,7,115,2],[153,0,115,2],[154,0,115,2],[155,0,115,2],[156,0,115,2],[157,0,115,2],[157,7,116,4,"transitionList"],[157,21,116,18],[157,22,117,5,"sort"],[157,26,116,4],[157,27,117,10],[157,37,117,11,"list"],[157,41,117,10],[157,43,117,17,"_list"],[157,48,117,10],[157,50,117,27],[158,0,118,5],[158,10,118,9,"list"],[158,14,118,13],[158,15,118,14,"value"],[158,20,118,9],[158,23,118,22,"_list"],[158,28,118,27],[158,29,118,28,"value"],[158,34,118,5],[158,36,118,35],[158,43,118,42],[158,44,118,35],[159,0,119,5],[159,10,120,6,"list"],[159,14,120,10],[159,15,120,11,"value"],[159,20,120,6],[159,25,120,21,"_list"],[159,30,120,26],[159,31,120,27,"value"],[159,36,120,6],[159,40,121,6,"list"],[159,44,121,10],[159,45,121,11,"prevIndex"],[159,54,121,6],[159,57,121,23,"_list"],[159,62,121,28],[159,63,121,29,"prevIndex"],[159,72,119,5],[159,74,123,6],[159,81,123,13],[159,82,123,6],[159,83,119,5],[159,88,124,10],[159,95,124,17],[159,96,124,18],[159,97,124,10],[160,0,125,5],[160,5,116,4],[160,7,126,5,"map"],[160,10,116,4],[160,11,126,9],[160,21,126,10,"list"],[160,25,126,9],[160,27,126,16,"index"],[160,32,126,9],[161,0,126,9],[161,13,127,5],[161,42,127,6],[161,63,127,5],[161,64,127,15],[161,68,127,5],[162,0,128,6],[162,8,128,6],[162,11,128,9],[162,13,128,11,"index"],[162,18,127,5],[163,0,129,6],[163,8,129,6],[163,13,129,11],[163,15,129,13],[164,0,130,7,"width"],[164,10,130,7,"width"],[164,15,130,12],[164,17,130,14],[164,20,129,13],[165,0,131,7,"height"],[165,10,131,7,"height"],[165,16,131,13],[165,18,131,15,"height"],[165,24,129,13],[166,0,132,7,"position"],[166,10,132,7,"position"],[166,18,132,15],[166,20,132,17],[166,30,129,13],[167,0,133,7,"top"],[167,10,133,7,"top"],[167,13,133,10],[167,15,134,8,"height"],[167,21,134,14],[167,25,134,18,"list"],[167,29,134,22],[167,30,134,23,"prevIndex"],[167,39,134,18],[167,42,134,35],[167,43,134,14],[167,44,134,8],[167,48,135,8,"height"],[167,54,135,14],[167,58,135,18,"index"],[167,63,135,23],[167,66,135,26],[167,67,135,14],[167,68,129,13],[168,0,136,7,"backgroundColor"],[168,10,136,7,"backgroundColor"],[168,25,136,22],[168,27,136,24,"list"],[168,31,136,28],[168,32,136,29,"color"],[168,37,129,13],[169,0,137,7,"transform"],[169,10,137,7,"transform"],[169,19,137,16],[169,21,137,18,"getTranslation"],[169,35,137,32],[169,36,137,33,"index"],[169,41,137,32],[169,43,137,40,"list"],[169,47,137,44],[169,48,137,45,"prevIndex"],[169,57,137,32],[170,0,129,13],[170,9,127,5],[171,0,127,5],[172,0,127,5],[173,0,127,5],[174,0,127,5],[175,0,127,5],[175,9,140,6],[175,38,140,7],[175,55,140,6],[176,0,140,6],[177,0,140,6],[178,0,140,6],[179,0,140,6],[180,0,140,6],[180,9,141,8,"list"],[180,13,141,12],[180,14,141,13,"text"],[180,18,140,6],[180,25,141,20,"list"],[180,29,141,24],[180,30,141,25,"value"],[180,35,140,6],[180,36,127,5],[180,37,126,9],[181,0,126,9],[181,5,116,4],[181,6,115,2],[181,8,145,3],[181,37,145,4],[181,66,145,3],[182,0,146,4],[182,6,146,4],[182,11,146,9],[182,13,146,11],[183,0,146,13,"top"],[183,8,146,13,"top"],[183,11,146,16],[183,13,146,18],[184,0,146,11],[184,7,145,3],[185,0,147,4],[185,6,147,4],[185,13,147,11],[185,15,147,13],[186,0,147,13],[186,15,147,19,"startScaleAnimation"],[186,34,147,38],[186,35,147,39],[186,40,147,38],[186,41,147,13],[187,0,147,13],[187,7,145,3],[188,0,145,3],[189,0,145,3],[190,0,145,3],[191,0,145,3],[192,0,145,3],[192,7,149,4],[192,36,149,5],[192,53,149,4],[193,0,149,4],[194,0,149,4],[195,0,149,4],[196,0,149,4],[197,0,149,4],[197,16,145,3],[197,17,115,2],[197,18,114,1],[198,0,153,1],[200,5,29,24,"ConnexionScreen"],[200,20],[202,7,29,24,"ConnexionScreen"],[202,22]],"functionMap":{"names":["<global>","ConnexionScreen","List.sort$argument_0","startScaleAnimation","transilitionList.map$argument_0","transitionList.sort$argument_0","NewList.find$argument_0","transitionList.map$argument_0","transitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.sort.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;YCI;GDE;CEK;uBCC,gDD;sBEE;GFK;iBGK,4CH;SIS,gDJ;UKC;KLQ;YMM;MNQ;EFG;CSE;ETsB;UIK;KJQ;SUC;KVkB;aWG,gCX;CDM"}},"type":"js/module"}]}