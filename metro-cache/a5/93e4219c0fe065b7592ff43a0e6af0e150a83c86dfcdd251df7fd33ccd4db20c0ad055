{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Screens/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 3,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var NewList = [{\n    value: 6,\n    text: \"Felix\"\n  }, {\n    value: 6,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen() {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(List.sort(function (list, _list) {\n      if (list.value > _list.value) return 1;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    (0, _react.useEffect)(function () {\n      var newTransitionList = transitionList.map(function (list, index) {\n        return _objectSpread({}, list, {\n          prevIndex: index\n        });\n      });\n      setTransitionList(newTransitionList);\n    }, []);\n\n    function startScaleAnimation(changed) {\n      newTransitionList.sort(function (list, _list) {\n        if (list.value < _list.value) return 1;\n        if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n      });\n      console.log(newTransitionList);\n\n      var _loop = function _loop(i) {\n        if (newTransitionList[i].value < NewList.find(function (list) {\n          return list.text === newTransitionList[i].text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          changed = true;\n        }\n      };\n\n      for (var i in newTransitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        console.log(newTransitionList);\n        var listtt = newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          if (list.value < _list.value) return 1;\n          if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n        });\n        console.log(\"sorted\", listtt);\n        setTransitionList(listtt);\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          duration: 500\n        }).start(function () {\n          return _reactNative.Animated.timing(animatedTranslateValue, {\n            toValue: 0,\n            duration: 1\n          }).start(function () {\n            if (changed) {\n              startScaleAnimation(false);\n            }\n          });\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -height]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, height]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      }\n    }, transitionList.sort(function (list, _list) {\n      if (list.value < _list.value) return 1;\n      if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n    }).map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 320,\n          height: height,\n          position: \"absolute\",\n          top: height * (list.prevIndex + 1) || height * (index + 1),\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: {\n        top: 300\n      },\n      onPress: function onPress() {\n        return startScaleAnimation(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      }\n    }, \"start \")));\n  }\n\n  _s(ConnexionScreen, \"X0a0+Tmrt9iXpr3+3UPMHrrrg8A=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":208,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,13],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,13],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,13],[40,4,18,0],[41,0,23,0],[41,6,23,6,"NewList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,12,24,1],[43,0,24,13,"text"],[43,4,24,13,"text"],[43,8,24,17],[43,10,24,19],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,12,25,1],[46,0,25,13,"text"],[46,4,25,13,"text"],[46,8,25,17],[46,10,25,19],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"ConnexionScreen"],[52,26,29,15],[52,29,29,42],[53,0,29,42],[55,0,29,42],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,42],[56,0,29,42],[57,0,29,42],[57,8,30,8,"animatedValue"],[57,21,29,42],[59,0,29,42],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,42],[60,0,29,42],[61,0,29,42],[61,8,31,8,"animatedTranslateValue"],[61,30,29,42],[63,0,29,42],[63,21,32,45],[63,42,33,2,"List"],[63,46,33,6],[63,47,33,7,"sort"],[63,51,33,2],[63,52,33,12],[63,62,33,13,"list"],[63,66,33,12],[63,68,33,19,"_list"],[63,73,33,12],[63,75,33,29],[64,0,34,3],[64,10,34,7,"list"],[64,14,34,11],[64,15,34,12,"value"],[64,20,34,7],[64,23,34,20,"_list"],[64,28,34,25],[64,29,34,26,"value"],[64,34,34,3],[64,36,34,33],[64,43,34,40],[64,44,34,33],[65,0,35,3],[65,5,33,2],[65,6,32,45],[65,7,29,42],[66,0,29,42],[67,0,29,42],[67,8,32,8,"transitionList"],[67,22,29,42],[68,0,29,42],[68,8,32,24,"setTransitionList"],[68,25,29,42],[70,0,38,1],[70,26,38,11],[70,38,38,17],[71,0,39,2],[71,10,39,8,"newTransitionList"],[71,27,39,25],[71,30,39,28,"transitionList"],[71,44,39,42],[71,45,39,43,"map"],[71,48,39,28],[71,49,39,47],[71,59,39,48,"list"],[71,63,39,47],[71,65,39,54,"index"],[71,70,39,47],[72,0,39,47],[72,33,40,6,"list"],[72,37,39,47],[73,0,41,3,"prevIndex"],[73,10,41,3,"prevIndex"],[73,19,41,12],[73,21,41,14,"index"],[74,0,39,47],[75,0,39,47],[75,7,39,28],[75,8,39,2],[76,0,43,2,"setTransitionList"],[76,6,43,2,"setTransitionList"],[76,23,43,19],[76,24,43,20,"newTransitionList"],[76,41,43,19],[76,42,43,2],[77,0,44,2],[77,5,38,1],[77,7,44,4],[77,9,38,1],[79,0,46,1],[79,13,46,10,"startScaleAnimation"],[79,32,46,1],[79,33,46,30,"changed"],[79,40,46,1],[79,42,46,39],[80,0,47,2,"newTransitionList"],[80,6,47,2,"newTransitionList"],[80,23,47,19],[80,24,47,20,"sort"],[80,28,47,2],[80,29,47,25],[80,39,47,26,"list"],[80,43,47,25],[80,45,47,32,"_list"],[80,50,47,25],[80,52,47,42],[81,0,48,3],[81,12,48,7,"list"],[81,16,48,11],[81,17,48,12,"value"],[81,22,48,7],[81,25,48,20,"_list"],[81,30,48,25],[81,31,48,26,"value"],[81,36,48,3],[81,38,48,33],[81,45,48,40],[81,46,48,33],[82,0,49,3],[82,12,49,7,"list"],[82,16,49,11],[82,17,49,12,"value"],[82,22,49,7],[82,27,49,22,"_list"],[82,32,49,27],[82,33,49,28,"value"],[82,38,49,7],[82,42,49,37,"list"],[82,46,49,41],[82,47,49,42,"prevIndex"],[82,56,49,37],[82,59,49,54,"_list"],[82,64,49,59],[82,65,49,60,"prevIndex"],[82,74,49,3],[82,76,50,4],[82,83,50,11],[82,84,50,4],[82,85,49,3],[82,90,51,8],[82,97,51,15],[82,98,51,16],[82,99,51,8],[83,0,52,3],[83,7,47,2],[84,0,53,2,"console"],[84,6,53,2,"console"],[84,13,53,9],[84,14,53,10,"log"],[84,17,53,2],[84,18,53,14,"newTransitionList"],[84,35,53,2],[86,0,46,39],[86,33,54,13,"i"],[86,34,46,39],[87,0,55,3],[87,12,56,4,"newTransitionList"],[87,29,56,21],[87,30,56,22,"i"],[87,31,56,21],[87,32,56,4],[87,33,56,25,"value"],[87,38,56,4],[87,41,57,4,"NewList"],[87,48,57,11],[87,49,57,12,"find"],[87,53,57,4],[87,54,57,17],[87,64,57,17,"list"],[87,68,57,21],[88,0,57,21],[88,17,57,25,"list"],[88,21,57,29],[88,22,57,30,"text"],[88,26,57,25],[88,31,57,39,"newTransitionList"],[88,48,57,56],[88,49,57,57,"i"],[88,50,57,56],[88,51,57,39],[88,52,57,60,"text"],[88,56,57,21],[89,0,57,21],[89,9,57,4],[89,11,58,6,"value"],[89,16,55,3],[89,18,59,5],[90,0,60,4,"newTransitionList"],[90,10,60,4,"newTransitionList"],[90,27,60,21],[90,28,60,22,"i"],[90,29,60,21],[90,30,60,4],[90,31,60,25,"value"],[90,36,60,4],[90,40,60,34],[90,41,60,4],[91,0,61,4,"changed"],[91,10,61,4,"changed"],[91,17,61,11],[91,20,61,14],[91,24,61,4],[92,0,62,4],[93,0,46,39],[95,0,54,2],[95,11,54,7],[95,15,54,13,"i"],[95,16,54,2],[95,20,54,18,"newTransitionList"],[95,37,54,2],[95,39,54,37],[96,0,54,37],[96,14,54,13,"i"],[96,15,54,37],[97,0,63,3],[99,0,64,2],[99,10,64,6,"changed"],[99,17,64,2],[99,19,64,15],[100,0,65,3,"console"],[100,8,65,3,"console"],[100,15,65,10],[100,16,65,11,"log"],[100,19,65,3],[100,20,65,15,"newTransitionList"],[100,37,65,3],[101,0,66,3],[101,12,66,9,"listtt"],[101,18,66,15],[101,21,66,18,"newTransitionList"],[101,38,66,35],[101,39,67,5,"map"],[101,42,66,18],[101,43,67,9],[101,53,67,10,"list"],[101,57,67,9],[101,59,67,16,"index"],[101,64,67,9],[102,0,67,9],[102,35,67,32,"list"],[102,39,67,9],[103,0,67,38,"prevIndex"],[103,12,67,38,"prevIndex"],[103,21,67,47],[103,23,67,49,"index"],[104,0,67,9],[105,0,67,9],[105,9,66,18],[105,11,68,5,"sort"],[105,15,66,18],[105,16,68,10],[105,26,68,11,"list"],[105,30,68,10],[105,32,68,17,"_list"],[105,37,68,10],[105,39,68,27],[106,0,69,5],[106,14,69,9,"list"],[106,18,69,13],[106,19,69,14,"value"],[106,24,69,9],[106,27,69,22,"_list"],[106,32,69,27],[106,33,69,28,"value"],[106,38,69,5],[106,40,69,35],[106,47,69,42],[106,48,69,35],[107,0,70,5],[107,14,71,6,"list"],[107,18,71,10],[107,19,71,11,"value"],[107,24,71,6],[107,29,71,21,"_list"],[107,34,71,26],[107,35,71,27,"value"],[107,40,71,6],[107,44,72,6,"list"],[107,48,72,10],[107,49,72,11,"prevIndex"],[107,58,72,6],[107,61,72,23,"_list"],[107,66,72,28],[107,67,72,29,"prevIndex"],[107,76,70,5],[107,78,74,6],[107,85,74,13],[107,86,74,6],[107,87,70,5],[107,92,75,10],[107,99,75,17],[107,100,75,18],[107,101,75,10],[108,0,76,5],[108,9,66,18],[108,10,66,3],[109,0,77,3,"console"],[109,8,77,3,"console"],[109,15,77,10],[109,16,77,11,"log"],[109,19,77,3],[109,20,77,15],[109,28,77,3],[109,30,77,25,"listtt"],[109,36,77,3],[110,0,78,3,"setTransitionList"],[110,8,78,3,"setTransitionList"],[110,25,78,20],[110,26,78,21,"listtt"],[110,32,78,20],[110,33,78,3],[112,0,79,3,"Animated"],[112,30,79,12,"timing"],[112,36,79,3],[112,37,79,19,"animatedTranslateValue"],[112,59,79,3],[112,61,79,43],[113,0,80,4,"toValue"],[113,10,80,4,"toValue"],[113,17,80,11],[113,19,80,13],[113,20,79,43],[114,0,81,4,"duration"],[114,10,81,4,"duration"],[114,18,81,12],[114,20,81,14],[115,0,79,43],[115,9,79,3],[115,11,82,6,"start"],[115,16,79,3],[115,17,82,12],[116,0,82,12],[116,17,83,4,"Animated"],[116,39,83,13,"timing"],[116,45,83,4],[116,46,83,20,"animatedTranslateValue"],[116,68,83,4],[116,70,83,44],[117,0,84,5,"toValue"],[117,12,84,5,"toValue"],[117,19,84,12],[117,21,84,14],[117,22,83,44],[118,0,85,5,"duration"],[118,12,85,5,"duration"],[118,20,85,13],[118,22,85,15],[119,0,83,44],[119,11,83,4],[119,13,86,7,"start"],[119,18,83,4],[119,19,86,13],[119,31,86,19],[120,0,87,5],[120,16,87,9,"changed"],[120,23,87,5],[120,25,87,18],[121,0,88,6,"startScaleAnimation"],[121,14,88,6,"startScaleAnimation"],[121,33,88,25],[121,34,88,26],[121,39,88,25],[121,40,88,6],[122,0,89,6],[123,0,90,5],[123,11,83,4],[123,12,82,12],[124,0,82,12],[124,9,79,3],[125,0,92,3],[126,0,93,2],[128,0,95,1],[128,13,95,10,"getTranslation"],[128,27,95,1],[128,28,95,25,"index"],[128,33,95,1],[128,35,95,32,"prevIndex"],[128,44,95,1],[128,46,95,43],[129,0,96,2],[129,10,96,6,"index"],[129,15,96,11],[129,18,96,14,"prevIndex"],[129,27,96,2],[129,29,96,25],[130,0,97,3],[130,15,97,10],[130,16,98,4],[131,0,99,5,"translateY"],[131,10,99,5,"translateY"],[131,20,99,15],[131,22,99,17,"animatedTranslateValue"],[131,44,99,39],[131,45,99,40,"interpolate"],[131,56,99,17],[131,57,99,52],[132,0,100,6,"inputRange"],[132,12,100,6,"inputRange"],[132,22,100,16],[132,24,100,18],[132,25,100,19],[132,26,100,18],[132,28,100,22],[132,29,100,18],[132,30,99,52],[133,0,101,6,"outputRange"],[133,12,101,6,"outputRange"],[133,23,101,17],[133,25,101,19],[133,26,101,20],[133,27,101,19],[133,29,101,23],[133,30,101,24,"height"],[133,36,101,19],[134,0,99,52],[134,11,99,17],[135,0,98,4],[135,9,97,10],[135,10,97,3],[136,0,105,3],[138,0,106,2],[138,10,106,6,"index"],[138,15,106,11],[138,18,106,14,"prevIndex"],[138,27,106,2],[138,29,106,25],[139,0,107,3],[139,15,107,10],[139,16,108,4],[140,0,109,5,"translateY"],[140,10,109,5,"translateY"],[140,20,109,15],[140,22,109,17,"animatedTranslateValue"],[140,44,109,39],[140,45,109,40,"interpolate"],[140,56,109,17],[140,57,109,52],[141,0,110,6,"inputRange"],[141,12,110,6,"inputRange"],[141,22,110,16],[141,24,110,18],[141,25,110,19],[141,26,110,18],[141,28,110,22],[141,29,110,18],[141,30,109,52],[142,0,111,6,"outputRange"],[142,12,111,6,"outputRange"],[142,23,111,17],[142,25,111,19],[142,26,111,20],[142,27,111,19],[142,29,111,23,"height"],[142,35,111,19],[143,0,109,52],[143,11,109,17],[144,0,108,4],[144,9,107,10],[144,10,107,3],[145,0,115,3],[147,0,116,2],[148,0,117,2],[150,0,119,1],[150,11,120,2],[150,40,120,3],[150,57,120,2],[151,0,120,8],[151,6,120,8],[151,11,120,13],[151,13,120,15],[152,0,120,17,"marginTop"],[152,8,120,17,"marginTop"],[152,17,120,26],[152,19,120,28],[153,0,120,15],[153,7,120,2],[154,0,120,2],[155,0,120,2],[156,0,120,2],[157,0,120,2],[158,0,120,2],[158,7,121,4,"transitionList"],[158,21,121,18],[158,22,122,5,"sort"],[158,26,121,4],[158,27,122,10],[158,37,122,11,"list"],[158,41,122,10],[158,43,122,17,"_list"],[158,48,122,10],[158,50,122,27],[159,0,123,5],[159,10,123,9,"list"],[159,14,123,13],[159,15,123,14,"value"],[159,20,123,9],[159,23,123,22,"_list"],[159,28,123,27],[159,29,123,28,"value"],[159,34,123,5],[159,36,123,35],[159,43,123,42],[159,44,123,35],[160,0,124,5],[160,10,125,6,"list"],[160,14,125,10],[160,15,125,11,"value"],[160,20,125,6],[160,25,125,21,"_list"],[160,30,125,26],[160,31,125,27,"value"],[160,36,125,6],[160,40,126,6,"list"],[160,44,126,10],[160,45,126,11,"prevIndex"],[160,54,126,6],[160,57,126,23,"_list"],[160,62,126,28],[160,63,126,29,"prevIndex"],[160,72,124,5],[160,74,128,6],[160,81,128,13],[160,82,128,6],[160,83,124,5],[160,88,129,10],[160,95,129,17],[160,96,129,18],[160,97,129,10],[161,0,130,5],[161,5,121,4],[161,7,131,5,"map"],[161,10,121,4],[161,11,131,9],[161,21,131,10,"list"],[161,25,131,9],[161,27,131,16,"index"],[161,32,131,9],[162,0,131,9],[162,13,132,5],[162,42,132,6],[162,63,132,5],[162,64,132,15],[162,68,132,5],[163,0,133,6],[163,8,133,6],[163,11,133,9],[163,13,133,11,"index"],[163,18,132,5],[164,0,134,6],[164,8,134,6],[164,13,134,11],[164,15,134,13],[165,0,135,7,"width"],[165,10,135,7,"width"],[165,15,135,12],[165,17,135,14],[165,20,134,13],[166,0,136,7,"height"],[166,10,136,7,"height"],[166,16,136,13],[166,18,136,15,"height"],[166,24,134,13],[167,0,137,7,"position"],[167,10,137,7,"position"],[167,18,137,15],[167,20,137,17],[167,30,134,13],[168,0,138,7,"top"],[168,10,138,7,"top"],[168,13,138,10],[168,15,139,8,"height"],[168,21,139,14],[168,25,139,18,"list"],[168,29,139,22],[168,30,139,23,"prevIndex"],[168,39,139,18],[168,42,139,35],[168,43,139,14],[168,44,139,8],[168,48,140,8,"height"],[168,54,140,14],[168,58,140,18,"index"],[168,63,140,23],[168,66,140,26],[168,67,140,14],[168,68,134,13],[169,0,141,7,"backgroundColor"],[169,10,141,7,"backgroundColor"],[169,25,141,22],[169,27,141,24,"list"],[169,31,141,28],[169,32,141,29,"color"],[169,37,134,13],[170,0,142,7,"transform"],[170,10,142,7,"transform"],[170,19,142,16],[170,21,142,18,"getTranslation"],[170,35,142,32],[170,36,142,33,"index"],[170,41,142,32],[170,43,142,40,"list"],[170,47,142,44],[170,48,142,45,"prevIndex"],[170,57,142,32],[171,0,134,13],[171,9,132,5],[172,0,132,5],[173,0,132,5],[174,0,132,5],[175,0,132,5],[176,0,132,5],[176,9,145,6],[176,38,145,7],[176,55,145,6],[177,0,145,6],[178,0,145,6],[179,0,145,6],[180,0,145,6],[181,0,145,6],[181,9,146,8,"list"],[181,13,146,12],[181,14,146,13,"text"],[181,18,145,6],[181,25,146,20,"list"],[181,29,146,24],[181,30,146,25,"value"],[181,35,145,6],[181,36,132,5],[181,37,131,9],[182,0,131,9],[182,5,121,4],[182,6,120,2],[182,8,150,3],[182,37,150,4],[182,66,150,3],[183,0,151,4],[183,6,151,4],[183,11,151,9],[183,13,151,11],[184,0,151,13,"top"],[184,8,151,13,"top"],[184,11,151,16],[184,13,151,18],[185,0,151,11],[185,7,150,3],[186,0,152,4],[186,6,152,4],[186,13,152,11],[186,15,152,13],[187,0,152,13],[187,15,152,19,"startScaleAnimation"],[187,34,152,38],[187,35,152,39],[187,40,152,38],[187,41,152,13],[188,0,152,13],[188,7,150,3],[189,0,150,3],[190,0,150,3],[191,0,150,3],[192,0,150,3],[193,0,150,3],[193,7,154,4],[193,36,154,5],[193,53,154,4],[194,0,154,4],[195,0,154,4],[196,0,154,4],[197,0,154,4],[198,0,154,4],[198,16,150,3],[198,17,120,2],[198,18,119,1],[199,0,158,1],[201,5,29,24,"ConnexionScreen"],[201,20],[203,7,29,24,"ConnexionScreen"],[203,22]],"functionMap":{"names":["<global>","ConnexionScreen","List.sort$argument_0","useEffect$argument_0","transitionList.map$argument_0","startScaleAnimation","newTransitionList.sort$argument_0","NewList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.sort$argument_0","transitionList.sort.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;YCI;GDE;WEG;+CCC;IDG;EFE;CIE;yBCC;GDK;iBEK,+CF;SGU,gDH;UIC;KJQ;YKM;MLQ;EJG;CUE;EVsB;UWK;KXQ;SYC;KZkB;aaG,gCb;CDM"}},"type":"js/module"}]}