{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Screens/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 3,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var NewList = [{\n    value: 6,\n    text: \"Felix\"\n  }, {\n    value: 6,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen() {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(List.map(function (list, index) {\n      return _objectSpread({}, list, {\n        prev_index: index\n      });\n    }).sort(function (list, _list) {\n      if (list.value < _list.value) return 1;\n      if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var height = 50;\n\n    function startScaleAnimation(changed) {\n      var newTransitionList = transitionList.sort(function (list, _list) {\n        if (list.value < _list.value) return 1;\n        if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n      });\n\n      var _loop = function _loop(i) {\n        if (transitionList[i].value < NewList.find(function (list) {\n          return list.text === transitionList[i].text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          changed = true;\n        }\n      };\n\n      for (var i in transitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        console.log(transitionList, newTransitionList);\n        var listtt = newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          if (list.value < _list.value) return 1;\n          if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n        });\n        console.log(\"sorted\", listtt);\n        setTransitionList(listtt);\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          duration: 500\n        }).start(function () {\n          return _reactNative.Animated.timing(animatedTranslateValue, {\n            toValue: 0,\n            duration: 1\n          }).start(function () {\n            if (changed) {\n              startScaleAnimation(false);\n            }\n          });\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -height]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, height]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      }\n    }, transitionList.map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 320,\n          height: height,\n          position: \"absolute\",\n          top: height * (list.prevIndex + 1) || height * (index + 1),\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: {\n        top: 300\n      },\n      onPress: function onPress() {\n        return startScaleAnimation(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      }\n    }, \"start \")));\n  }\n\n  _s(ConnexionScreen, \"PdwVGMWtzev/vltfACdlFXe8iWc=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":202,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,13],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,13],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,13],[40,4,18,0],[41,0,23,0],[41,6,23,6,"NewList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,12,24,1],[43,0,24,13,"text"],[43,4,24,13,"text"],[43,8,24,17],[43,10,24,19],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,12,25,1],[46,0,25,13,"text"],[46,4,25,13,"text"],[46,8,25,17],[46,10,25,19],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"ConnexionScreen"],[52,26,29,15],[52,29,29,42],[53,0,29,42],[55,0,29,42],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,42],[56,0,29,42],[57,0,29,42],[57,8,30,8,"animatedValue"],[57,21,29,42],[59,0,29,42],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,42],[60,0,29,42],[61,0,29,42],[61,8,31,8,"animatedTranslateValue"],[61,30,29,42],[63,0,29,42],[63,21,32,45],[63,42,33,2,"List"],[63,46,33,6],[63,47,33,7,"map"],[63,50,33,2],[63,51,33,11],[63,61,33,12,"list"],[63,65,33,11],[63,67,33,18,"index"],[63,72,33,11],[64,0,33,11],[64,31,33,34,"list"],[64,35,33,11],[65,0,33,40,"prev_index"],[65,8,33,40,"prev_index"],[65,18,33,50],[65,20,33,52,"index"],[66,0,33,11],[67,0,33,11],[67,5,33,2],[67,7,33,62,"sort"],[67,11,33,2],[67,12,34,3],[67,22,34,4,"list"],[67,26,34,3],[67,28,34,10,"_list"],[67,33,34,3],[67,35,34,20],[68,0,35,4],[68,10,35,8,"list"],[68,14,35,12],[68,15,35,13,"value"],[68,20,35,8],[68,23,35,21,"_list"],[68,28,35,26],[68,29,35,27,"value"],[68,34,35,4],[68,36,35,34],[68,43,35,41],[68,44,35,34],[69,0,36,4],[69,10,37,5,"list"],[69,14,37,9],[69,15,37,10,"value"],[69,20,37,5],[69,25,37,20,"_list"],[69,30,37,25],[69,31,37,26,"value"],[69,36,37,5],[69,40,38,5,"list"],[69,44,38,9],[69,45,38,10,"prevIndex"],[69,54,38,5],[69,57,38,22,"_list"],[69,62,38,27],[69,63,38,28,"prevIndex"],[69,72,36,4],[69,74,40,5],[69,81,40,12],[69,82,40,5],[69,83,36,4],[69,88,41,9],[69,95,41,16],[69,96,41,17],[69,97,41,9],[70,0,42,4],[70,5,33,2],[70,6,32,45],[70,7,29,42],[71,0,29,42],[72,0,29,42],[72,8,32,8,"transitionList"],[72,22,29,42],[73,0,29,42],[73,8,32,24,"setTransitionList"],[73,25,29,42],[75,0,46,1],[75,8,46,7,"height"],[75,14,46,13],[75,17,46,16],[75,19,46,1],[77,0,48,1],[77,13,48,10,"startScaleAnimation"],[77,32,48,1],[77,33,48,30,"changed"],[77,40,48,1],[77,42,48,39],[78,0,49,2],[78,10,49,6,"newTransitionList"],[78,27,49,23],[78,30,49,26,"transitionList"],[78,44,49,40],[78,45,49,41,"sort"],[78,49,49,26],[78,50,49,46],[78,60,49,47,"list"],[78,64,49,46],[78,66,49,53,"_list"],[78,71,49,46],[78,73,49,63],[79,0,50,3],[79,12,50,7,"list"],[79,16,50,11],[79,17,50,12,"value"],[79,22,50,7],[79,25,50,20,"_list"],[79,30,50,25],[79,31,50,26,"value"],[79,36,50,3],[79,38,50,33],[79,45,50,40],[79,46,50,33],[80,0,51,3],[80,12,51,7,"list"],[80,16,51,11],[80,17,51,12,"value"],[80,22,51,7],[80,27,51,22,"_list"],[80,32,51,27],[80,33,51,28,"value"],[80,38,51,7],[80,42,51,37,"list"],[80,46,51,41],[80,47,51,42,"prevIndex"],[80,56,51,37],[80,59,51,54,"_list"],[80,64,51,59],[80,65,51,60,"prevIndex"],[80,74,51,3],[80,76,52,4],[80,83,52,11],[80,84,52,4],[80,85,51,3],[80,90,53,8],[80,97,53,15],[80,98,53,16],[80,99,53,8],[81,0,54,3],[81,7,49,26],[81,8,49,2],[83,0,48,39],[83,33,55,13,"i"],[83,34,48,39],[84,0,56,3],[84,12,57,4,"transitionList"],[84,26,57,18],[84,27,57,19,"i"],[84,28,57,18],[84,29,57,4],[84,30,57,22,"value"],[84,35,57,4],[84,38,58,4,"NewList"],[84,45,58,11],[84,46,58,12,"find"],[84,50,58,4],[84,51,58,17],[84,61,58,17,"list"],[84,65,58,21],[85,0,58,21],[85,17,58,25,"list"],[85,21,58,29],[85,22,58,30,"text"],[85,26,58,25],[85,31,58,39,"transitionList"],[85,45,58,53],[85,46,58,54,"i"],[85,47,58,53],[85,48,58,39],[85,49,58,57,"text"],[85,53,58,21],[86,0,58,21],[86,9,58,4],[86,11,58,63,"value"],[86,16,56,3],[86,18,59,5],[87,0,60,4,"newTransitionList"],[87,10,60,4,"newTransitionList"],[87,27,60,21],[87,28,60,22,"i"],[87,29,60,21],[87,30,60,4],[87,31,60,25,"value"],[87,36,60,4],[87,40,60,34],[87,41,60,4],[88,0,61,4,"changed"],[88,10,61,4,"changed"],[88,17,61,11],[88,20,61,14],[88,24,61,4],[89,0,62,4],[90,0,48,39],[92,0,55,2],[92,11,55,7],[92,15,55,13,"i"],[92,16,55,2],[92,20,55,18,"transitionList"],[92,34,55,2],[92,36,55,34],[93,0,55,34],[93,14,55,13,"i"],[93,15,55,34],[94,0,63,3],[96,0,64,2],[96,10,64,6,"changed"],[96,17,64,2],[96,19,64,15],[97,0,65,3,"console"],[97,8,65,3,"console"],[97,15,65,10],[97,16,65,11,"log"],[97,19,65,3],[97,20,65,15,"transitionList"],[97,34,65,3],[97,36,65,31,"newTransitionList"],[97,53,65,3],[98,0,66,3],[98,12,66,9,"listtt"],[98,18,66,15],[98,21,66,18,"newTransitionList"],[98,38,66,35],[98,39,67,5,"map"],[98,42,66,18],[98,43,67,9],[98,53,67,10,"list"],[98,57,67,9],[98,59,67,16,"index"],[98,64,67,9],[99,0,67,9],[99,35,67,32,"list"],[99,39,67,9],[100,0,67,38,"prevIndex"],[100,12,67,38,"prevIndex"],[100,21,67,47],[100,23,67,49,"index"],[101,0,67,9],[102,0,67,9],[102,9,66,18],[102,11,68,5,"sort"],[102,15,66,18],[102,16,68,10],[102,26,68,11,"list"],[102,30,68,10],[102,32,68,17,"_list"],[102,37,68,10],[102,39,68,27],[103,0,69,5],[103,14,69,9,"list"],[103,18,69,13],[103,19,69,14,"value"],[103,24,69,9],[103,27,69,22,"_list"],[103,32,69,27],[103,33,69,28,"value"],[103,38,69,5],[103,40,69,35],[103,47,69,42],[103,48,69,35],[104,0,70,5],[104,14,71,6,"list"],[104,18,71,10],[104,19,71,11,"value"],[104,24,71,6],[104,29,71,21,"_list"],[104,34,71,26],[104,35,71,27,"value"],[104,40,71,6],[104,44,72,6,"list"],[104,48,72,10],[104,49,72,11,"prevIndex"],[104,58,72,6],[104,61,72,23,"_list"],[104,66,72,28],[104,67,72,29,"prevIndex"],[104,76,70,5],[104,78,74,6],[104,85,74,13],[104,86,74,6],[104,87,70,5],[104,92,75,10],[104,99,75,17],[104,100,75,18],[104,101,75,10],[105,0,76,5],[105,9,66,18],[105,10,66,3],[106,0,77,3,"console"],[106,8,77,3,"console"],[106,15,77,10],[106,16,77,11,"log"],[106,19,77,3],[106,20,77,15],[106,28,77,3],[106,30,77,25,"listtt"],[106,36,77,3],[107,0,78,3,"setTransitionList"],[107,8,78,3,"setTransitionList"],[107,25,78,20],[107,26,78,21,"listtt"],[107,32,78,20],[107,33,78,3],[109,0,79,3,"Animated"],[109,30,79,12,"timing"],[109,36,79,3],[109,37,79,19,"animatedTranslateValue"],[109,59,79,3],[109,61,79,43],[110,0,80,4,"toValue"],[110,10,80,4,"toValue"],[110,17,80,11],[110,19,80,13],[110,20,79,43],[111,0,81,4,"duration"],[111,10,81,4,"duration"],[111,18,81,12],[111,20,81,14],[112,0,79,43],[112,9,79,3],[112,11,82,6,"start"],[112,16,79,3],[112,17,82,12],[113,0,82,12],[113,17,83,4,"Animated"],[113,39,83,13,"timing"],[113,45,83,4],[113,46,83,20,"animatedTranslateValue"],[113,68,83,4],[113,70,83,44],[114,0,84,5,"toValue"],[114,12,84,5,"toValue"],[114,19,84,12],[114,21,84,14],[114,22,83,44],[115,0,85,5,"duration"],[115,12,85,5,"duration"],[115,20,85,13],[115,22,85,15],[116,0,83,44],[116,11,83,4],[116,13,86,7,"start"],[116,18,83,4],[116,19,86,13],[116,31,86,19],[117,0,87,5],[117,16,87,9,"changed"],[117,23,87,5],[117,25,87,18],[118,0,88,6,"startScaleAnimation"],[118,14,88,6,"startScaleAnimation"],[118,33,88,25],[118,34,88,26],[118,39,88,25],[118,40,88,6],[119,0,89,6],[120,0,90,5],[120,11,83,4],[120,12,82,12],[121,0,82,12],[121,9,79,3],[122,0,92,3],[123,0,93,2],[125,0,95,1],[125,13,95,10,"getTranslation"],[125,27,95,1],[125,28,95,25,"index"],[125,33,95,1],[125,35,95,32,"prevIndex"],[125,44,95,1],[125,46,95,43],[126,0,96,2],[126,10,96,6,"index"],[126,15,96,11],[126,18,96,14,"prevIndex"],[126,27,96,2],[126,29,96,25],[127,0,97,3],[127,15,97,10],[127,16,98,4],[128,0,99,5,"translateY"],[128,10,99,5,"translateY"],[128,20,99,15],[128,22,99,17,"animatedTranslateValue"],[128,44,99,39],[128,45,99,40,"interpolate"],[128,56,99,17],[128,57,99,52],[129,0,100,6,"inputRange"],[129,12,100,6,"inputRange"],[129,22,100,16],[129,24,100,18],[129,25,100,19],[129,26,100,18],[129,28,100,22],[129,29,100,18],[129,30,99,52],[130,0,101,6,"outputRange"],[130,12,101,6,"outputRange"],[130,23,101,17],[130,25,101,19],[130,26,101,20],[130,27,101,19],[130,29,101,23],[130,30,101,24,"height"],[130,36,101,19],[131,0,99,52],[131,11,99,17],[132,0,98,4],[132,9,97,10],[132,10,97,3],[133,0,105,3],[135,0,106,2],[135,10,106,6,"index"],[135,15,106,11],[135,18,106,14,"prevIndex"],[135,27,106,2],[135,29,106,25],[136,0,107,3],[136,15,107,10],[136,16,108,4],[137,0,109,5,"translateY"],[137,10,109,5,"translateY"],[137,20,109,15],[137,22,109,17,"animatedTranslateValue"],[137,44,109,39],[137,45,109,40,"interpolate"],[137,56,109,17],[137,57,109,52],[138,0,110,6,"inputRange"],[138,12,110,6,"inputRange"],[138,22,110,16],[138,24,110,18],[138,25,110,19],[138,26,110,18],[138,28,110,22],[138,29,110,18],[138,30,109,52],[139,0,111,6,"outputRange"],[139,12,111,6,"outputRange"],[139,23,111,17],[139,25,111,19],[139,26,111,20],[139,27,111,19],[139,29,111,23,"height"],[139,35,111,19],[140,0,109,52],[140,11,109,17],[141,0,108,4],[141,9,107,10],[141,10,107,3],[142,0,115,3],[144,0,116,2],[145,0,117,2],[147,0,119,1],[147,11,120,2],[147,40,120,3],[147,57,120,2],[148,0,120,8],[148,6,120,8],[148,11,120,13],[148,13,120,15],[149,0,120,17,"marginTop"],[149,8,120,17,"marginTop"],[149,17,120,26],[149,19,120,28],[150,0,120,15],[150,7,120,2],[151,0,120,2],[152,0,120,2],[153,0,120,2],[154,0,120,2],[155,0,120,2],[155,7,121,4,"transitionList"],[155,21,121,18],[155,22,121,19,"map"],[155,25,121,4],[155,26,121,23],[155,36,121,24,"list"],[155,40,121,23],[155,42,121,30,"index"],[155,47,121,23],[156,0,121,23],[156,13,122,4],[156,42,122,5],[156,63,122,4],[156,64,122,14],[156,68,122,4],[157,0,123,5],[157,8,123,5],[157,11,123,8],[157,13,123,10,"index"],[157,18,122,4],[158,0,124,5],[158,8,124,5],[158,13,124,10],[158,15,124,12],[159,0,125,6,"width"],[159,10,125,6,"width"],[159,15,125,11],[159,17,125,13],[159,20,124,12],[160,0,126,6,"height"],[160,10,126,6,"height"],[160,16,126,12],[160,18,126,14,"height"],[160,24,124,12],[161,0,127,6,"position"],[161,10,127,6,"position"],[161,18,127,14],[161,20,127,16],[161,30,124,12],[162,0,128,6,"top"],[162,10,128,6,"top"],[162,13,128,9],[162,15,129,7,"height"],[162,21,129,13],[162,25,129,17,"list"],[162,29,129,21],[162,30,129,22,"prevIndex"],[162,39,129,17],[162,42,129,34],[162,43,129,13],[162,44,129,7],[162,48,130,7,"height"],[162,54,130,13],[162,58,130,17,"index"],[162,63,130,22],[162,66,130,25],[162,67,130,13],[162,68,124,12],[163,0,131,6,"backgroundColor"],[163,10,131,6,"backgroundColor"],[163,25,131,21],[163,27,131,23,"list"],[163,31,131,27],[163,32,131,28,"color"],[163,37,124,12],[164,0,132,6,"transform"],[164,10,132,6,"transform"],[164,19,132,15],[164,21,132,17,"getTranslation"],[164,35,132,31],[164,36,132,32,"index"],[164,41,132,31],[164,43,132,39,"list"],[164,47,132,43],[164,48,132,44,"prevIndex"],[164,57,132,31],[165,0,124,12],[165,9,122,4],[166,0,122,4],[167,0,122,4],[168,0,122,4],[169,0,122,4],[170,0,122,4],[170,9,135,5],[170,38,135,6],[170,55,135,5],[171,0,135,5],[172,0,135,5],[173,0,135,5],[174,0,135,5],[175,0,135,5],[175,9,136,7,"list"],[175,13,136,11],[175,14,136,12,"text"],[175,18,135,5],[175,25,136,19,"list"],[175,29,136,23],[175,30,136,24,"value"],[175,35,135,5],[175,36,122,4],[175,37,121,23],[176,0,121,23],[176,5,121,4],[176,6,120,2],[176,8,140,3],[176,37,140,4],[176,66,140,3],[177,0,141,4],[177,6,141,4],[177,11,141,9],[177,13,141,11],[178,0,141,13,"top"],[178,8,141,13,"top"],[178,11,141,16],[178,13,141,18],[179,0,141,11],[179,7,140,3],[180,0,142,4],[180,6,142,4],[180,13,142,11],[180,15,142,13],[181,0,142,13],[181,15,142,19,"startScaleAnimation"],[181,34,142,38],[181,35,142,39],[181,40,142,38],[181,41,142,13],[182,0,142,13],[182,7,140,3],[183,0,140,3],[184,0,140,3],[185,0,140,3],[186,0,140,3],[187,0,140,3],[187,7,144,4],[187,36,144,5],[187,53,144,4],[188,0,144,4],[189,0,144,4],[190,0,144,4],[191,0,144,4],[192,0,144,4],[192,16,140,3],[192,17,120,2],[192,18,119,1],[193,0,148,1],[195,5,29,24,"ConnexionScreen"],[195,20],[197,7,29,24,"ConnexionScreen"],[197,22]],"functionMap":{"names":["<global>","ConnexionScreen","List.map$argument_0","List.map.sort$argument_0","startScaleAnimation","transitionList.sort$argument_0","NewList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;WCI,iDD;GEC;IFQ;CGM;8CCC;GDK;iBEI,4CF;SGS,gDH;UIC;KJQ;YKM;MLQ;EHG;CSE;ETsB;uBUI;IVkB;aWG,gCX;CDM"}},"type":"js/module"}]}