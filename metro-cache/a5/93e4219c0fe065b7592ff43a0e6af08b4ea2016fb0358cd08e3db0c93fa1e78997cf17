{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Screens/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\"\n  }, {\n    value: 1,\n    text: \"Benoit\"\n  }, {\n    value: 6,\n    text: \"Morgane\"\n  }];\n  var NewList = [{\n    value: 15,\n    text: \"Felix\"\n  }, {\n    value: 20,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen() {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(List.sort(function (list, _list) {\n      return list.value < _list.value;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var _useState7 = (0, _react.useState)(true),\n        _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n        changed = _useState8[0],\n        setChanged = _useState8[1];\n\n    var height = 50;\n\n    var _useState9 = (0, _react.useState)(0),\n        _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n        value = _useState10[0],\n        setValue = _useState10[1];\n\n    animatedValue.addListener(function (_ref) {\n      var value = _ref.value;\n      setValue(value);\n    });\n\n    function startScaleAnimation() {\n      var newTransitionList = transitionList;\n\n      var _loop = function _loop(i) {\n        console.log(i);\n\n        if (transitionList[i].value < NewList.find(function (list) {\n          return list.text === transitionList[i].text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          setChanged(true);\n        }\n      };\n\n      for (var i in transitionList) {\n        _loop(i);\n      }\n\n      console.log(newTransitionList);\n\n      if (changed) {\n        setTransitionList(newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          return list.value < _list.value;\n        }));\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          timing: 1200\n        }).start(function () {\n          return startScaleAnimation();\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [height * prevIndex, height * index]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [height * index, height * prevIndex]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      }\n    }, transitionList.map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 320,\n          height: height,\n          backgroundColor: \"#253237\",\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      onPress: function onPress() {\n        return startScaleAnimation();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      }\n    }, \"start \")));\n  }\n\n  _s(ConnexionScreen, \"eEtkQYV+ht9/h9HY7/ApEreU/8k=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":194,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[31,0,19,1],[31,3,18,13],[31,5,20,1],[32,0,20,3,"value"],[32,4,20,3,"value"],[32,9,20,8],[32,11,20,10],[32,12,20,1],[33,0,20,13,"text"],[33,4,20,13,"text"],[33,8,20,17],[33,10,20,19],[34,0,20,1],[34,3,18,13],[34,5,21,1],[35,0,21,3,"value"],[35,4,21,3,"value"],[35,9,21,8],[35,11,21,10],[35,12,21,1],[36,0,21,13,"text"],[36,4,21,13,"text"],[36,8,21,17],[36,10,21,19],[37,0,21,1],[37,3,18,13],[37,4,18,0],[38,0,23,0],[38,6,23,6,"NewList"],[38,13,23,13],[38,16,23,16],[38,17,24,1],[39,0,24,3,"value"],[39,4,24,3,"value"],[39,9,24,8],[39,11,24,10],[39,13,24,1],[40,0,24,14,"text"],[40,4,24,14,"text"],[40,8,24,18],[40,10,24,20],[41,0,24,1],[41,3,23,16],[41,5,25,1],[42,0,25,3,"value"],[42,4,25,3,"value"],[42,9,25,8],[42,11,25,10],[42,13,25,1],[43,0,25,14,"text"],[43,4,25,14,"text"],[43,8,25,18],[43,10,25,20],[44,0,25,1],[44,3,23,16],[44,5,26,1],[45,0,26,3,"value"],[45,4,26,3,"value"],[45,9,26,8],[45,11,26,10],[45,12,26,1],[46,0,26,13,"text"],[46,4,26,13,"text"],[46,8,26,17],[46,10,26,19],[47,0,26,1],[47,3,23,16],[47,4,23,0],[49,0,29,15],[49,11,29,24,"ConnexionScreen"],[49,26,29,15],[49,29,29,42],[50,0,29,42],[52,0,29,42],[52,20,30,25],[52,41,30,34],[52,45,30,38,"Animated"],[52,67,30,47,"Value"],[52,72,30,34],[52,73,30,53],[52,74,30,34],[52,75,30,25],[52,76,29,42],[53,0,29,42],[54,0,29,42],[54,8,30,8,"animatedValue"],[54,21,29,42],[56,0,29,42],[56,21,31,34],[56,42,31,43],[56,46,31,47,"Animated"],[56,68,31,56,"Value"],[56,73,31,43],[56,74,31,62],[56,75,31,43],[56,76,31,34],[56,77,29,42],[57,0,29,42],[58,0,29,42],[58,8,31,8,"animatedTranslateValue"],[58,30,29,42],[60,0,29,42],[60,21,32,45],[60,42,33,2,"List"],[60,46,33,6],[60,47,33,7,"sort"],[60,51,33,2],[60,52,33,12],[60,62,33,13,"list"],[60,66,33,12],[60,68,33,19,"_list"],[60,73,33,12],[61,0,33,12],[61,13,33,29,"list"],[61,17,33,33],[61,18,33,34,"value"],[61,23,33,29],[61,26,33,42,"_list"],[61,31,33,47],[61,32,33,48,"value"],[61,37,33,12],[62,0,33,12],[62,5,33,2],[62,6,32,45],[62,7,29,42],[63,0,29,42],[64,0,29,42],[64,8,32,8,"transitionList"],[64,22,29,42],[65,0,29,42],[65,8,32,24,"setTransitionList"],[65,25,29,42],[67,0,29,42],[67,21,35,31],[67,42,35,40],[67,46,35,31],[67,47,29,42],[68,0,29,42],[69,0,29,42],[69,8,35,8,"changed"],[69,15,29,42],[70,0,29,42],[70,8,35,17,"setChanged"],[70,18,29,42],[72,0,37,1],[72,8,37,7,"height"],[72,14,37,13],[72,17,37,16],[72,19,37,1],[74,0,29,42],[74,21,38,27],[74,42,38,36],[74,43,38,27],[74,44,29,42],[75,0,29,42],[76,0,29,42],[76,8,38,8,"value"],[76,13,29,42],[77,0,29,42],[77,8,38,15,"setValue"],[77,16,29,42],[79,0,39,1,"animatedValue"],[79,4,39,1,"animatedValue"],[79,17,39,14],[79,18,39,15,"addListener"],[79,29,39,1],[79,30,39,27],[79,46,39,42],[80,0,39,42],[80,10,39,30,"value"],[80,15,39,42],[80,23,39,30,"value"],[80,28,39,42],[81,0,40,2,"setValue"],[81,6,40,2,"setValue"],[81,14,40,10],[81,15,40,11,"value"],[81,20,40,10],[81,21,40,2],[82,0,41,2],[82,5,39,1],[84,0,43,1],[84,13,43,10,"startScaleAnimation"],[84,32,43,1],[84,35,43,32],[85,0,44,2],[85,10,44,6,"newTransitionList"],[85,27,44,23],[85,30,44,26,"transitionList"],[85,44,44,2],[87,0,43,32],[87,33,46,13,"i"],[87,34,43,32],[88,0,47,3,"console"],[88,8,47,3,"console"],[88,15,47,10],[88,16,47,11,"log"],[88,19,47,3],[88,20,47,15,"i"],[88,21,47,3],[90,0,48,3],[90,12,49,4,"transitionList"],[90,26,49,18],[90,27,49,19,"i"],[90,28,49,18],[90,29,49,4],[90,30,49,22,"value"],[90,35,49,4],[90,38,50,4,"NewList"],[90,45,50,11],[90,46,50,12,"find"],[90,50,50,4],[90,51,50,17],[90,61,50,17,"list"],[90,65,50,21],[91,0,50,21],[91,17,50,25,"list"],[91,21,50,29],[91,22,50,30,"text"],[91,26,50,25],[91,31,50,39,"transitionList"],[91,45,50,53],[91,46,50,54,"i"],[91,47,50,53],[91,48,50,39],[91,49,50,57,"text"],[91,53,50,21],[92,0,50,21],[92,9,50,4],[92,11,50,63,"value"],[92,16,48,3],[92,18,51,5],[93,0,52,4,"newTransitionList"],[93,10,52,4,"newTransitionList"],[93,27,52,21],[93,28,52,22,"i"],[93,29,52,21],[93,30,52,4],[93,31,52,25,"value"],[93,36,52,4],[93,40,52,34],[93,41,52,4],[94,0,53,4,"setChanged"],[94,10,53,4,"setChanged"],[94,20,53,14],[94,21,53,15],[94,25,53,14],[94,26,53,4],[95,0,54,4],[96,0,43,32],[98,0,46,2],[98,11,46,7],[98,15,46,13,"i"],[98,16,46,2],[98,20,46,18,"transitionList"],[98,34,46,2],[98,36,46,34],[99,0,46,34],[99,14,46,13,"i"],[99,15,46,34],[100,0,55,3],[102,0,56,2,"console"],[102,6,56,2,"console"],[102,13,56,9],[102,14,56,10,"log"],[102,17,56,2],[102,18,56,14,"newTransitionList"],[102,35,56,2],[104,0,57,2],[104,10,57,6,"changed"],[104,17,57,2],[104,19,57,15],[105,0,58,3,"setTransitionList"],[105,8,58,3,"setTransitionList"],[105,25,58,20],[105,26,59,4,"newTransitionList"],[105,43,59,21],[105,44,60,6,"map"],[105,47,59,4],[105,48,60,10],[105,58,60,11,"list"],[105,62,60,10],[105,64,60,17,"index"],[105,69,60,10],[106,0,60,10],[106,35,60,33,"list"],[106,39,60,10],[107,0,60,39,"prevIndex"],[107,12,60,39,"prevIndex"],[107,21,60,48],[107,23,60,50,"index"],[108,0,60,10],[109,0,60,10],[109,9,59,4],[109,11,61,6,"sort"],[109,15,59,4],[109,16,61,11],[109,26,61,12,"list"],[109,30,61,11],[109,32,61,18,"_list"],[109,37,61,11],[110,0,61,11],[110,17,61,28,"list"],[110,21,61,32],[110,22,61,33,"value"],[110,27,61,28],[110,30,61,41,"_list"],[110,35,61,46],[110,36,61,47,"value"],[110,41,61,11],[111,0,61,11],[111,9,59,4],[111,10,58,20],[111,11,58,3],[113,0,63,3,"Animated"],[113,30,63,12,"timing"],[113,36,63,3],[113,37,63,19,"animatedTranslateValue"],[113,59,63,3],[113,61,63,43],[114,0,64,4,"toValue"],[114,10,64,4,"toValue"],[114,17,64,11],[114,19,64,13],[114,20,63,43],[115,0,65,4,"timing"],[115,10,65,4,"timing"],[115,16,65,10],[115,18,65,12],[116,0,63,43],[116,9,63,3],[116,11,66,6,"start"],[116,16,63,3],[116,17,66,12],[117,0,66,12],[117,17,66,18,"startScaleAnimation"],[117,36,66,37],[117,38,66,12],[118,0,66,12],[118,9,63,3],[119,0,67,3],[120,0,68,2],[122,0,70,1],[122,13,70,10,"getTranslation"],[122,27,70,1],[122,28,70,25,"index"],[122,33,70,1],[122,35,70,32,"prevIndex"],[122,44,70,1],[122,46,70,43],[123,0,71,2],[123,10,71,6,"index"],[123,15,71,11],[123,18,71,14,"prevIndex"],[123,27,71,2],[123,29,71,25],[124,0,72,3],[124,15,72,10],[124,16,73,4],[125,0,74,5,"translateY"],[125,10,74,5,"translateY"],[125,20,74,15],[125,22,74,17,"animatedTranslateValue"],[125,44,74,39],[125,45,74,40,"interpolate"],[125,56,74,17],[125,57,74,52],[126,0,75,6,"inputRange"],[126,12,75,6,"inputRange"],[126,22,75,16],[126,24,75,18],[126,25,75,19],[126,26,75,18],[126,28,75,22],[126,29,75,18],[126,30,74,52],[127,0,76,6,"outputRange"],[127,12,76,6,"outputRange"],[127,23,76,17],[127,25,76,19],[127,26,76,20,"height"],[127,32,76,26],[127,35,76,29,"prevIndex"],[127,44,76,19],[127,46,76,40,"height"],[127,52,76,46],[127,55,76,49,"index"],[127,60,76,19],[128,0,74,52],[128,11,74,17],[129,0,73,4],[129,9,72,10],[129,10,72,3],[130,0,80,3],[132,0,81,2],[132,10,81,6,"index"],[132,15,81,11],[132,18,81,14,"prevIndex"],[132,27,81,2],[132,29,81,25],[133,0,82,3],[133,15,82,10],[133,16,83,4],[134,0,84,5,"translateY"],[134,10,84,5,"translateY"],[134,20,84,15],[134,22,84,17,"animatedTranslateValue"],[134,44,84,39],[134,45,84,40,"interpolate"],[134,56,84,17],[134,57,84,52],[135,0,85,6,"inputRange"],[135,12,85,6,"inputRange"],[135,22,85,16],[135,24,85,18],[135,25,85,19],[135,26,85,18],[135,28,85,22],[135,29,85,18],[135,30,84,52],[136,0,86,6,"outputRange"],[136,12,86,6,"outputRange"],[136,23,86,17],[136,25,86,19],[136,26,86,20,"height"],[136,32,86,26],[136,35,86,29,"index"],[136,40,86,19],[136,42,86,36,"height"],[136,48,86,42],[136,51,86,45,"prevIndex"],[136,60,86,19],[137,0,84,52],[137,11,84,17],[138,0,83,4],[138,9,82,10],[138,10,82,3],[139,0,90,3],[141,0,91,2],[142,0,92,2],[144,0,94,1],[144,11,95,2],[144,40,95,3],[144,57,95,2],[145,0,95,8],[145,6,95,8],[145,11,95,13],[145,13,95,15],[146,0,95,17,"marginTop"],[146,8,95,17,"marginTop"],[146,17,95,26],[146,19,95,28],[147,0,95,15],[147,7,95,2],[148,0,95,2],[149,0,95,2],[150,0,95,2],[151,0,95,2],[152,0,95,2],[152,7,96,4,"transitionList"],[152,21,96,18],[152,22,96,19,"map"],[152,25,96,4],[152,26,96,23],[152,36,96,24,"list"],[152,40,96,23],[152,42,96,30,"index"],[152,47,96,23],[153,0,96,23],[153,13,97,4],[153,42,97,5],[153,63,97,4],[153,64,97,14],[153,68,97,4],[154,0,98,5],[154,8,98,5],[154,11,98,8],[154,13,98,10,"index"],[154,18,97,4],[155,0,99,5],[155,8,99,5],[155,13,99,10],[155,15,99,12],[156,0,100,6,"width"],[156,10,100,6,"width"],[156,15,100,11],[156,17,100,13],[156,20,99,12],[157,0,101,6,"height"],[157,10,101,6,"height"],[157,16,101,12],[157,18,101,14,"height"],[157,24,99,12],[158,0,102,6,"backgroundColor"],[158,10,102,6,"backgroundColor"],[158,25,102,21],[158,27,102,23],[158,36,99,12],[159,0,103,6,"transform"],[159,10,103,6,"transform"],[159,19,103,15],[159,21,103,17,"getTranslation"],[159,35,103,31],[159,36,103,32,"index"],[159,41,103,31],[159,43,103,39,"list"],[159,47,103,43],[159,48,103,44,"prevIndex"],[159,57,103,31],[160,0,99,12],[160,9,97,4],[161,0,97,4],[162,0,97,4],[163,0,97,4],[164,0,97,4],[165,0,97,4],[165,9,106,5],[165,38,106,6],[165,55,106,5],[166,0,106,5],[167,0,106,5],[168,0,106,5],[169,0,106,5],[170,0,106,5],[170,9,107,7,"list"],[170,13,107,11],[170,14,107,12,"text"],[170,18,106,5],[170,25,107,19,"list"],[170,29,107,23],[170,30,107,24,"value"],[170,35,106,5],[170,36,97,4],[170,37,96,23],[171,0,96,23],[171,5,96,4],[171,6,95,2],[171,8,111,3],[171,37,111,4],[171,66,111,3],[172,0,111,21],[172,6,111,21],[172,13,111,28],[172,15,111,30],[173,0,111,30],[173,15,111,36,"startScaleAnimation"],[173,34,111,55],[173,36,111,30],[174,0,111,30],[174,7,111,3],[175,0,111,3],[176,0,111,3],[177,0,111,3],[178,0,111,3],[179,0,111,3],[179,7,112,4],[179,36,112,5],[179,53,112,4],[180,0,112,4],[181,0,112,4],[182,0,112,4],[183,0,112,4],[184,0,112,4],[184,16,111,3],[184,17,95,2],[184,18,94,1],[185,0,116,1],[187,5,29,24,"ConnexionScreen"],[187,20],[189,7,29,24,"ConnexionScreen"],[189,22]],"functionMap":{"names":["<global>","ConnexionScreen","List.sort$argument_0","animatedValue.addListener$argument_0","startScaleAnimation","NewList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;YCI,yCD;2BEM;EFE;CGE;iBCO,4CD;UEU,gDF;WGC,yCH;YIK,2BJ;EHE;CQE;ERsB;uBSI;ITc;8BUC,2BV;CDK"}},"type":"js/module"}]}