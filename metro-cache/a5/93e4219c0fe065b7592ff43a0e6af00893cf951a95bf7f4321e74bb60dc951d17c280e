{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Screens/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 3,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var NewList = [{\n    value: 6,\n    text: \"Felix\"\n  }, {\n    value: 6,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen() {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(List.sort(function (list, _list) {\n      if (list.value > _list.value) return 1;\n    }).map(function (list, index) {\n      return _objectSpread({}, list, {\n        prevIndex: index\n      });\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var height = 50;\n\n    function startScaleAnimation(changed) {\n      transitionList.sort(function (list, _list) {\n        if (list.value < _list.value) return 1;\n        if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n      });\n      console.log(transitionList);\n\n      var _loop = function _loop(i) {\n        if (transitionList[i].value < NewList.find(function (list) {\n          return list.text === transitionList[i].text;\n        }).value) {\n          transitionList[i].value += 1;\n          changed = true;\n        }\n      };\n\n      for (var i in transitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        console.log(transitionList);\n        var listtt = newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          if (list.value < _list.value) return 1;\n          if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n        });\n        console.log(\"sorted\", listtt);\n        setTransitionList(listtt);\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          duration: 500\n        }).start(function () {\n          return _reactNative.Animated.timing(animatedTranslateValue, {\n            toValue: 0,\n            duration: 1\n          }).start(function () {\n            if (changed) {\n              startScaleAnimation(false);\n            }\n          });\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -height]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, height]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      }\n    }, transitionList.sort(function (list, _list) {\n      if (list.value < _list.value) return 1;\n      if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n    }).map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 320,\n          height: height,\n          position: \"absolute\",\n          top: height * (list.prevIndex + 1) || height * (index + 1),\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: {\n        top: 300\n      },\n      onPress: function onPress() {\n        return startScaleAnimation(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      }\n    }, \"start \")));\n  }\n\n  _s(ConnexionScreen, \"ONs1AtrilCzJ0N4cmFklaQeb5GU=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":205,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,13],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,13],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,13],[40,4,18,0],[41,0,23,0],[41,6,23,6,"NewList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,12,24,1],[43,0,24,13,"text"],[43,4,24,13,"text"],[43,8,24,17],[43,10,24,19],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,12,25,1],[46,0,25,13,"text"],[46,4,25,13,"text"],[46,8,25,17],[46,10,25,19],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"ConnexionScreen"],[52,26,29,15],[52,29,29,42],[53,0,29,42],[55,0,29,42],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,42],[56,0,29,42],[57,0,29,42],[57,8,30,8,"animatedValue"],[57,21,29,42],[59,0,29,42],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,42],[60,0,29,42],[61,0,29,42],[61,8,31,8,"animatedTranslateValue"],[61,30,29,42],[63,0,29,42],[63,21,32,45],[63,42,33,2,"List"],[63,46,33,6],[63,47,33,7,"sort"],[63,51,33,2],[63,52,33,12],[63,62,33,13,"list"],[63,66,33,12],[63,68,33,19,"_list"],[63,73,33,12],[63,75,33,29],[64,0,34,3],[64,10,34,7,"list"],[64,14,34,11],[64,15,34,12,"value"],[64,20,34,7],[64,23,34,20,"_list"],[64,28,34,25],[64,29,34,26,"value"],[64,34,34,3],[64,36,34,33],[64,43,34,40],[64,44,34,33],[65,0,35,3],[65,5,33,2],[65,7,35,5,"map"],[65,10,33,2],[65,11,35,9],[65,21,35,10,"list"],[65,25,35,9],[65,27,35,16,"index"],[65,32,35,9],[66,0,35,9],[66,31,35,32,"list"],[66,35,35,9],[67,0,35,38,"prevIndex"],[67,8,35,38,"prevIndex"],[67,17,35,47],[67,19,35,49,"index"],[68,0,35,9],[69,0,35,9],[69,5,33,2],[69,6,32,45],[69,7,29,42],[70,0,29,42],[71,0,29,42],[71,8,32,8,"transitionList"],[71,22,29,42],[72,0,29,42],[72,8,32,24,"setTransitionList"],[72,25,29,42],[74,0,38,1],[74,8,38,7,"height"],[74,14,38,13],[74,17,38,16],[74,19,38,1],[76,0,40,1],[76,13,40,10,"startScaleAnimation"],[76,32,40,1],[76,33,40,30,"changed"],[76,40,40,1],[76,42,40,39],[77,0,41,2,"transitionList"],[77,6,41,2,"transitionList"],[77,20,41,16],[77,21,41,17,"sort"],[77,25,41,2],[77,26,41,22],[77,36,41,23,"list"],[77,40,41,22],[77,42,41,29,"_list"],[77,47,41,22],[77,49,41,39],[78,0,42,3],[78,12,42,7,"list"],[78,16,42,11],[78,17,42,12,"value"],[78,22,42,7],[78,25,42,20,"_list"],[78,30,42,25],[78,31,42,26,"value"],[78,36,42,3],[78,38,42,33],[78,45,42,40],[78,46,42,33],[79,0,43,3],[79,12,43,7,"list"],[79,16,43,11],[79,17,43,12,"value"],[79,22,43,7],[79,27,43,22,"_list"],[79,32,43,27],[79,33,43,28,"value"],[79,38,43,7],[79,42,43,37,"list"],[79,46,43,41],[79,47,43,42,"prevIndex"],[79,56,43,37],[79,59,43,54,"_list"],[79,64,43,59],[79,65,43,60,"prevIndex"],[79,74,43,3],[79,76,44,4],[79,83,44,11],[79,84,44,4],[79,85,43,3],[79,90,45,8],[79,97,45,15],[79,98,45,16],[79,99,45,8],[80,0,46,3],[80,7,41,2],[81,0,47,2,"console"],[81,6,47,2,"console"],[81,13,47,9],[81,14,47,10,"log"],[81,17,47,2],[81,18,47,14,"transitionList"],[81,32,47,2],[83,0,40,39],[83,33,48,13,"i"],[83,34,40,39],[84,0,49,3],[84,12,50,4,"transitionList"],[84,26,50,18],[84,27,50,19,"i"],[84,28,50,18],[84,29,50,4],[84,30,50,22,"value"],[84,35,50,4],[84,38,51,4,"NewList"],[84,45,51,11],[84,46,51,12,"find"],[84,50,51,4],[84,51,51,17],[84,61,51,17,"list"],[84,65,51,21],[85,0,51,21],[85,17,51,25,"list"],[85,21,51,29],[85,22,51,30,"text"],[85,26,51,25],[85,31,51,39,"transitionList"],[85,45,51,53],[85,46,51,54,"i"],[85,47,51,53],[85,48,51,39],[85,49,51,57,"text"],[85,53,51,21],[86,0,51,21],[86,9,51,4],[86,11,51,63,"value"],[86,16,49,3],[86,18,52,5],[87,0,53,4,"transitionList"],[87,10,53,4,"transitionList"],[87,24,53,18],[87,25,53,19,"i"],[87,26,53,18],[87,27,53,4],[87,28,53,22,"value"],[87,33,53,4],[87,37,53,31],[87,38,53,4],[88,0,54,4,"changed"],[88,10,54,4,"changed"],[88,17,54,11],[88,20,54,14],[88,24,54,4],[89,0,55,4],[90,0,40,39],[92,0,48,2],[92,11,48,7],[92,15,48,13,"i"],[92,16,48,2],[92,20,48,18,"transitionList"],[92,34,48,2],[92,36,48,34],[93,0,48,34],[93,14,48,13,"i"],[93,15,48,34],[94,0,56,3],[96,0,57,2],[96,10,57,6,"changed"],[96,17,57,2],[96,19,57,15],[97,0,58,3,"console"],[97,8,58,3,"console"],[97,15,58,10],[97,16,58,11,"log"],[97,19,58,3],[97,20,58,15,"transitionList"],[97,34,58,3],[98,0,59,3],[98,12,59,9,"listtt"],[98,18,59,15],[98,21,59,18,"newTransitionList"],[98,38,59,35],[98,39,60,5,"map"],[98,42,59,18],[98,43,60,9],[98,53,60,10,"list"],[98,57,60,9],[98,59,60,16,"index"],[98,64,60,9],[99,0,60,9],[99,35,60,32,"list"],[99,39,60,9],[100,0,60,38,"prevIndex"],[100,12,60,38,"prevIndex"],[100,21,60,47],[100,23,60,49,"index"],[101,0,60,9],[102,0,60,9],[102,9,59,18],[102,11,61,5,"sort"],[102,15,59,18],[102,16,61,10],[102,26,61,11,"list"],[102,30,61,10],[102,32,61,17,"_list"],[102,37,61,10],[102,39,61,27],[103,0,62,5],[103,14,62,9,"list"],[103,18,62,13],[103,19,62,14,"value"],[103,24,62,9],[103,27,62,22,"_list"],[103,32,62,27],[103,33,62,28,"value"],[103,38,62,5],[103,40,62,35],[103,47,62,42],[103,48,62,35],[104,0,63,5],[104,14,64,6,"list"],[104,18,64,10],[104,19,64,11,"value"],[104,24,64,6],[104,29,64,21,"_list"],[104,34,64,26],[104,35,64,27,"value"],[104,40,64,6],[104,44,65,6,"list"],[104,48,65,10],[104,49,65,11,"prevIndex"],[104,58,65,6],[104,61,65,23,"_list"],[104,66,65,28],[104,67,65,29,"prevIndex"],[104,76,63,5],[104,78,67,6],[104,85,67,13],[104,86,67,6],[104,87,63,5],[104,92,68,10],[104,99,68,17],[104,100,68,18],[104,101,68,10],[105,0,69,5],[105,9,59,18],[105,10,59,3],[106,0,70,3,"console"],[106,8,70,3,"console"],[106,15,70,10],[106,16,70,11,"log"],[106,19,70,3],[106,20,70,15],[106,28,70,3],[106,30,70,25,"listtt"],[106,36,70,3],[107,0,71,3,"setTransitionList"],[107,8,71,3,"setTransitionList"],[107,25,71,20],[107,26,71,21,"listtt"],[107,32,71,20],[107,33,71,3],[109,0,72,3,"Animated"],[109,30,72,12,"timing"],[109,36,72,3],[109,37,72,19,"animatedTranslateValue"],[109,59,72,3],[109,61,72,43],[110,0,73,4,"toValue"],[110,10,73,4,"toValue"],[110,17,73,11],[110,19,73,13],[110,20,72,43],[111,0,74,4,"duration"],[111,10,74,4,"duration"],[111,18,74,12],[111,20,74,14],[112,0,72,43],[112,9,72,3],[112,11,75,6,"start"],[112,16,72,3],[112,17,75,12],[113,0,75,12],[113,17,76,4,"Animated"],[113,39,76,13,"timing"],[113,45,76,4],[113,46,76,20,"animatedTranslateValue"],[113,68,76,4],[113,70,76,44],[114,0,77,5,"toValue"],[114,12,77,5,"toValue"],[114,19,77,12],[114,21,77,14],[114,22,76,44],[115,0,78,5,"duration"],[115,12,78,5,"duration"],[115,20,78,13],[115,22,78,15],[116,0,76,44],[116,11,76,4],[116,13,79,7,"start"],[116,18,76,4],[116,19,79,13],[116,31,79,19],[117,0,80,5],[117,16,80,9,"changed"],[117,23,80,5],[117,25,80,18],[118,0,81,6,"startScaleAnimation"],[118,14,81,6,"startScaleAnimation"],[118,33,81,25],[118,34,81,26],[118,39,81,25],[118,40,81,6],[119,0,82,6],[120,0,83,5],[120,11,76,4],[120,12,75,12],[121,0,75,12],[121,9,72,3],[122,0,85,3],[123,0,86,2],[125,0,88,1],[125,13,88,10,"getTranslation"],[125,27,88,1],[125,28,88,25,"index"],[125,33,88,1],[125,35,88,32,"prevIndex"],[125,44,88,1],[125,46,88,43],[126,0,89,2],[126,10,89,6,"index"],[126,15,89,11],[126,18,89,14,"prevIndex"],[126,27,89,2],[126,29,89,25],[127,0,90,3],[127,15,90,10],[127,16,91,4],[128,0,92,5,"translateY"],[128,10,92,5,"translateY"],[128,20,92,15],[128,22,92,17,"animatedTranslateValue"],[128,44,92,39],[128,45,92,40,"interpolate"],[128,56,92,17],[128,57,92,52],[129,0,93,6,"inputRange"],[129,12,93,6,"inputRange"],[129,22,93,16],[129,24,93,18],[129,25,93,19],[129,26,93,18],[129,28,93,22],[129,29,93,18],[129,30,92,52],[130,0,94,6,"outputRange"],[130,12,94,6,"outputRange"],[130,23,94,17],[130,25,94,19],[130,26,94,20],[130,27,94,19],[130,29,94,23],[130,30,94,24,"height"],[130,36,94,19],[131,0,92,52],[131,11,92,17],[132,0,91,4],[132,9,90,10],[132,10,90,3],[133,0,98,3],[135,0,99,2],[135,10,99,6,"index"],[135,15,99,11],[135,18,99,14,"prevIndex"],[135,27,99,2],[135,29,99,25],[136,0,100,3],[136,15,100,10],[136,16,101,4],[137,0,102,5,"translateY"],[137,10,102,5,"translateY"],[137,20,102,15],[137,22,102,17,"animatedTranslateValue"],[137,44,102,39],[137,45,102,40,"interpolate"],[137,56,102,17],[137,57,102,52],[138,0,103,6,"inputRange"],[138,12,103,6,"inputRange"],[138,22,103,16],[138,24,103,18],[138,25,103,19],[138,26,103,18],[138,28,103,22],[138,29,103,18],[138,30,102,52],[139,0,104,6,"outputRange"],[139,12,104,6,"outputRange"],[139,23,104,17],[139,25,104,19],[139,26,104,20],[139,27,104,19],[139,29,104,23,"height"],[139,35,104,19],[140,0,102,52],[140,11,102,17],[141,0,101,4],[141,9,100,10],[141,10,100,3],[142,0,108,3],[144,0,109,2],[145,0,110,2],[147,0,112,1],[147,11,113,2],[147,40,113,3],[147,57,113,2],[148,0,113,8],[148,6,113,8],[148,11,113,13],[148,13,113,15],[149,0,113,17,"marginTop"],[149,8,113,17,"marginTop"],[149,17,113,26],[149,19,113,28],[150,0,113,15],[150,7,113,2],[151,0,113,2],[152,0,113,2],[153,0,113,2],[154,0,113,2],[155,0,113,2],[155,7,114,4,"transitionList"],[155,21,114,18],[155,22,115,5,"sort"],[155,26,114,4],[155,27,115,10],[155,37,115,11,"list"],[155,41,115,10],[155,43,115,17,"_list"],[155,48,115,10],[155,50,115,27],[156,0,116,5],[156,10,116,9,"list"],[156,14,116,13],[156,15,116,14,"value"],[156,20,116,9],[156,23,116,22,"_list"],[156,28,116,27],[156,29,116,28,"value"],[156,34,116,5],[156,36,116,35],[156,43,116,42],[156,44,116,35],[157,0,117,5],[157,10,118,6,"list"],[157,14,118,10],[157,15,118,11,"value"],[157,20,118,6],[157,25,118,21,"_list"],[157,30,118,26],[157,31,118,27,"value"],[157,36,118,6],[157,40,119,6,"list"],[157,44,119,10],[157,45,119,11,"prevIndex"],[157,54,119,6],[157,57,119,23,"_list"],[157,62,119,28],[157,63,119,29,"prevIndex"],[157,72,117,5],[157,74,121,6],[157,81,121,13],[157,82,121,6],[157,83,117,5],[157,88,122,10],[157,95,122,17],[157,96,122,18],[157,97,122,10],[158,0,123,5],[158,5,114,4],[158,7,124,5,"map"],[158,10,114,4],[158,11,124,9],[158,21,124,10,"list"],[158,25,124,9],[158,27,124,16,"index"],[158,32,124,9],[159,0,124,9],[159,13,125,5],[159,42,125,6],[159,63,125,5],[159,64,125,15],[159,68,125,5],[160,0,126,6],[160,8,126,6],[160,11,126,9],[160,13,126,11,"index"],[160,18,125,5],[161,0,127,6],[161,8,127,6],[161,13,127,11],[161,15,127,13],[162,0,128,7,"width"],[162,10,128,7,"width"],[162,15,128,12],[162,17,128,14],[162,20,127,13],[163,0,129,7,"height"],[163,10,129,7,"height"],[163,16,129,13],[163,18,129,15,"height"],[163,24,127,13],[164,0,130,7,"position"],[164,10,130,7,"position"],[164,18,130,15],[164,20,130,17],[164,30,127,13],[165,0,131,7,"top"],[165,10,131,7,"top"],[165,13,131,10],[165,15,132,8,"height"],[165,21,132,14],[165,25,132,18,"list"],[165,29,132,22],[165,30,132,23,"prevIndex"],[165,39,132,18],[165,42,132,35],[165,43,132,14],[165,44,132,8],[165,48,133,8,"height"],[165,54,133,14],[165,58,133,18,"index"],[165,63,133,23],[165,66,133,26],[165,67,133,14],[165,68,127,13],[166,0,134,7,"backgroundColor"],[166,10,134,7,"backgroundColor"],[166,25,134,22],[166,27,134,24,"list"],[166,31,134,28],[166,32,134,29,"color"],[166,37,127,13],[167,0,135,7,"transform"],[167,10,135,7,"transform"],[167,19,135,16],[167,21,135,18,"getTranslation"],[167,35,135,32],[167,36,135,33,"index"],[167,41,135,32],[167,43,135,40,"list"],[167,47,135,44],[167,48,135,45,"prevIndex"],[167,57,135,32],[168,0,127,13],[168,9,125,5],[169,0,125,5],[170,0,125,5],[171,0,125,5],[172,0,125,5],[173,0,125,5],[173,9,138,6],[173,38,138,7],[173,55,138,6],[174,0,138,6],[175,0,138,6],[176,0,138,6],[177,0,138,6],[178,0,138,6],[178,9,139,8,"list"],[178,13,139,12],[178,14,139,13,"text"],[178,18,138,6],[178,25,139,20,"list"],[178,29,139,24],[178,30,139,25,"value"],[178,35,138,6],[178,36,125,5],[178,37,124,9],[179,0,124,9],[179,5,114,4],[179,6,113,2],[179,8,143,3],[179,37,143,4],[179,66,143,3],[180,0,144,4],[180,6,144,4],[180,11,144,9],[180,13,144,11],[181,0,144,13,"top"],[181,8,144,13,"top"],[181,11,144,16],[181,13,144,18],[182,0,144,11],[182,7,143,3],[183,0,145,4],[183,6,145,4],[183,13,145,11],[183,15,145,13],[184,0,145,13],[184,15,145,19,"startScaleAnimation"],[184,34,145,38],[184,35,145,39],[184,40,145,38],[184,41,145,13],[185,0,145,13],[185,7,143,3],[186,0,143,3],[187,0,143,3],[188,0,143,3],[189,0,143,3],[190,0,143,3],[190,7,147,4],[190,36,147,5],[190,53,147,4],[191,0,147,4],[192,0,147,4],[193,0,147,4],[194,0,147,4],[195,0,147,4],[195,16,143,3],[195,17,113,2],[195,18,112,1],[196,0,151,1],[198,5,29,24,"ConnexionScreen"],[198,20],[200,7,29,24,"ConnexionScreen"],[200,22]],"functionMap":{"names":["<global>","ConnexionScreen","List.sort$argument_0","List.sort.map$argument_0","startScaleAnimation","transitionList.sort$argument_0","NewList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.sort.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;YCI;GDE,ME,gDF;CGK;sBCC;GDK;iBEK,4CF;SGS,gDH;UIC;KJQ;YKM;MLQ;EHG;CSE;ETsB;UIK;KJQ;SUC;KVkB;aWG,gCX;CDM"}},"type":"js/module"}]}