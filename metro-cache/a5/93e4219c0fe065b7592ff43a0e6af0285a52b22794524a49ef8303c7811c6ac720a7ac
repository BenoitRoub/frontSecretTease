{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Screens/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 3,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var NewList = [{\n    value: 6,\n    text: \"Felix\"\n  }, {\n    value: 6,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen() {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(List.sort(function (list, _list) {\n      if (list.value < _list.value) return 1;\n    }).map(function (list, index) {\n      return _objectSpread({}, list, {\n        prevIndex: index\n      });\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var height = 50;\n\n    function startScaleAnimation(changed) {\n      var newTransitionList = transitionList.sort(function (list, _list) {\n        if (list.value < _list.value) return 1;\n        if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n      });\n\n      var _loop = function _loop(i) {\n        if (transitionList[i].value < NewList.find(function (list) {\n          return list.text === transitionList[i].text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          changed = true;\n        }\n      };\n\n      for (var i in transitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        console.log(transitionList, newTransitionList);\n        var listtt = newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          if (list.value < _list.value) return 1;\n          if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n        });\n        console.log(\"sorted\", listtt);\n        setTransitionList(listtt);\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          duration: 500\n        }).start(function () {\n          return _reactNative.Animated.timing(animatedTranslateValue, {\n            toValue: 0,\n            duration: 1\n          }).start(function () {\n            if (changed) {\n              startScaleAnimation(false);\n            }\n          });\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -height]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, height]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      }\n    }, transitionList.sort(function (list, _list) {\n      if (list.value < _list.value) return 1;\n      if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n    }).map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 320,\n          height: height,\n          position: \"absolute\",\n          top: height * (list.prevIndex + 1) || height * (index + 1),\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: {\n        top: 300\n      },\n      onPress: function onPress() {\n        return startScaleAnimation(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      }\n    }, \"start \")));\n  }\n\n  _s(ConnexionScreen, \"uGeau9XH4jefDvuZJVfXd5h7DBc=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":204,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,13],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,13],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,13],[40,4,18,0],[41,0,23,0],[41,6,23,6,"NewList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,12,24,1],[43,0,24,13,"text"],[43,4,24,13,"text"],[43,8,24,17],[43,10,24,19],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,12,25,1],[46,0,25,13,"text"],[46,4,25,13,"text"],[46,8,25,17],[46,10,25,19],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"ConnexionScreen"],[52,26,29,15],[52,29,29,42],[53,0,29,42],[55,0,29,42],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,42],[56,0,29,42],[57,0,29,42],[57,8,30,8,"animatedValue"],[57,21,29,42],[59,0,29,42],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,42],[60,0,29,42],[61,0,29,42],[61,8,31,8,"animatedTranslateValue"],[61,30,29,42],[63,0,29,42],[63,21,32,45],[63,42,33,2,"List"],[63,46,33,6],[63,47,33,7,"sort"],[63,51,33,2],[63,52,33,12],[63,62,33,13,"list"],[63,66,33,12],[63,68,33,19,"_list"],[63,73,33,12],[63,75,33,29],[64,0,34,3],[64,10,34,7,"list"],[64,14,34,11],[64,15,34,12,"value"],[64,20,34,7],[64,23,34,20,"_list"],[64,28,34,25],[64,29,34,26,"value"],[64,34,34,3],[64,36,34,33],[64,43,34,40],[64,44,34,33],[65,0,35,3],[65,5,33,2],[65,7,35,5,"map"],[65,10,33,2],[65,11,35,9],[65,21,35,10,"list"],[65,25,35,9],[65,27,35,16,"index"],[65,32,35,9],[66,0,35,9],[66,31,35,32,"list"],[66,35,35,9],[67,0,35,38,"prevIndex"],[67,8,35,38,"prevIndex"],[67,17,35,47],[67,19,35,49,"index"],[68,0,35,9],[69,0,35,9],[69,5,33,2],[69,6,32,45],[69,7,29,42],[70,0,29,42],[71,0,29,42],[71,8,32,8,"transitionList"],[71,22,29,42],[72,0,29,42],[72,8,32,24,"setTransitionList"],[72,25,29,42],[74,0,38,1],[74,8,38,7,"height"],[74,14,38,13],[74,17,38,16],[74,19,38,1],[76,0,40,1],[76,13,40,10,"startScaleAnimation"],[76,32,40,1],[76,33,40,30,"changed"],[76,40,40,1],[76,42,40,39],[77,0,41,2],[77,10,41,6,"newTransitionList"],[77,27,41,23],[77,30,41,26,"transitionList"],[77,44,41,40],[77,45,41,41,"sort"],[77,49,41,26],[77,50,41,46],[77,60,41,47,"list"],[77,64,41,46],[77,66,41,53,"_list"],[77,71,41,46],[77,73,41,63],[78,0,42,3],[78,12,42,7,"list"],[78,16,42,11],[78,17,42,12,"value"],[78,22,42,7],[78,25,42,20,"_list"],[78,30,42,25],[78,31,42,26,"value"],[78,36,42,3],[78,38,42,33],[78,45,42,40],[78,46,42,33],[79,0,43,3],[79,12,43,7,"list"],[79,16,43,11],[79,17,43,12,"value"],[79,22,43,7],[79,27,43,22,"_list"],[79,32,43,27],[79,33,43,28,"value"],[79,38,43,7],[79,42,43,37,"list"],[79,46,43,41],[79,47,43,42,"prevIndex"],[79,56,43,37],[79,59,43,54,"_list"],[79,64,43,59],[79,65,43,60,"prevIndex"],[79,74,43,3],[79,76,44,4],[79,83,44,11],[79,84,44,4],[79,85,43,3],[79,90,45,8],[79,97,45,15],[79,98,45,16],[79,99,45,8],[80,0,46,3],[80,7,41,26],[80,8,41,2],[82,0,40,39],[82,33,47,13,"i"],[82,34,40,39],[83,0,48,3],[83,12,49,4,"transitionList"],[83,26,49,18],[83,27,49,19,"i"],[83,28,49,18],[83,29,49,4],[83,30,49,22,"value"],[83,35,49,4],[83,38,50,4,"NewList"],[83,45,50,11],[83,46,50,12,"find"],[83,50,50,4],[83,51,50,17],[83,61,50,17,"list"],[83,65,50,21],[84,0,50,21],[84,17,50,25,"list"],[84,21,50,29],[84,22,50,30,"text"],[84,26,50,25],[84,31,50,39,"transitionList"],[84,45,50,53],[84,46,50,54,"i"],[84,47,50,53],[84,48,50,39],[84,49,50,57,"text"],[84,53,50,21],[85,0,50,21],[85,9,50,4],[85,11,50,63,"value"],[85,16,48,3],[85,18,51,5],[86,0,52,4,"newTransitionList"],[86,10,52,4,"newTransitionList"],[86,27,52,21],[86,28,52,22,"i"],[86,29,52,21],[86,30,52,4],[86,31,52,25,"value"],[86,36,52,4],[86,40,52,34],[86,41,52,4],[87,0,53,4,"changed"],[87,10,53,4,"changed"],[87,17,53,11],[87,20,53,14],[87,24,53,4],[88,0,54,4],[89,0,40,39],[91,0,47,2],[91,11,47,7],[91,15,47,13,"i"],[91,16,47,2],[91,20,47,18,"transitionList"],[91,34,47,2],[91,36,47,34],[92,0,47,34],[92,14,47,13,"i"],[92,15,47,34],[93,0,55,3],[95,0,56,2],[95,10,56,6,"changed"],[95,17,56,2],[95,19,56,15],[96,0,57,3,"console"],[96,8,57,3,"console"],[96,15,57,10],[96,16,57,11,"log"],[96,19,57,3],[96,20,57,15,"transitionList"],[96,34,57,3],[96,36,57,31,"newTransitionList"],[96,53,57,3],[97,0,58,3],[97,12,58,9,"listtt"],[97,18,58,15],[97,21,58,18,"newTransitionList"],[97,38,58,35],[97,39,59,5,"map"],[97,42,58,18],[97,43,59,9],[97,53,59,10,"list"],[97,57,59,9],[97,59,59,16,"index"],[97,64,59,9],[98,0,59,9],[98,35,59,32,"list"],[98,39,59,9],[99,0,59,38,"prevIndex"],[99,12,59,38,"prevIndex"],[99,21,59,47],[99,23,59,49,"index"],[100,0,59,9],[101,0,59,9],[101,9,58,18],[101,11,60,5,"sort"],[101,15,58,18],[101,16,60,10],[101,26,60,11,"list"],[101,30,60,10],[101,32,60,17,"_list"],[101,37,60,10],[101,39,60,27],[102,0,61,5],[102,14,61,9,"list"],[102,18,61,13],[102,19,61,14,"value"],[102,24,61,9],[102,27,61,22,"_list"],[102,32,61,27],[102,33,61,28,"value"],[102,38,61,5],[102,40,61,35],[102,47,61,42],[102,48,61,35],[103,0,62,5],[103,14,63,6,"list"],[103,18,63,10],[103,19,63,11,"value"],[103,24,63,6],[103,29,63,21,"_list"],[103,34,63,26],[103,35,63,27,"value"],[103,40,63,6],[103,44,64,6,"list"],[103,48,64,10],[103,49,64,11,"prevIndex"],[103,58,64,6],[103,61,64,23,"_list"],[103,66,64,28],[103,67,64,29,"prevIndex"],[103,76,62,5],[103,78,66,6],[103,85,66,13],[103,86,66,6],[103,87,62,5],[103,92,67,10],[103,99,67,17],[103,100,67,18],[103,101,67,10],[104,0,68,5],[104,9,58,18],[104,10,58,3],[105,0,69,3,"console"],[105,8,69,3,"console"],[105,15,69,10],[105,16,69,11,"log"],[105,19,69,3],[105,20,69,15],[105,28,69,3],[105,30,69,25,"listtt"],[105,36,69,3],[106,0,70,3,"setTransitionList"],[106,8,70,3,"setTransitionList"],[106,25,70,20],[106,26,70,21,"listtt"],[106,32,70,20],[106,33,70,3],[108,0,71,3,"Animated"],[108,30,71,12,"timing"],[108,36,71,3],[108,37,71,19,"animatedTranslateValue"],[108,59,71,3],[108,61,71,43],[109,0,72,4,"toValue"],[109,10,72,4,"toValue"],[109,17,72,11],[109,19,72,13],[109,20,71,43],[110,0,73,4,"duration"],[110,10,73,4,"duration"],[110,18,73,12],[110,20,73,14],[111,0,71,43],[111,9,71,3],[111,11,74,6,"start"],[111,16,71,3],[111,17,74,12],[112,0,74,12],[112,17,75,4,"Animated"],[112,39,75,13,"timing"],[112,45,75,4],[112,46,75,20,"animatedTranslateValue"],[112,68,75,4],[112,70,75,44],[113,0,76,5,"toValue"],[113,12,76,5,"toValue"],[113,19,76,12],[113,21,76,14],[113,22,75,44],[114,0,77,5,"duration"],[114,12,77,5,"duration"],[114,20,77,13],[114,22,77,15],[115,0,75,44],[115,11,75,4],[115,13,78,7,"start"],[115,18,75,4],[115,19,78,13],[115,31,78,19],[116,0,79,5],[116,16,79,9,"changed"],[116,23,79,5],[116,25,79,18],[117,0,80,6,"startScaleAnimation"],[117,14,80,6,"startScaleAnimation"],[117,33,80,25],[117,34,80,26],[117,39,80,25],[117,40,80,6],[118,0,81,6],[119,0,82,5],[119,11,75,4],[119,12,74,12],[120,0,74,12],[120,9,71,3],[121,0,84,3],[122,0,85,2],[124,0,87,1],[124,13,87,10,"getTranslation"],[124,27,87,1],[124,28,87,25,"index"],[124,33,87,1],[124,35,87,32,"prevIndex"],[124,44,87,1],[124,46,87,43],[125,0,88,2],[125,10,88,6,"index"],[125,15,88,11],[125,18,88,14,"prevIndex"],[125,27,88,2],[125,29,88,25],[126,0,89,3],[126,15,89,10],[126,16,90,4],[127,0,91,5,"translateY"],[127,10,91,5,"translateY"],[127,20,91,15],[127,22,91,17,"animatedTranslateValue"],[127,44,91,39],[127,45,91,40,"interpolate"],[127,56,91,17],[127,57,91,52],[128,0,92,6,"inputRange"],[128,12,92,6,"inputRange"],[128,22,92,16],[128,24,92,18],[128,25,92,19],[128,26,92,18],[128,28,92,22],[128,29,92,18],[128,30,91,52],[129,0,93,6,"outputRange"],[129,12,93,6,"outputRange"],[129,23,93,17],[129,25,93,19],[129,26,93,20],[129,27,93,19],[129,29,93,23],[129,30,93,24,"height"],[129,36,93,19],[130,0,91,52],[130,11,91,17],[131,0,90,4],[131,9,89,10],[131,10,89,3],[132,0,97,3],[134,0,98,2],[134,10,98,6,"index"],[134,15,98,11],[134,18,98,14,"prevIndex"],[134,27,98,2],[134,29,98,25],[135,0,99,3],[135,15,99,10],[135,16,100,4],[136,0,101,5,"translateY"],[136,10,101,5,"translateY"],[136,20,101,15],[136,22,101,17,"animatedTranslateValue"],[136,44,101,39],[136,45,101,40,"interpolate"],[136,56,101,17],[136,57,101,52],[137,0,102,6,"inputRange"],[137,12,102,6,"inputRange"],[137,22,102,16],[137,24,102,18],[137,25,102,19],[137,26,102,18],[137,28,102,22],[137,29,102,18],[137,30,101,52],[138,0,103,6,"outputRange"],[138,12,103,6,"outputRange"],[138,23,103,17],[138,25,103,19],[138,26,103,20],[138,27,103,19],[138,29,103,23,"height"],[138,35,103,19],[139,0,101,52],[139,11,101,17],[140,0,100,4],[140,9,99,10],[140,10,99,3],[141,0,107,3],[143,0,108,2],[144,0,109,2],[146,0,111,1],[146,11,112,2],[146,40,112,3],[146,57,112,2],[147,0,112,8],[147,6,112,8],[147,11,112,13],[147,13,112,15],[148,0,112,17,"marginTop"],[148,8,112,17,"marginTop"],[148,17,112,26],[148,19,112,28],[149,0,112,15],[149,7,112,2],[150,0,112,2],[151,0,112,2],[152,0,112,2],[153,0,112,2],[154,0,112,2],[154,7,113,4,"transitionList"],[154,21,113,18],[154,22,114,5,"sort"],[154,26,113,4],[154,27,114,10],[154,37,114,11,"list"],[154,41,114,10],[154,43,114,17,"_list"],[154,48,114,10],[154,50,114,27],[155,0,115,5],[155,10,115,9,"list"],[155,14,115,13],[155,15,115,14,"value"],[155,20,115,9],[155,23,115,22,"_list"],[155,28,115,27],[155,29,115,28,"value"],[155,34,115,5],[155,36,115,35],[155,43,115,42],[155,44,115,35],[156,0,116,5],[156,10,117,6,"list"],[156,14,117,10],[156,15,117,11,"value"],[156,20,117,6],[156,25,117,21,"_list"],[156,30,117,26],[156,31,117,27,"value"],[156,36,117,6],[156,40,118,6,"list"],[156,44,118,10],[156,45,118,11,"prevIndex"],[156,54,118,6],[156,57,118,23,"_list"],[156,62,118,28],[156,63,118,29,"prevIndex"],[156,72,116,5],[156,74,120,6],[156,81,120,13],[156,82,120,6],[156,83,116,5],[156,88,121,10],[156,95,121,17],[156,96,121,18],[156,97,121,10],[157,0,122,5],[157,5,113,4],[157,7,123,5,"map"],[157,10,113,4],[157,11,123,9],[157,21,123,10,"list"],[157,25,123,9],[157,27,123,16,"index"],[157,32,123,9],[158,0,123,9],[158,13,124,5],[158,42,124,6],[158,63,124,5],[158,64,124,15],[158,68,124,5],[159,0,125,6],[159,8,125,6],[159,11,125,9],[159,13,125,11,"index"],[159,18,124,5],[160,0,126,6],[160,8,126,6],[160,13,126,11],[160,15,126,13],[161,0,127,7,"width"],[161,10,127,7,"width"],[161,15,127,12],[161,17,127,14],[161,20,126,13],[162,0,128,7,"height"],[162,10,128,7,"height"],[162,16,128,13],[162,18,128,15,"height"],[162,24,126,13],[163,0,129,7,"position"],[163,10,129,7,"position"],[163,18,129,15],[163,20,129,17],[163,30,126,13],[164,0,130,7,"top"],[164,10,130,7,"top"],[164,13,130,10],[164,15,131,8,"height"],[164,21,131,14],[164,25,131,18,"list"],[164,29,131,22],[164,30,131,23,"prevIndex"],[164,39,131,18],[164,42,131,35],[164,43,131,14],[164,44,131,8],[164,48,132,8,"height"],[164,54,132,14],[164,58,132,18,"index"],[164,63,132,23],[164,66,132,26],[164,67,132,14],[164,68,126,13],[165,0,133,7,"backgroundColor"],[165,10,133,7,"backgroundColor"],[165,25,133,22],[165,27,133,24,"list"],[165,31,133,28],[165,32,133,29,"color"],[165,37,126,13],[166,0,134,7,"transform"],[166,10,134,7,"transform"],[166,19,134,16],[166,21,134,18,"getTranslation"],[166,35,134,32],[166,36,134,33,"index"],[166,41,134,32],[166,43,134,40,"list"],[166,47,134,44],[166,48,134,45,"prevIndex"],[166,57,134,32],[167,0,126,13],[167,9,124,5],[168,0,124,5],[169,0,124,5],[170,0,124,5],[171,0,124,5],[172,0,124,5],[172,9,137,6],[172,38,137,7],[172,55,137,6],[173,0,137,6],[174,0,137,6],[175,0,137,6],[176,0,137,6],[177,0,137,6],[177,9,138,8,"list"],[177,13,138,12],[177,14,138,13,"text"],[177,18,137,6],[177,25,138,20,"list"],[177,29,138,24],[177,30,138,25,"value"],[177,35,137,6],[177,36,124,5],[177,37,123,9],[178,0,123,9],[178,5,113,4],[178,6,112,2],[178,8,142,3],[178,37,142,4],[178,66,142,3],[179,0,143,4],[179,6,143,4],[179,11,143,9],[179,13,143,11],[180,0,143,13,"top"],[180,8,143,13,"top"],[180,11,143,16],[180,13,143,18],[181,0,143,11],[181,7,142,3],[182,0,144,4],[182,6,144,4],[182,13,144,11],[182,15,144,13],[183,0,144,13],[183,15,144,19,"startScaleAnimation"],[183,34,144,38],[183,35,144,39],[183,40,144,38],[183,41,144,13],[184,0,144,13],[184,7,142,3],[185,0,142,3],[186,0,142,3],[187,0,142,3],[188,0,142,3],[189,0,142,3],[189,7,146,4],[189,36,146,5],[189,53,146,4],[190,0,146,4],[191,0,146,4],[192,0,146,4],[193,0,146,4],[194,0,146,4],[194,16,142,3],[194,17,112,2],[194,18,111,1],[195,0,150,1],[197,5,29,24,"ConnexionScreen"],[197,20],[199,7,29,24,"ConnexionScreen"],[199,22]],"functionMap":{"names":["<global>","ConnexionScreen","List.sort$argument_0","List.sort.map$argument_0","startScaleAnimation","transitionList.sort$argument_0","NewList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.sort.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;YCI;GDE,ME,gDF;CGK;8CCC;GDK;iBEI,4CF;SGS,gDH;UIC;KJQ;YKM;MLQ;EHG;CSE;ETsB;UIK;KJQ;SUC;KVkB;aWG,gCX;CDM"}},"type":"js/module"}]}