{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Screens/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 1,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var NewList = [{\n    value: 15,\n    text: \"Felix\"\n  }, {\n    value: 20,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen() {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(List.sort(function (list, _list) {\n      return list.value < _list.value;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var _useState7 = (0, _react.useState)(true),\n        _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n        changed = _useState8[0],\n        setChanged = _useState8[1];\n\n    var height = 50;\n\n    var _useState9 = (0, _react.useState)(0),\n        _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n        value = _useState10[0],\n        setValue = _useState10[1];\n\n    animatedValue.addListener(function (_ref) {\n      var value = _ref.value;\n      setValue(value);\n    });\n\n    function startScaleAnimation() {\n      var newTransitionList = transitionList;\n      console.log(changed);\n\n      var _loop = function _loop(i) {\n        if (transitionList[i].value < NewList.find(function (list) {\n          return list.text === transitionList[i].text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          setChanged(false);\n        }\n      };\n\n      for (var i in transitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        setTransitionList(newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          return list.value < _list.value;\n        }));\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          timing: 12000\n        }).start(function () {\n          if (changed) {\n            setChanged(false);\n            startScaleAnimation();\n          }\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [height * prevIndex, height * index]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [height * index, height * prevIndex]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      }\n    }, transitionList.map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 320,\n          height: height,\n          position: \"absolute\",\n          top: height * list.prevIndex || height * index,\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        }\n      }, console.log(list, index), _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      onPress: function onPress() {\n        return startScaleAnimation();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      }\n    }, \"start \")));\n  }\n\n  _s(ConnexionScreen, \"eEtkQYV+ht9/h9HY7/ApEreU/8k=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":199,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,13],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,13],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,13],[40,4,18,0],[41,0,23,0],[41,6,23,6,"NewList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,13,24,1],[43,0,24,14,"text"],[43,4,24,14,"text"],[43,8,24,18],[43,10,24,20],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,13,25,1],[46,0,25,14,"text"],[46,4,25,14,"text"],[46,8,25,18],[46,10,25,20],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"ConnexionScreen"],[52,26,29,15],[52,29,29,42],[53,0,29,42],[55,0,29,42],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,42],[56,0,29,42],[57,0,29,42],[57,8,30,8,"animatedValue"],[57,21,29,42],[59,0,29,42],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,42],[60,0,29,42],[61,0,29,42],[61,8,31,8,"animatedTranslateValue"],[61,30,29,42],[63,0,29,42],[63,21,32,45],[63,42,33,2,"List"],[63,46,33,6],[63,47,33,7,"sort"],[63,51,33,2],[63,52,33,12],[63,62,33,13,"list"],[63,66,33,12],[63,68,33,19,"_list"],[63,73,33,12],[64,0,33,12],[64,13,33,29,"list"],[64,17,33,33],[64,18,33,34,"value"],[64,23,33,29],[64,26,33,42,"_list"],[64,31,33,47],[64,32,33,48,"value"],[64,37,33,12],[65,0,33,12],[65,5,33,2],[65,6,32,45],[65,7,29,42],[66,0,29,42],[67,0,29,42],[67,8,32,8,"transitionList"],[67,22,29,42],[68,0,29,42],[68,8,32,24,"setTransitionList"],[68,25,29,42],[70,0,29,42],[70,21,35,31],[70,42,35,40],[70,46,35,31],[70,47,29,42],[71,0,29,42],[72,0,29,42],[72,8,35,8,"changed"],[72,15,29,42],[73,0,29,42],[73,8,35,17,"setChanged"],[73,18,29,42],[75,0,37,1],[75,8,37,7,"height"],[75,14,37,13],[75,17,37,16],[75,19,37,1],[77,0,29,42],[77,21,38,27],[77,42,38,36],[77,43,38,27],[77,44,29,42],[78,0,29,42],[79,0,29,42],[79,8,38,8,"value"],[79,13,29,42],[80,0,29,42],[80,8,38,15,"setValue"],[80,16,29,42],[82,0,39,1,"animatedValue"],[82,4,39,1,"animatedValue"],[82,17,39,14],[82,18,39,15,"addListener"],[82,29,39,1],[82,30,39,27],[82,46,39,42],[83,0,39,42],[83,10,39,30,"value"],[83,15,39,42],[83,23,39,30,"value"],[83,28,39,42],[84,0,40,2,"setValue"],[84,6,40,2,"setValue"],[84,14,40,10],[84,15,40,11,"value"],[84,20,40,10],[84,21,40,2],[85,0,41,2],[85,5,39,1],[87,0,43,1],[87,13,43,10,"startScaleAnimation"],[87,32,43,1],[87,35,43,32],[88,0,44,2],[88,10,44,6,"newTransitionList"],[88,27,44,23],[88,30,44,26,"transitionList"],[88,44,44,2],[89,0,45,2,"console"],[89,6,45,2,"console"],[89,13,45,9],[89,14,45,10,"log"],[89,17,45,2],[89,18,45,14,"changed"],[89,25,45,2],[91,0,43,32],[91,33,46,13,"i"],[91,34,43,32],[92,0,47,3],[92,12,48,4,"transitionList"],[92,26,48,18],[92,27,48,19,"i"],[92,28,48,18],[92,29,48,4],[92,30,48,22,"value"],[92,35,48,4],[92,38,49,4,"NewList"],[92,45,49,11],[92,46,49,12,"find"],[92,50,49,4],[92,51,49,17],[92,61,49,17,"list"],[92,65,49,21],[93,0,49,21],[93,17,49,25,"list"],[93,21,49,29],[93,22,49,30,"text"],[93,26,49,25],[93,31,49,39,"transitionList"],[93,45,49,53],[93,46,49,54,"i"],[93,47,49,53],[93,48,49,39],[93,49,49,57,"text"],[93,53,49,21],[94,0,49,21],[94,9,49,4],[94,11,49,63,"value"],[94,16,47,3],[94,18,50,5],[95,0,51,4,"newTransitionList"],[95,10,51,4,"newTransitionList"],[95,27,51,21],[95,28,51,22,"i"],[95,29,51,21],[95,30,51,4],[95,31,51,25,"value"],[95,36,51,4],[95,40,51,34],[95,41,51,4],[96,0,52,4,"setChanged"],[96,10,52,4,"setChanged"],[96,20,52,14],[96,21,52,15],[96,26,52,14],[96,27,52,4],[97,0,53,4],[98,0,43,32],[100,0,46,2],[100,11,46,7],[100,15,46,13,"i"],[100,16,46,2],[100,20,46,18,"transitionList"],[100,34,46,2],[100,36,46,34],[101,0,46,34],[101,14,46,13,"i"],[101,15,46,34],[102,0,54,3],[104,0,55,2],[104,10,55,6,"changed"],[104,17,55,2],[104,19,55,15],[105,0,56,3,"setTransitionList"],[105,8,56,3,"setTransitionList"],[105,25,56,20],[105,26,57,4,"newTransitionList"],[105,43,57,21],[105,44,58,6,"map"],[105,47,57,4],[105,48,58,10],[105,58,58,11,"list"],[105,62,58,10],[105,64,58,17,"index"],[105,69,58,10],[106,0,58,10],[106,35,58,33,"list"],[106,39,58,10],[107,0,58,39,"prevIndex"],[107,12,58,39,"prevIndex"],[107,21,58,48],[107,23,58,50,"index"],[108,0,58,10],[109,0,58,10],[109,9,57,4],[109,11,59,6,"sort"],[109,15,57,4],[109,16,59,11],[109,26,59,12,"list"],[109,30,59,11],[109,32,59,18,"_list"],[109,37,59,11],[110,0,59,11],[110,17,59,28,"list"],[110,21,59,32],[110,22,59,33,"value"],[110,27,59,28],[110,30,59,41,"_list"],[110,35,59,46],[110,36,59,47,"value"],[110,41,59,11],[111,0,59,11],[111,9,57,4],[111,10,56,20],[111,11,56,3],[113,0,61,3,"Animated"],[113,30,61,12,"timing"],[113,36,61,3],[113,37,61,19,"animatedTranslateValue"],[113,59,61,3],[113,61,61,43],[114,0,62,4,"toValue"],[114,10,62,4,"toValue"],[114,17,62,11],[114,19,62,13],[114,20,61,43],[115,0,63,4,"timing"],[115,10,63,4,"timing"],[115,16,63,10],[115,18,63,12],[116,0,61,43],[116,9,61,3],[116,11,64,6,"start"],[116,16,61,3],[116,17,64,12],[116,29,64,18],[117,0,65,4],[117,14,65,8,"changed"],[117,21,65,4],[117,23,65,17],[118,0,66,5,"setChanged"],[118,12,66,5,"setChanged"],[118,22,66,15],[118,23,66,16],[118,28,66,15],[118,29,66,5],[119,0,68,5,"startScaleAnimation"],[119,12,68,5,"startScaleAnimation"],[119,31,68,24],[120,0,69,5],[121,0,70,4],[121,9,61,3],[122,0,71,3],[123,0,72,2],[125,0,74,1],[125,13,74,10,"getTranslation"],[125,27,74,1],[125,28,74,25,"index"],[125,33,74,1],[125,35,74,32,"prevIndex"],[125,44,74,1],[125,46,74,43],[126,0,75,2],[126,10,75,6,"index"],[126,15,75,11],[126,18,75,14,"prevIndex"],[126,27,75,2],[126,29,75,25],[127,0,76,3],[127,15,76,10],[127,16,77,4],[128,0,78,5,"translateY"],[128,10,78,5,"translateY"],[128,20,78,15],[128,22,78,17,"animatedTranslateValue"],[128,44,78,39],[128,45,78,40,"interpolate"],[128,56,78,17],[128,57,78,52],[129,0,79,6,"inputRange"],[129,12,79,6,"inputRange"],[129,22,79,16],[129,24,79,18],[129,25,79,19],[129,26,79,18],[129,28,79,22],[129,29,79,18],[129,30,78,52],[130,0,80,6,"outputRange"],[130,12,80,6,"outputRange"],[130,23,80,17],[130,25,80,19],[130,26,80,20,"height"],[130,32,80,26],[130,35,80,29,"prevIndex"],[130,44,80,19],[130,46,80,40,"height"],[130,52,80,46],[130,55,80,49,"index"],[130,60,80,19],[131,0,78,52],[131,11,78,17],[132,0,77,4],[132,9,76,10],[132,10,76,3],[133,0,84,3],[135,0,85,2],[135,10,85,6,"index"],[135,15,85,11],[135,18,85,14,"prevIndex"],[135,27,85,2],[135,29,85,25],[136,0,86,3],[136,15,86,10],[136,16,87,4],[137,0,88,5,"translateY"],[137,10,88,5,"translateY"],[137,20,88,15],[137,22,88,17,"animatedTranslateValue"],[137,44,88,39],[137,45,88,40,"interpolate"],[137,56,88,17],[137,57,88,52],[138,0,89,6,"inputRange"],[138,12,89,6,"inputRange"],[138,22,89,16],[138,24,89,18],[138,25,89,19],[138,26,89,18],[138,28,89,22],[138,29,89,18],[138,30,88,52],[139,0,90,6,"outputRange"],[139,12,90,6,"outputRange"],[139,23,90,17],[139,25,90,19],[139,26,90,20,"height"],[139,32,90,26],[139,35,90,29,"index"],[139,40,90,19],[139,42,90,36,"height"],[139,48,90,42],[139,51,90,45,"prevIndex"],[139,60,90,19],[140,0,88,52],[140,11,88,17],[141,0,87,4],[141,9,86,10],[141,10,86,3],[142,0,94,3],[144,0,95,2],[145,0,96,2],[147,0,98,1],[147,11,99,2],[147,40,99,3],[147,57,99,2],[148,0,99,8],[148,6,99,8],[148,11,99,13],[148,13,99,15],[149,0,99,17,"marginTop"],[149,8,99,17,"marginTop"],[149,17,99,26],[149,19,99,28],[150,0,99,15],[150,7,99,2],[151,0,99,2],[152,0,99,2],[153,0,99,2],[154,0,99,2],[155,0,99,2],[155,7,100,4,"transitionList"],[155,21,100,18],[155,22,100,19,"map"],[155,25,100,4],[155,26,100,23],[155,36,100,24,"list"],[155,40,100,23],[155,42,100,30,"index"],[155,47,100,23],[156,0,100,23],[156,13,101,4],[156,42,101,5],[156,63,101,4],[156,64,101,14],[156,68,101,4],[157,0,102,5],[157,8,102,5],[157,11,102,8],[157,13,102,10,"index"],[157,18,101,4],[158,0,103,5],[158,8,103,5],[158,13,103,10],[158,15,103,12],[159,0,104,6,"width"],[159,10,104,6,"width"],[159,15,104,11],[159,17,104,13],[159,20,103,12],[160,0,105,6,"height"],[160,10,105,6,"height"],[160,16,105,12],[160,18,105,14,"height"],[160,24,103,12],[161,0,106,6,"position"],[161,10,106,6,"position"],[161,18,106,14],[161,20,106,16],[161,30,103,12],[162,0,107,6,"top"],[162,10,107,6,"top"],[162,13,107,9],[162,15,107,11,"height"],[162,21,107,17],[162,24,107,20,"list"],[162,28,107,24],[162,29,107,25,"prevIndex"],[162,38,107,11],[162,42,107,38,"height"],[162,48,107,44],[162,51,107,47,"index"],[162,56,103,12],[163,0,108,6,"backgroundColor"],[163,10,108,6,"backgroundColor"],[163,25,108,21],[163,27,108,23,"list"],[163,31,108,27],[163,32,108,28,"color"],[163,37,103,12],[164,0,109,6,"transform"],[164,10,109,6,"transform"],[164,19,109,15],[164,21,109,17,"getTranslation"],[164,35,109,31],[164,36,109,32,"index"],[164,41,109,31],[164,43,109,39,"list"],[164,47,109,43],[164,48,109,44,"prevIndex"],[164,57,109,31],[165,0,103,12],[165,9,101,4],[166,0,101,4],[167,0,101,4],[168,0,101,4],[169,0,101,4],[170,0,101,4],[170,9,112,6,"console"],[170,16,112,13],[170,17,112,14,"log"],[170,20,112,6],[170,21,112,18,"list"],[170,25,112,6],[170,27,112,24,"index"],[170,32,112,6],[170,33,101,4],[170,35,113,5],[170,64,113,6],[170,81,113,5],[171,0,113,5],[172,0,113,5],[173,0,113,5],[174,0,113,5],[175,0,113,5],[175,9,114,7,"list"],[175,13,114,11],[175,14,114,12,"text"],[175,18,113,5],[175,25,114,19,"list"],[175,29,114,23],[175,30,114,24,"value"],[175,35,113,5],[175,36,101,4],[175,37,100,23],[176,0,100,23],[176,5,100,4],[176,6,99,2],[176,8,118,3],[176,37,118,4],[176,66,118,3],[177,0,118,21],[177,6,118,21],[177,13,118,28],[177,15,118,30],[178,0,118,30],[178,15,118,36,"startScaleAnimation"],[178,34,118,55],[178,36,118,30],[179,0,118,30],[179,7,118,3],[180,0,118,3],[181,0,118,3],[182,0,118,3],[183,0,118,3],[184,0,118,3],[184,7,119,4],[184,36,119,5],[184,53,119,4],[185,0,119,4],[186,0,119,4],[187,0,119,4],[188,0,119,4],[189,0,119,4],[189,16,118,3],[189,17,99,2],[189,18,98,1],[190,0,123,1],[192,5,29,24,"ConnexionScreen"],[192,20],[194,7,29,24,"ConnexionScreen"],[194,22]],"functionMap":{"names":["<global>","ConnexionScreen","List.sort$argument_0","animatedValue.addListener$argument_0","startScaleAnimation","NewList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;YCI,yCD;2BEM;EFE;CGE;iBCM,4CD;UES,gDF;WGC,yCH;YIK;IJM;EHE;CQE;ERsB;uBSI;ITiB;8BUC,2BV;CDK"}},"type":"js/module"}]}