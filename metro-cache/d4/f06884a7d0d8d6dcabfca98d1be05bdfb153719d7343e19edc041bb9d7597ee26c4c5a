{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Function/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 3,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var NewList = [{\n    value: 14,\n    text: \"Felix\"\n  }, {\n    value: 11,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen() {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(List.sort(function (list, _list) {\n      if (list.value > _list.value) return 1;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var height = 50;\n    (0, _react.useEffect)(function () {\n      var newTransitionList = transitionList.map(function (list, index) {\n        return _objectSpread({}, list, {\n          prevIndex: index\n        });\n      });\n      setTransitionList(newTransitionList);\n    }, []);\n    startScaleAnimation(false);\n\n    function startScaleAnimation(changed) {\n      var newTransitionList = transitionList.sort(function (list, _list) {\n        if (list.value < _list.value) return 1;\n        if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n      });\n      console.log(newTransitionList);\n\n      var _loop = function _loop(i) {\n        if (newTransitionList[i].value < NewList.find(function (list) {\n          return list.text === newTransitionList[i].text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          changed = true;\n        }\n      };\n\n      for (var i in newTransitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        console.log(newTransitionList);\n        var listtt = newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          if (list.value < _list.value) return 1;\n          if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n        });\n        console.log(\"sorted\", listtt);\n        setTransitionList(listtt);\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          duration: 500\n        }).start(function () {\n          return _reactNative.Animated.timing(animatedTranslateValue, {\n            toValue: 0,\n            duration: 1\n          }).start(function () {\n            if (changed) {\n              startScaleAnimation(false);\n            }\n          });\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -height * (prevIndex - index)]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, height * (index - prevIndex)]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      }\n    }, transitionList.sort(function (list, _list) {\n      if (list.value < _list.value) return 1;\n      if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n    }).map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 320,\n          height: height,\n          position: \"absolute\",\n          top: height * (list.prevIndex + 1) || height * (index + 1),\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: {\n        top: 300\n      },\n      onPress: function onPress() {\n        return startScaleAnimation(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      }\n    }, \"start \")));\n  }\n\n  _s(ConnexionScreen, \"X0a0+Tmrt9iXpr3+3UPMHrrrg8A=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":210,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,13],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,13],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,13],[40,4,18,0],[41,0,23,0],[41,6,23,6,"NewList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,13,24,1],[43,0,24,14,"text"],[43,4,24,14,"text"],[43,8,24,18],[43,10,24,20],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,13,25,1],[46,0,25,14,"text"],[46,4,25,14,"text"],[46,8,25,18],[46,10,25,20],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"ConnexionScreen"],[52,26,29,15],[52,29,29,42],[53,0,29,42],[55,0,29,42],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,42],[56,0,29,42],[57,0,29,42],[57,8,30,8,"animatedValue"],[57,21,29,42],[59,0,29,42],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,42],[60,0,29,42],[61,0,29,42],[61,8,31,8,"animatedTranslateValue"],[61,30,29,42],[63,0,29,42],[63,21,32,45],[63,42,33,2,"List"],[63,46,33,6],[63,47,33,7,"sort"],[63,51,33,2],[63,52,33,12],[63,62,33,13,"list"],[63,66,33,12],[63,68,33,19,"_list"],[63,73,33,12],[63,75,33,29],[64,0,34,3],[64,10,34,7,"list"],[64,14,34,11],[64,15,34,12,"value"],[64,20,34,7],[64,23,34,20,"_list"],[64,28,34,25],[64,29,34,26,"value"],[64,34,34,3],[64,36,34,33],[64,43,34,40],[64,44,34,33],[65,0,35,3],[65,5,33,2],[65,6,32,45],[65,7,29,42],[66,0,29,42],[67,0,29,42],[67,8,32,8,"transitionList"],[67,22,29,42],[68,0,29,42],[68,8,32,24,"setTransitionList"],[68,25,29,42],[70,0,38,1],[70,8,38,7,"height"],[70,14,38,13],[70,17,38,16],[70,19,38,1],[71,0,39,1],[71,26,39,11],[71,38,39,17],[72,0,40,2],[72,10,40,8,"newTransitionList"],[72,27,40,25],[72,30,40,28,"transitionList"],[72,44,40,42],[72,45,40,43,"map"],[72,48,40,28],[72,49,40,47],[72,59,40,48,"list"],[72,63,40,47],[72,65,40,54,"index"],[72,70,40,47],[73,0,40,47],[73,33,41,6,"list"],[73,37,40,47],[74,0,42,3,"prevIndex"],[74,10,42,3,"prevIndex"],[74,19,42,12],[74,21,42,14,"index"],[75,0,40,47],[76,0,40,47],[76,7,40,28],[76,8,40,2],[77,0,44,2,"setTransitionList"],[77,6,44,2,"setTransitionList"],[77,23,44,19],[77,24,44,20,"newTransitionList"],[77,41,44,19],[77,42,44,2],[78,0,45,2],[78,5,39,1],[78,7,45,4],[78,9,39,1],[79,0,46,1,"startScaleAnimation"],[79,4,46,1,"startScaleAnimation"],[79,23,46,20],[79,24,46,21],[79,29,46,20],[79,30,46,1],[81,0,48,1],[81,13,48,10,"startScaleAnimation"],[81,32,48,1],[81,33,48,30,"changed"],[81,40,48,1],[81,42,48,39],[82,0,49,2],[82,10,49,8,"newTransitionList"],[82,27,49,25],[82,30,49,28,"transitionList"],[82,44,49,42],[82,45,49,43,"sort"],[82,49,49,28],[82,50,49,48],[82,60,49,49,"list"],[82,64,49,48],[82,66,49,55,"_list"],[82,71,49,48],[82,73,49,65],[83,0,50,3],[83,12,50,7,"list"],[83,16,50,11],[83,17,50,12,"value"],[83,22,50,7],[83,25,50,20,"_list"],[83,30,50,25],[83,31,50,26,"value"],[83,36,50,3],[83,38,50,33],[83,45,50,40],[83,46,50,33],[84,0,51,3],[84,12,51,7,"list"],[84,16,51,11],[84,17,51,12,"value"],[84,22,51,7],[84,27,51,22,"_list"],[84,32,51,27],[84,33,51,28,"value"],[84,38,51,7],[84,42,51,37,"list"],[84,46,51,41],[84,47,51,42,"prevIndex"],[84,56,51,37],[84,59,51,54,"_list"],[84,64,51,59],[84,65,51,60,"prevIndex"],[84,74,51,3],[84,76,52,4],[84,83,52,11],[84,84,52,4],[84,85,51,3],[84,90,53,8],[84,97,53,15],[84,98,53,16],[84,99,53,8],[85,0,54,3],[85,7,49,28],[85,8,49,2],[86,0,55,2,"console"],[86,6,55,2,"console"],[86,13,55,9],[86,14,55,10,"log"],[86,17,55,2],[86,18,55,14,"newTransitionList"],[86,35,55,2],[88,0,48,39],[88,33,56,13,"i"],[88,34,48,39],[89,0,57,3],[89,12,58,4,"newTransitionList"],[89,29,58,21],[89,30,58,22,"i"],[89,31,58,21],[89,32,58,4],[89,33,58,25,"value"],[89,38,58,4],[89,41,59,4,"NewList"],[89,48,59,11],[89,49,59,12,"find"],[89,53,59,4],[89,54,59,17],[89,64,59,17,"list"],[89,68,59,21],[90,0,59,21],[90,17,59,25,"list"],[90,21,59,29],[90,22,59,30,"text"],[90,26,59,25],[90,31,59,39,"newTransitionList"],[90,48,59,56],[90,49,59,57,"i"],[90,50,59,56],[90,51,59,39],[90,52,59,60,"text"],[90,56,59,21],[91,0,59,21],[91,9,59,4],[91,11,60,6,"value"],[91,16,57,3],[91,18,61,5],[92,0,62,4,"newTransitionList"],[92,10,62,4,"newTransitionList"],[92,27,62,21],[92,28,62,22,"i"],[92,29,62,21],[92,30,62,4],[92,31,62,25,"value"],[92,36,62,4],[92,40,62,34],[92,41,62,4],[93,0,63,4,"changed"],[93,10,63,4,"changed"],[93,17,63,11],[93,20,63,14],[93,24,63,4],[94,0,64,4],[95,0,48,39],[97,0,56,2],[97,11,56,7],[97,15,56,13,"i"],[97,16,56,2],[97,20,56,18,"newTransitionList"],[97,37,56,2],[97,39,56,37],[98,0,56,37],[98,14,56,13,"i"],[98,15,56,37],[99,0,65,3],[101,0,66,2],[101,10,66,6,"changed"],[101,17,66,2],[101,19,66,15],[102,0,67,3,"console"],[102,8,67,3,"console"],[102,15,67,10],[102,16,67,11,"log"],[102,19,67,3],[102,20,67,15,"newTransitionList"],[102,37,67,3],[103,0,68,3],[103,12,68,9,"listtt"],[103,18,68,15],[103,21,68,18,"newTransitionList"],[103,38,68,35],[103,39,69,5,"map"],[103,42,68,18],[103,43,69,9],[103,53,69,10,"list"],[103,57,69,9],[103,59,69,16,"index"],[103,64,69,9],[104,0,69,9],[104,35,69,32,"list"],[104,39,69,9],[105,0,69,38,"prevIndex"],[105,12,69,38,"prevIndex"],[105,21,69,47],[105,23,69,49,"index"],[106,0,69,9],[107,0,69,9],[107,9,68,18],[107,11,70,5,"sort"],[107,15,68,18],[107,16,70,10],[107,26,70,11,"list"],[107,30,70,10],[107,32,70,17,"_list"],[107,37,70,10],[107,39,70,27],[108,0,71,5],[108,14,71,9,"list"],[108,18,71,13],[108,19,71,14,"value"],[108,24,71,9],[108,27,71,22,"_list"],[108,32,71,27],[108,33,71,28,"value"],[108,38,71,5],[108,40,71,35],[108,47,71,42],[108,48,71,35],[109,0,72,5],[109,14,73,6,"list"],[109,18,73,10],[109,19,73,11,"value"],[109,24,73,6],[109,29,73,21,"_list"],[109,34,73,26],[109,35,73,27,"value"],[109,40,73,6],[109,44,74,6,"list"],[109,48,74,10],[109,49,74,11,"prevIndex"],[109,58,74,6],[109,61,74,23,"_list"],[109,66,74,28],[109,67,74,29,"prevIndex"],[109,76,72,5],[109,78,76,6],[109,85,76,13],[109,86,76,6],[109,87,72,5],[109,92,77,10],[109,99,77,17],[109,100,77,18],[109,101,77,10],[110,0,78,5],[110,9,68,18],[110,10,68,3],[111,0,79,3,"console"],[111,8,79,3,"console"],[111,15,79,10],[111,16,79,11,"log"],[111,19,79,3],[111,20,79,15],[111,28,79,3],[111,30,79,25,"listtt"],[111,36,79,3],[112,0,80,3,"setTransitionList"],[112,8,80,3,"setTransitionList"],[112,25,80,20],[112,26,80,21,"listtt"],[112,32,80,20],[112,33,80,3],[114,0,81,3,"Animated"],[114,30,81,12,"timing"],[114,36,81,3],[114,37,81,19,"animatedTranslateValue"],[114,59,81,3],[114,61,81,43],[115,0,82,4,"toValue"],[115,10,82,4,"toValue"],[115,17,82,11],[115,19,82,13],[115,20,81,43],[116,0,83,4,"duration"],[116,10,83,4,"duration"],[116,18,83,12],[116,20,83,14],[117,0,81,43],[117,9,81,3],[117,11,84,6,"start"],[117,16,81,3],[117,17,84,12],[118,0,84,12],[118,17,85,4,"Animated"],[118,39,85,13,"timing"],[118,45,85,4],[118,46,85,20,"animatedTranslateValue"],[118,68,85,4],[118,70,85,44],[119,0,86,5,"toValue"],[119,12,86,5,"toValue"],[119,19,86,12],[119,21,86,14],[119,22,85,44],[120,0,87,5,"duration"],[120,12,87,5,"duration"],[120,20,87,13],[120,22,87,15],[121,0,85,44],[121,11,85,4],[121,13,88,7,"start"],[121,18,85,4],[121,19,88,13],[121,31,88,19],[122,0,89,5],[122,16,89,9,"changed"],[122,23,89,5],[122,25,89,18],[123,0,90,6,"startScaleAnimation"],[123,14,90,6,"startScaleAnimation"],[123,33,90,25],[123,34,90,26],[123,39,90,25],[123,40,90,6],[124,0,91,6],[125,0,92,5],[125,11,85,4],[125,12,84,12],[126,0,84,12],[126,9,81,3],[127,0,94,3],[128,0,95,2],[130,0,97,1],[130,13,97,10,"getTranslation"],[130,27,97,1],[130,28,97,25,"index"],[130,33,97,1],[130,35,97,32,"prevIndex"],[130,44,97,1],[130,46,97,43],[131,0,98,2],[131,10,98,6,"index"],[131,15,98,11],[131,18,98,14,"prevIndex"],[131,27,98,2],[131,29,98,25],[132,0,99,3],[132,15,99,10],[132,16,100,4],[133,0,101,5,"translateY"],[133,10,101,5,"translateY"],[133,20,101,15],[133,22,101,17,"animatedTranslateValue"],[133,44,101,39],[133,45,101,40,"interpolate"],[133,56,101,17],[133,57,101,52],[134,0,102,6,"inputRange"],[134,12,102,6,"inputRange"],[134,22,102,16],[134,24,102,18],[134,25,102,19],[134,26,102,18],[134,28,102,22],[134,29,102,18],[134,30,101,52],[135,0,103,6,"outputRange"],[135,12,103,6,"outputRange"],[135,23,103,17],[135,25,103,19],[135,26,103,20],[135,27,103,19],[135,29,103,23],[135,30,103,24,"height"],[135,36,103,23],[135,40,103,34,"prevIndex"],[135,49,103,43],[135,52,103,46,"index"],[135,57,103,23],[135,58,103,19],[136,0,101,52],[136,11,101,17],[137,0,100,4],[137,9,99,10],[137,10,99,3],[138,0,107,3],[140,0,108,2],[140,10,108,6,"index"],[140,15,108,11],[140,18,108,14,"prevIndex"],[140,27,108,2],[140,29,108,25],[141,0,109,3],[141,15,109,10],[141,16,110,4],[142,0,111,5,"translateY"],[142,10,111,5,"translateY"],[142,20,111,15],[142,22,111,17,"animatedTranslateValue"],[142,44,111,39],[142,45,111,40,"interpolate"],[142,56,111,17],[142,57,111,52],[143,0,112,6,"inputRange"],[143,12,112,6,"inputRange"],[143,22,112,16],[143,24,112,18],[143,25,112,19],[143,26,112,18],[143,28,112,22],[143,29,112,18],[143,30,111,52],[144,0,113,6,"outputRange"],[144,12,113,6,"outputRange"],[144,23,113,17],[144,25,113,19],[144,26,113,20],[144,27,113,19],[144,29,113,23,"height"],[144,35,113,29],[144,39,113,33,"index"],[144,44,113,38],[144,47,113,41,"prevIndex"],[144,56,113,29],[144,57,113,19],[145,0,111,52],[145,11,111,17],[146,0,110,4],[146,9,109,10],[146,10,109,3],[147,0,117,3],[149,0,118,2],[150,0,119,2],[152,0,121,1],[152,11,122,2],[152,40,122,3],[152,57,122,2],[153,0,122,8],[153,6,122,8],[153,11,122,13],[153,13,122,15],[154,0,122,17,"marginTop"],[154,8,122,17,"marginTop"],[154,17,122,26],[154,19,122,28],[155,0,122,15],[155,7,122,2],[156,0,122,2],[157,0,122,2],[158,0,122,2],[159,0,122,2],[160,0,122,2],[160,7,123,4,"transitionList"],[160,21,123,18],[160,22,124,5,"sort"],[160,26,123,4],[160,27,124,10],[160,37,124,11,"list"],[160,41,124,10],[160,43,124,17,"_list"],[160,48,124,10],[160,50,124,27],[161,0,125,5],[161,10,125,9,"list"],[161,14,125,13],[161,15,125,14,"value"],[161,20,125,9],[161,23,125,22,"_list"],[161,28,125,27],[161,29,125,28,"value"],[161,34,125,5],[161,36,125,35],[161,43,125,42],[161,44,125,35],[162,0,126,5],[162,10,127,6,"list"],[162,14,127,10],[162,15,127,11,"value"],[162,20,127,6],[162,25,127,21,"_list"],[162,30,127,26],[162,31,127,27,"value"],[162,36,127,6],[162,40,128,6,"list"],[162,44,128,10],[162,45,128,11,"prevIndex"],[162,54,128,6],[162,57,128,23,"_list"],[162,62,128,28],[162,63,128,29,"prevIndex"],[162,72,126,5],[162,74,130,6],[162,81,130,13],[162,82,130,6],[162,83,126,5],[162,88,131,10],[162,95,131,17],[162,96,131,18],[162,97,131,10],[163,0,132,5],[163,5,123,4],[163,7,133,5,"map"],[163,10,123,4],[163,11,133,9],[163,21,133,10,"list"],[163,25,133,9],[163,27,133,16,"index"],[163,32,133,9],[164,0,133,9],[164,13,134,5],[164,42,134,6],[164,63,134,5],[164,64,134,15],[164,68,134,5],[165,0,135,6],[165,8,135,6],[165,11,135,9],[165,13,135,11,"index"],[165,18,134,5],[166,0,136,6],[166,8,136,6],[166,13,136,11],[166,15,136,13],[167,0,137,7,"width"],[167,10,137,7,"width"],[167,15,137,12],[167,17,137,14],[167,20,136,13],[168,0,138,7,"height"],[168,10,138,7,"height"],[168,16,138,13],[168,18,138,15,"height"],[168,24,136,13],[169,0,139,7,"position"],[169,10,139,7,"position"],[169,18,139,15],[169,20,139,17],[169,30,136,13],[170,0,140,7,"top"],[170,10,140,7,"top"],[170,13,140,10],[170,15,141,8,"height"],[170,21,141,14],[170,25,141,18,"list"],[170,29,141,22],[170,30,141,23,"prevIndex"],[170,39,141,18],[170,42,141,35],[170,43,141,14],[170,44,141,8],[170,48,142,8,"height"],[170,54,142,14],[170,58,142,18,"index"],[170,63,142,23],[170,66,142,26],[170,67,142,14],[170,68,136,13],[171,0,143,7,"backgroundColor"],[171,10,143,7,"backgroundColor"],[171,25,143,22],[171,27,143,24,"list"],[171,31,143,28],[171,32,143,29,"color"],[171,37,136,13],[172,0,144,7,"transform"],[172,10,144,7,"transform"],[172,19,144,16],[172,21,144,18,"getTranslation"],[172,35,144,32],[172,36,144,33,"index"],[172,41,144,32],[172,43,144,40,"list"],[172,47,144,44],[172,48,144,45,"prevIndex"],[172,57,144,32],[173,0,136,13],[173,9,134,5],[174,0,134,5],[175,0,134,5],[176,0,134,5],[177,0,134,5],[178,0,134,5],[178,9,147,6],[178,38,147,7],[178,55,147,6],[179,0,147,6],[180,0,147,6],[181,0,147,6],[182,0,147,6],[183,0,147,6],[183,9,148,8,"list"],[183,13,148,12],[183,14,148,13,"text"],[183,18,147,6],[183,25,148,20,"list"],[183,29,148,24],[183,30,148,25,"value"],[183,35,147,6],[183,36,134,5],[183,37,133,9],[184,0,133,9],[184,5,123,4],[184,6,122,2],[184,8,152,3],[184,37,152,4],[184,66,152,3],[185,0,153,4],[185,6,153,4],[185,11,153,9],[185,13,153,11],[186,0,153,13,"top"],[186,8,153,13,"top"],[186,11,153,16],[186,13,153,18],[187,0,153,11],[187,7,152,3],[188,0,154,4],[188,6,154,4],[188,13,154,11],[188,15,154,13],[189,0,154,13],[189,15,154,19,"startScaleAnimation"],[189,34,154,38],[189,35,154,39],[189,40,154,38],[189,41,154,13],[190,0,154,13],[190,7,152,3],[191,0,152,3],[192,0,152,3],[193,0,152,3],[194,0,152,3],[195,0,152,3],[195,7,156,4],[195,36,156,5],[195,53,156,4],[196,0,156,4],[197,0,156,4],[198,0,156,4],[199,0,156,4],[200,0,156,4],[200,16,152,3],[200,17,122,2],[200,18,121,1],[201,0,160,1],[203,5,29,24,"ConnexionScreen"],[203,20],[205,7,29,24,"ConnexionScreen"],[205,22]],"functionMap":{"names":["<global>","ConnexionScreen","List.sort$argument_0","useEffect$argument_0","transitionList.map$argument_0","startScaleAnimation","transitionList.sort$argument_0","NewList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.sort.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;YCI;GDE;WEI;+CCC;IDG;EFE;CIG;gDCC;GDK;iBEK,+CF;SGU,gDH;UIC;KJQ;YKM;MLQ;EJG;CUE;EVsB;UKK;KLQ;SWC;KXkB;aYG,gCZ;CDM"}},"type":"js/module"}]}