{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Components/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 3,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var NewList = [{\n    value: 14,\n    text: \"Felix\"\n  }, {\n    value: 11,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen(props) {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(props.oldList.sort(function (list, _list) {\n      if (list.value > _list.value) return 1;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var height = 50;\n    (0, _react.useEffect)(function () {\n      var newTransitionList = transitionList.map(function (list, index) {\n        return _objectSpread({}, list, {\n          prevIndex: index,\n          prevValue: list.value\n        });\n      });\n      setTransitionList(newTransitionList);\n    }, []);\n\n    function startScaleAnimation(changed) {\n      var newTransitionList = transitionList.sort(function (list, _list) {\n        if (list.value < _list.value) return 1;\n        if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n      });\n\n      var _loop = function _loop(i) {\n        if (newTransitionList[i].value < props.newList.find(function (list) {\n          return list.text === newTransitionList[i].text;\n        }).value) {\n          newTransitionList[i].prevValue = newTransitionList[i].value;\n          newTransitionList[i].value += 1;\n          changed = true;\n        } else {\n          newTransitionList[i].prevValue = newTransitionList[i].value;\n        }\n      };\n\n      for (var i in newTransitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        var listtt = newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          if (list.value < _list.value) return 1;\n          if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n        });\n        setTransitionList(listtt);\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          duration: 500\n        }).start(function () {\n          return _reactNative.Animated.timing(animatedTranslateValue, {\n            toValue: 0,\n            duration: 1\n          }).start(function () {\n            if (changed) {\n              startScaleAnimation(false);\n            }\n          });\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -height * (prevIndex - index)]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, height * (index - prevIndex)]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    function getAnimatedWidth(prevValue, value) {\n      return animatedTranslateValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [prevValue * 10, value * 10]\n      });\n    }\n\n    function getWidth() {\n      return 50;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100,\n        position: \"absolute\",\n        left: 40,\n        top: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      }\n    }, console.log(transitionList), transitionList.sort(function (list, _list) {\n      if (list.value < _list.value) return 1;\n      if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n    }).map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: getAnimatedWidth(list.prevValue || 0, list.value),\n          height: height,\n          position: \"absolute\",\n          top: height * (list.prevIndex + 1) || height * (index + 1),\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: {\n        top: 300\n      },\n      onPress: function onPress() {\n        return startScaleAnimation(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      }\n    }, \"staffrt \")));\n  }\n\n  _s(ConnexionScreen, \"C5l0K4vQIS0P8KMJYr9jSMk1H0E=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":224,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,13],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,13],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,13],[40,4,18,0],[41,0,23,0],[41,6,23,6,"NewList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,13,24,1],[43,0,24,14,"text"],[43,4,24,14,"text"],[43,8,24,18],[43,10,24,20],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,13,25,1],[46,0,25,14,"text"],[46,4,25,14,"text"],[46,8,25,18],[46,10,25,20],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"ConnexionScreen"],[52,26,29,15],[52,27,29,40,"props"],[52,32,29,15],[52,34,29,47],[53,0,29,47],[55,0,29,47],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,47],[56,0,29,47],[57,0,29,47],[57,8,30,8,"animatedValue"],[57,21,29,47],[59,0,29,47],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,47],[60,0,29,47],[61,0,29,47],[61,8,31,8,"animatedTranslateValue"],[61,30,29,47],[63,0,29,47],[63,21,32,45],[63,42,33,2,"props"],[63,47,33,7],[63,48,33,8,"oldList"],[63,55,33,2],[63,56,33,16,"sort"],[63,60,33,2],[63,61,33,21],[63,71,33,22,"list"],[63,75,33,21],[63,77,33,28,"_list"],[63,82,33,21],[63,84,33,38],[64,0,34,3],[64,10,34,7,"list"],[64,14,34,11],[64,15,34,12,"value"],[64,20,34,7],[64,23,34,20,"_list"],[64,28,34,25],[64,29,34,26,"value"],[64,34,34,3],[64,36,34,33],[64,43,34,40],[64,44,34,33],[65,0,35,3],[65,5,33,2],[65,6,32,45],[65,7,29,47],[66,0,29,47],[67,0,29,47],[67,8,32,8,"transitionList"],[67,22,29,47],[68,0,29,47],[68,8,32,24,"setTransitionList"],[68,25,29,47],[70,0,38,1],[70,8,38,7,"height"],[70,14,38,13],[70,17,38,16],[70,19,38,1],[71,0,39,1],[71,26,39,11],[71,38,39,17],[72,0,40,2],[72,10,40,8,"newTransitionList"],[72,27,40,25],[72,30,40,28,"transitionList"],[72,44,40,42],[72,45,40,43,"map"],[72,48,40,28],[72,49,40,47],[72,59,40,48,"list"],[72,63,40,47],[72,65,40,54,"index"],[72,70,40,47],[73,0,40,47],[73,33,41,6,"list"],[73,37,40,47],[74,0,42,3,"prevIndex"],[74,10,42,3,"prevIndex"],[74,19,42,12],[74,21,42,14,"index"],[74,26,40,47],[75,0,43,3,"prevValue"],[75,10,43,3,"prevValue"],[75,19,43,12],[75,21,43,14,"list"],[75,25,43,18],[75,26,43,19,"value"],[76,0,40,47],[77,0,40,47],[77,7,40,28],[77,8,40,2],[78,0,45,2,"setTransitionList"],[78,6,45,2,"setTransitionList"],[78,23,45,19],[78,24,45,20,"newTransitionList"],[78,41,45,19],[78,42,45,2],[79,0,46,2],[79,5,39,1],[79,7,46,4],[79,9,39,1],[81,0,48,1],[81,13,48,10,"startScaleAnimation"],[81,32,48,1],[81,33,48,30,"changed"],[81,40,48,1],[81,42,48,39],[82,0,49,2],[82,10,49,8,"newTransitionList"],[82,27,49,25],[82,30,49,28,"transitionList"],[82,44,49,42],[82,45,49,43,"sort"],[82,49,49,28],[82,50,49,48],[82,60,49,49,"list"],[82,64,49,48],[82,66,49,55,"_list"],[82,71,49,48],[82,73,49,65],[83,0,50,3],[83,12,50,7,"list"],[83,16,50,11],[83,17,50,12,"value"],[83,22,50,7],[83,25,50,20,"_list"],[83,30,50,25],[83,31,50,26,"value"],[83,36,50,3],[83,38,50,33],[83,45,50,40],[83,46,50,33],[84,0,51,3],[84,12,51,7,"list"],[84,16,51,11],[84,17,51,12,"value"],[84,22,51,7],[84,27,51,22,"_list"],[84,32,51,27],[84,33,51,28,"value"],[84,38,51,7],[84,42,51,37,"list"],[84,46,51,41],[84,47,51,42,"prevIndex"],[84,56,51,37],[84,59,51,54,"_list"],[84,64,51,59],[84,65,51,60,"prevIndex"],[84,74,51,3],[84,76,52,4],[84,83,52,11],[84,84,52,4],[84,85,51,3],[84,90,53,8],[84,97,53,15],[84,98,53,16],[84,99,53,8],[85,0,54,3],[85,7,49,28],[85,8,49,2],[87,0,48,39],[87,33,55,13,"i"],[87,34,48,39],[88,0,56,3],[88,12,57,4,"newTransitionList"],[88,29,57,21],[88,30,57,22,"i"],[88,31,57,21],[88,32,57,4],[88,33,57,25,"value"],[88,38,57,4],[88,41,58,4,"props"],[88,46,58,9],[88,47,58,10,"newList"],[88,54,58,4],[88,55,58,18,"find"],[88,59,58,4],[88,60,59,5],[88,70,59,5,"list"],[88,74,59,9],[89,0,59,9],[89,17,59,13,"list"],[89,21,59,17],[89,22,59,18,"text"],[89,26,59,13],[89,31,59,27,"newTransitionList"],[89,48,59,44],[89,49,59,45,"i"],[89,50,59,44],[89,51,59,27],[89,52,59,48,"text"],[89,56,59,9],[90,0,59,9],[90,9,58,4],[90,11,60,6,"value"],[90,16,56,3],[90,18,61,5],[91,0,62,4,"newTransitionList"],[91,10,62,4,"newTransitionList"],[91,27,62,21],[91,28,62,22,"i"],[91,29,62,21],[91,30,62,4],[91,31,62,25,"prevValue"],[91,40,62,4],[91,43,62,37,"newTransitionList"],[91,60,62,54],[91,61,62,55,"i"],[91,62,62,54],[91,63,62,37],[91,64,62,58,"value"],[91,69,62,4],[92,0,63,4,"newTransitionList"],[92,10,63,4,"newTransitionList"],[92,27,63,21],[92,28,63,22,"i"],[92,29,63,21],[92,30,63,4],[92,31,63,25,"value"],[92,36,63,4],[92,40,63,34],[92,41,63,4],[93,0,64,4,"changed"],[93,10,64,4,"changed"],[93,17,64,11],[93,20,64,14],[93,24,64,4],[94,0,65,4],[94,9,56,3],[94,15,65,10],[95,0,66,4,"newTransitionList"],[95,10,66,4,"newTransitionList"],[95,27,66,21],[95,28,66,22,"i"],[95,29,66,21],[95,30,66,4],[95,31,66,25,"prevValue"],[95,40,66,4],[95,43,66,37,"newTransitionList"],[95,60,66,54],[95,61,66,55,"i"],[95,62,66,54],[95,63,66,37],[95,64,66,58,"value"],[95,69,66,4],[96,0,67,4],[97,0,48,39],[99,0,55,2],[99,11,55,7],[99,15,55,13,"i"],[99,16,55,2],[99,20,55,18,"newTransitionList"],[99,37,55,2],[99,39,55,37],[100,0,55,37],[100,14,55,13,"i"],[100,15,55,37],[101,0,68,3],[103,0,69,2],[103,10,69,6,"changed"],[103,17,69,2],[103,19,69,15],[104,0,70,3],[104,12,70,9,"listtt"],[104,18,70,15],[104,21,70,18,"newTransitionList"],[104,38,70,35],[104,39,71,5,"map"],[104,42,70,18],[104,43,71,9],[104,53,71,10,"list"],[104,57,71,9],[104,59,71,16,"index"],[104,64,71,9],[105,0,71,9],[105,35,71,32,"list"],[105,39,71,9],[106,0,71,38,"prevIndex"],[106,12,71,38,"prevIndex"],[106,21,71,47],[106,23,71,49,"index"],[107,0,71,9],[108,0,71,9],[108,9,70,18],[108,11,72,5,"sort"],[108,15,70,18],[108,16,72,10],[108,26,72,11,"list"],[108,30,72,10],[108,32,72,17,"_list"],[108,37,72,10],[108,39,72,27],[109,0,73,5],[109,14,73,9,"list"],[109,18,73,13],[109,19,73,14,"value"],[109,24,73,9],[109,27,73,22,"_list"],[109,32,73,27],[109,33,73,28,"value"],[109,38,73,5],[109,40,73,35],[109,47,73,42],[109,48,73,35],[110,0,74,5],[110,14,75,6,"list"],[110,18,75,10],[110,19,75,11,"value"],[110,24,75,6],[110,29,75,21,"_list"],[110,34,75,26],[110,35,75,27,"value"],[110,40,75,6],[110,44,76,6,"list"],[110,48,76,10],[110,49,76,11,"prevIndex"],[110,58,76,6],[110,61,76,23,"_list"],[110,66,76,28],[110,67,76,29,"prevIndex"],[110,76,74,5],[110,78,78,6],[110,85,78,13],[110,86,78,6],[110,87,74,5],[110,92,79,10],[110,99,79,17],[110,100,79,18],[110,101,79,10],[111,0,80,5],[111,9,70,18],[111,10,70,3],[112,0,81,3,"setTransitionList"],[112,8,81,3,"setTransitionList"],[112,25,81,20],[112,26,81,21,"listtt"],[112,32,81,20],[112,33,81,3],[114,0,82,3,"Animated"],[114,30,82,12,"timing"],[114,36,82,3],[114,37,82,19,"animatedTranslateValue"],[114,59,82,3],[114,61,82,43],[115,0,83,4,"toValue"],[115,10,83,4,"toValue"],[115,17,83,11],[115,19,83,13],[115,20,82,43],[116,0,84,4,"duration"],[116,10,84,4,"duration"],[116,18,84,12],[116,20,84,14],[117,0,82,43],[117,9,82,3],[117,11,85,6,"start"],[117,16,82,3],[117,17,85,12],[118,0,85,12],[118,17,86,4,"Animated"],[118,39,86,13,"timing"],[118,45,86,4],[118,46,86,20,"animatedTranslateValue"],[118,68,86,4],[118,70,86,44],[119,0,87,5,"toValue"],[119,12,87,5,"toValue"],[119,19,87,12],[119,21,87,14],[119,22,86,44],[120,0,88,5,"duration"],[120,12,88,5,"duration"],[120,20,88,13],[120,22,88,15],[121,0,86,44],[121,11,86,4],[121,13,89,7,"start"],[121,18,86,4],[121,19,89,13],[121,31,89,19],[122,0,90,5],[122,16,90,9,"changed"],[122,23,90,5],[122,25,90,18],[123,0,91,6,"startScaleAnimation"],[123,14,91,6,"startScaleAnimation"],[123,33,91,25],[123,34,91,26],[123,39,91,25],[123,40,91,6],[124,0,92,6],[125,0,93,5],[125,11,86,4],[125,12,85,12],[126,0,85,12],[126,9,82,3],[127,0,95,3],[128,0,96,2],[130,0,98,1],[130,13,98,10,"getTranslation"],[130,27,98,1],[130,28,98,25,"index"],[130,33,98,1],[130,35,98,32,"prevIndex"],[130,44,98,1],[130,46,98,43],[131,0,99,2],[131,10,99,6,"index"],[131,15,99,11],[131,18,99,14,"prevIndex"],[131,27,99,2],[131,29,99,25],[132,0,100,3],[132,15,100,10],[132,16,101,4],[133,0,102,5,"translateY"],[133,10,102,5,"translateY"],[133,20,102,15],[133,22,102,17,"animatedTranslateValue"],[133,44,102,39],[133,45,102,40,"interpolate"],[133,56,102,17],[133,57,102,52],[134,0,103,6,"inputRange"],[134,12,103,6,"inputRange"],[134,22,103,16],[134,24,103,18],[134,25,103,19],[134,26,103,18],[134,28,103,22],[134,29,103,18],[134,30,102,52],[135,0,104,6,"outputRange"],[135,12,104,6,"outputRange"],[135,23,104,17],[135,25,104,19],[135,26,104,20],[135,27,104,19],[135,29,104,23],[135,30,104,24,"height"],[135,36,104,23],[135,40,104,34,"prevIndex"],[135,49,104,43],[135,52,104,46,"index"],[135,57,104,23],[135,58,104,19],[136,0,102,52],[136,11,102,17],[137,0,101,4],[137,9,100,10],[137,10,100,3],[138,0,108,3],[140,0,109,2],[140,10,109,6,"index"],[140,15,109,11],[140,18,109,14,"prevIndex"],[140,27,109,2],[140,29,109,25],[141,0,110,3],[141,15,110,10],[141,16,111,4],[142,0,112,5,"translateY"],[142,10,112,5,"translateY"],[142,20,112,15],[142,22,112,17,"animatedTranslateValue"],[142,44,112,39],[142,45,112,40,"interpolate"],[142,56,112,17],[142,57,112,52],[143,0,113,6,"inputRange"],[143,12,113,6,"inputRange"],[143,22,113,16],[143,24,113,18],[143,25,113,19],[143,26,113,18],[143,28,113,22],[143,29,113,18],[143,30,112,52],[144,0,114,6,"outputRange"],[144,12,114,6,"outputRange"],[144,23,114,17],[144,25,114,19],[144,26,114,20],[144,27,114,19],[144,29,114,23,"height"],[144,35,114,29],[144,39,114,33,"index"],[144,44,114,38],[144,47,114,41,"prevIndex"],[144,56,114,29],[144,57,114,19],[145,0,112,52],[145,11,112,17],[146,0,111,4],[146,9,110,10],[146,10,110,3],[147,0,118,3],[149,0,119,2],[150,0,120,2],[152,0,122,1],[152,13,122,10,"getAnimatedWidth"],[152,29,122,1],[152,30,122,27,"prevValue"],[152,39,122,1],[152,41,122,38,"value"],[152,46,122,1],[152,48,122,45],[153,0,123,2],[153,13,123,9,"animatedTranslateValue"],[153,35,123,31],[153,36,123,32,"interpolate"],[153,47,123,9],[153,48,123,44],[154,0,124,3,"inputRange"],[154,8,124,3,"inputRange"],[154,18,124,13],[154,20,124,15],[154,21,124,16],[154,22,124,15],[154,24,124,19],[154,25,124,15],[154,26,123,44],[155,0,125,3,"outputRange"],[155,8,125,3,"outputRange"],[155,19,125,14],[155,21,125,16],[155,22,125,17,"prevValue"],[155,31,125,26],[155,34,125,29],[155,36,125,16],[155,38,125,33,"value"],[155,43,125,38],[155,46,125,41],[155,48,125,16],[156,0,123,44],[156,7,123,9],[156,8,123,2],[157,0,127,2],[159,0,129,1],[159,13,129,10,"getWidth"],[159,21,129,1],[159,24,129,21],[160,0,130,2],[160,13,130,9],[160,15,130,2],[161,0,131,2],[163,0,132,1],[163,11,133,2],[163,40,133,3],[163,57,133,2],[164,0,134,3],[164,6,134,3],[164,11,134,8],[164,13,134,10],[165,0,135,4,"marginTop"],[165,8,135,4,"marginTop"],[165,17,135,13],[165,19,135,15],[165,22,134,10],[166,0,136,4,"position"],[166,8,136,4,"position"],[166,16,136,12],[166,18,136,14],[166,28,134,10],[167,0,137,4,"left"],[167,8,137,4,"left"],[167,12,137,8],[167,14,137,10],[167,16,134,10],[168,0,138,4,"top"],[168,8,138,4,"top"],[168,11,138,7],[168,13,138,9],[169,0,134,10],[169,7,133,2],[170,0,133,2],[171,0,133,2],[172,0,133,2],[173,0,133,2],[174,0,133,2],[174,7,141,4,"console"],[174,14,141,11],[174,15,141,12,"log"],[174,18,141,4],[174,19,141,16,"transitionList"],[174,33,141,4],[174,34,133,2],[174,36,142,4,"transitionList"],[174,50,142,18],[174,51,143,5,"sort"],[174,55,142,4],[174,56,143,10],[174,66,143,11,"list"],[174,70,143,10],[174,72,143,17,"_list"],[174,77,143,10],[174,79,143,27],[175,0,144,5],[175,10,144,9,"list"],[175,14,144,13],[175,15,144,14,"value"],[175,20,144,9],[175,23,144,22,"_list"],[175,28,144,27],[175,29,144,28,"value"],[175,34,144,5],[175,36,144,35],[175,43,144,42],[175,44,144,35],[176,0,145,5],[176,10,146,6,"list"],[176,14,146,10],[176,15,146,11,"value"],[176,20,146,6],[176,25,146,21,"_list"],[176,30,146,26],[176,31,146,27,"value"],[176,36,146,6],[176,40,147,6,"list"],[176,44,147,10],[176,45,147,11,"prevIndex"],[176,54,147,6],[176,57,147,23,"_list"],[176,62,147,28],[176,63,147,29,"prevIndex"],[176,72,145,5],[176,74,149,6],[176,81,149,13],[176,82,149,6],[176,83,145,5],[176,88,150,10],[176,95,150,17],[176,96,150,18],[176,97,150,10],[177,0,151,5],[177,5,142,4],[177,7,152,5,"map"],[177,10,142,4],[177,11,152,9],[177,21,152,10,"list"],[177,25,152,9],[177,27,152,16,"index"],[177,32,152,9],[178,0,152,9],[178,13,153,5],[178,42,153,6],[178,63,153,5],[178,64,153,15],[178,68,153,5],[179,0,154,6],[179,8,154,6],[179,11,154,9],[179,13,154,11,"index"],[179,18,153,5],[180,0,155,6],[180,8,155,6],[180,13,155,11],[180,15,155,13],[181,0,156,7,"width"],[181,10,156,7,"width"],[181,15,156,12],[181,17,156,14,"getAnimatedWidth"],[181,33,156,30],[181,34,157,8,"list"],[181,38,157,12],[181,39,157,13,"prevValue"],[181,48,157,8],[181,52,157,26],[181,53,156,30],[181,55,158,8,"list"],[181,59,158,12],[181,60,158,13,"value"],[181,65,156,30],[181,66,155,13],[182,0,160,7,"height"],[182,10,160,7,"height"],[182,16,160,13],[182,18,160,15,"height"],[182,24,155,13],[183,0,161,7,"position"],[183,10,161,7,"position"],[183,18,161,15],[183,20,161,17],[183,30,155,13],[184,0,162,7,"top"],[184,10,162,7,"top"],[184,13,162,10],[184,15,163,8,"height"],[184,21,163,14],[184,25,163,18,"list"],[184,29,163,22],[184,30,163,23,"prevIndex"],[184,39,163,18],[184,42,163,35],[184,43,163,14],[184,44,163,8],[184,48,164,8,"height"],[184,54,164,14],[184,58,164,18,"index"],[184,63,164,23],[184,66,164,26],[184,67,164,14],[184,68,155,13],[185,0,165,7,"backgroundColor"],[185,10,165,7,"backgroundColor"],[185,25,165,22],[185,27,165,24,"list"],[185,31,165,28],[185,32,165,29,"color"],[185,37,155,13],[186,0,166,7,"transform"],[186,10,166,7,"transform"],[186,19,166,16],[186,21,166,18,"getTranslation"],[186,35,166,32],[186,36,166,33,"index"],[186,41,166,32],[186,43,166,40,"list"],[186,47,166,44],[186,48,166,45,"prevIndex"],[186,57,166,32],[187,0,155,13],[187,9,153,5],[188,0,153,5],[189,0,153,5],[190,0,153,5],[191,0,153,5],[192,0,153,5],[192,9,169,6],[192,38,169,7],[192,55,169,6],[193,0,169,6],[194,0,169,6],[195,0,169,6],[196,0,169,6],[197,0,169,6],[197,9,170,8,"list"],[197,13,170,12],[197,14,170,13,"text"],[197,18,169,6],[197,25,170,20,"list"],[197,29,170,24],[197,30,170,25,"value"],[197,35,169,6],[197,36,153,5],[197,37,152,9],[198,0,152,9],[198,5,142,4],[198,6,133,2],[198,8,174,3],[198,37,174,4],[198,66,174,3],[199,0,175,4],[199,6,175,4],[199,11,175,9],[199,13,175,11],[200,0,175,13,"top"],[200,8,175,13,"top"],[200,11,175,16],[200,13,175,18],[201,0,175,11],[201,7,174,3],[202,0,176,4],[202,6,176,4],[202,13,176,11],[202,15,176,13],[203,0,176,13],[203,15,176,19,"startScaleAnimation"],[203,34,176,38],[203,35,176,39],[203,40,176,38],[203,41,176,13],[204,0,176,13],[204,7,174,3],[205,0,174,3],[206,0,174,3],[207,0,174,3],[208,0,174,3],[209,0,174,3],[209,7,178,4],[209,36,178,5],[209,53,178,4],[210,0,178,4],[211,0,178,4],[212,0,178,4],[213,0,178,4],[214,0,178,4],[214,18,174,3],[214,19,133,2],[214,20,132,1],[215,0,182,1],[217,5,29,24,"ConnexionScreen"],[217,20],[219,7,29,24,"ConnexionScreen"],[219,22]],"functionMap":{"names":["<global>","ConnexionScreen","props.oldList.sort$argument_0","useEffect$argument_0","transitionList.map$argument_0","startScaleAnimation","transitionList.sort$argument_0","props.newList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","getAnimatedWidth","getWidth","transitionList.sort.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;qBCI;GDE;WEI;+CCC;IDI;EFE;CIE;gDCC;GDK;KEK,+CF;SGY,gDH;UIC;KJQ;YKK;MLQ;EJG;CUE;EVsB;CWE;EXK;CYE;EZE;UKY;KLQ;SaC;KbqB;acG,gCd;CDM"}},"type":"js/module"}]}