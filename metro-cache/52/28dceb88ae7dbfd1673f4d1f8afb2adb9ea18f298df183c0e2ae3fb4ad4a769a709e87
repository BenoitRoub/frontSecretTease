{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = DynamicList;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Components/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var oldList = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 3,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var newList = [{\n    value: 14,\n    text: \"Felix\"\n  }, {\n    value: 11,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function DynamicList(props) {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(oldList.sort(function (list, _list) {\n      if (list.value > _list.value) return 1;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    (0, _react.useEffect)(function () {\n      startScaleAnimation(false);\n    }, [props.open]);\n    var height = 50;\n    (0, _react.useEffect)(function () {\n      var newTransitionList = transitionList.map(function (list, index) {\n        return _objectSpread({}, list, {\n          prevIndex: index\n        });\n      });\n      setTransitionList(newTransitionList);\n    }, []);\n\n    function startScaleAnimation(changed) {\n      var newTransitionList = transitionList.sort(function (list, _list) {\n        if (list.value < _list.value) return 1;\n        if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n      });\n\n      var _loop = function _loop(i) {\n        if (newTransitionList[i].value < newList.find(function (list) {\n          return list.text === newTransitionList[i].text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          changed = true;\n        }\n      };\n\n      for (var i in newTransitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        var listtt = newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          if (list.value < _list.value) return 1;\n          if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n        });\n        setTransitionList(listtt);\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          duration: 500\n        }).start(function () {\n          return _reactNative.Animated.timing(animatedTranslateValue, {\n            toValue: 0,\n            duration: 1\n          }).start(function () {\n            if (changed) {\n              startScaleAnimation(false);\n            }\n          });\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -height * (prevIndex - index)]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, height * (index - prevIndex)]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100,\n        marginLeft: 100,\n        width: \"80%\",\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      }\n    }, transitionList.sort(function (list, _list) {\n      if (list.value < _list.value) return 1;\n      if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n    }).map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 80,\n          height: height,\n          position: \"absolute\",\n          top: height * (list.prevIndex + 1) || height * (index + 1),\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        }\n      }, list.text, \" \", list.value));\n    }));\n  }\n\n  _s(DynamicList, \"Ca30f+tkuwQqFzbY5Iw/h2ejWQs=\");\n\n  _c = DynamicList;\n\n  var _c;\n\n  $RefreshReg$(_c, \"DynamicList\");\n});","lineCount":196,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"oldList"],[28,13,18,13],[28,16,18,16],[28,17,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,16],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,16],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,16],[40,4,18,0],[41,0,23,0],[41,6,23,6,"newList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,13,24,1],[43,0,24,14,"text"],[43,4,24,14,"text"],[43,8,24,18],[43,10,24,20],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,13,25,1],[46,0,25,14,"text"],[46,4,25,14,"text"],[46,8,25,18],[46,10,25,20],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"DynamicList"],[52,22,29,15],[52,23,29,36,"props"],[52,28,29,15],[52,30,29,43],[53,0,29,43],[55,0,29,43],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,43],[56,0,29,43],[57,0,29,43],[57,8,30,8,"animatedValue"],[57,21,29,43],[59,0,29,43],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,43],[60,0,29,43],[61,0,29,43],[61,8,31,8,"animatedTranslateValue"],[61,30,29,43],[63,0,29,43],[63,21,32,45],[63,42,33,2,"oldList"],[63,49,33,9],[63,50,33,10,"sort"],[63,54,33,2],[63,55,33,15],[63,65,33,16,"list"],[63,69,33,15],[63,71,33,22,"_list"],[63,76,33,15],[63,78,33,32],[64,0,34,3],[64,10,34,7,"list"],[64,14,34,11],[64,15,34,12,"value"],[64,20,34,7],[64,23,34,20,"_list"],[64,28,34,25],[64,29,34,26,"value"],[64,34,34,3],[64,36,34,33],[64,43,34,40],[64,44,34,33],[65,0,35,3],[65,5,33,2],[65,6,32,45],[65,7,29,43],[66,0,29,43],[67,0,29,43],[67,8,32,8,"transitionList"],[67,22,29,43],[68,0,29,43],[68,8,32,24,"setTransitionList"],[68,25,29,43],[70,0,38,1],[70,26,38,11],[70,38,38,17],[71,0,39,2,"startScaleAnimation"],[71,6,39,2,"startScaleAnimation"],[71,25,39,21],[71,26,39,22],[71,31,39,21],[71,32,39,2],[72,0,40,2],[72,5,38,1],[72,7,40,4],[72,8,40,5,"props"],[72,13,40,10],[72,14,40,11,"open"],[72,18,40,4],[72,19,38,1],[73,0,42,1],[73,8,42,7,"height"],[73,14,42,13],[73,17,42,16],[73,19,42,1],[74,0,43,1],[74,26,43,11],[74,38,43,17],[75,0,44,2],[75,10,44,8,"newTransitionList"],[75,27,44,25],[75,30,44,28,"transitionList"],[75,44,44,42],[75,45,44,43,"map"],[75,48,44,28],[75,49,44,47],[75,59,44,48,"list"],[75,63,44,47],[75,65,44,54,"index"],[75,70,44,47],[76,0,44,47],[76,33,45,6,"list"],[76,37,44,47],[77,0,46,3,"prevIndex"],[77,10,46,3,"prevIndex"],[77,19,46,12],[77,21,46,14,"index"],[78,0,44,47],[79,0,44,47],[79,7,44,28],[79,8,44,2],[80,0,48,2,"setTransitionList"],[80,6,48,2,"setTransitionList"],[80,23,48,19],[80,24,48,20,"newTransitionList"],[80,41,48,19],[80,42,48,2],[81,0,49,2],[81,5,43,1],[81,7,49,4],[81,9,43,1],[83,0,51,1],[83,13,51,10,"startScaleAnimation"],[83,32,51,1],[83,33,51,30,"changed"],[83,40,51,1],[83,42,51,39],[84,0,52,2],[84,10,52,8,"newTransitionList"],[84,27,52,25],[84,30,52,28,"transitionList"],[84,44,52,42],[84,45,52,43,"sort"],[84,49,52,28],[84,50,52,48],[84,60,52,49,"list"],[84,64,52,48],[84,66,52,55,"_list"],[84,71,52,48],[84,73,52,65],[85,0,53,3],[85,12,53,7,"list"],[85,16,53,11],[85,17,53,12,"value"],[85,22,53,7],[85,25,53,20,"_list"],[85,30,53,25],[85,31,53,26,"value"],[85,36,53,3],[85,38,53,33],[85,45,53,40],[85,46,53,33],[86,0,54,3],[86,12,54,7,"list"],[86,16,54,11],[86,17,54,12,"value"],[86,22,54,7],[86,27,54,22,"_list"],[86,32,54,27],[86,33,54,28,"value"],[86,38,54,7],[86,42,54,37,"list"],[86,46,54,41],[86,47,54,42,"prevIndex"],[86,56,54,37],[86,59,54,54,"_list"],[86,64,54,59],[86,65,54,60,"prevIndex"],[86,74,54,3],[86,76,55,4],[86,83,55,11],[86,84,55,4],[86,85,54,3],[86,90,56,8],[86,97,56,15],[86,98,56,16],[86,99,56,8],[87,0,57,3],[87,7,52,28],[87,8,52,2],[89,0,51,39],[89,33,58,13,"i"],[89,34,51,39],[90,0,59,3],[90,12,60,4,"newTransitionList"],[90,29,60,21],[90,30,60,22,"i"],[90,31,60,21],[90,32,60,4],[90,33,60,25,"value"],[90,38,60,4],[90,41,61,4,"newList"],[90,48,61,11],[90,49,61,12,"find"],[90,53,61,4],[90,54,61,17],[90,64,61,17,"list"],[90,68,61,21],[91,0,61,21],[91,17,61,25,"list"],[91,21,61,29],[91,22,61,30,"text"],[91,26,61,25],[91,31,61,39,"newTransitionList"],[91,48,61,56],[91,49,61,57,"i"],[91,50,61,56],[91,51,61,39],[91,52,61,60,"text"],[91,56,61,21],[92,0,61,21],[92,9,61,4],[92,11,62,6,"value"],[92,16,59,3],[92,18,63,5],[93,0,64,4,"newTransitionList"],[93,10,64,4,"newTransitionList"],[93,27,64,21],[93,28,64,22,"i"],[93,29,64,21],[93,30,64,4],[93,31,64,25,"value"],[93,36,64,4],[93,40,64,34],[93,41,64,4],[94,0,65,4,"changed"],[94,10,65,4,"changed"],[94,17,65,11],[94,20,65,14],[94,24,65,4],[95,0,66,4],[96,0,51,39],[98,0,58,2],[98,11,58,7],[98,15,58,13,"i"],[98,16,58,2],[98,20,58,18,"newTransitionList"],[98,37,58,2],[98,39,58,37],[99,0,58,37],[99,14,58,13,"i"],[99,15,58,37],[100,0,67,3],[102,0,68,2],[102,10,68,6,"changed"],[102,17,68,2],[102,19,68,15],[103,0,69,3],[103,12,69,9,"listtt"],[103,18,69,15],[103,21,69,18,"newTransitionList"],[103,38,69,35],[103,39,70,5,"map"],[103,42,69,18],[103,43,70,9],[103,53,70,10,"list"],[103,57,70,9],[103,59,70,16,"index"],[103,64,70,9],[104,0,70,9],[104,35,70,32,"list"],[104,39,70,9],[105,0,70,38,"prevIndex"],[105,12,70,38,"prevIndex"],[105,21,70,47],[105,23,70,49,"index"],[106,0,70,9],[107,0,70,9],[107,9,69,18],[107,11,71,5,"sort"],[107,15,69,18],[107,16,71,10],[107,26,71,11,"list"],[107,30,71,10],[107,32,71,17,"_list"],[107,37,71,10],[107,39,71,27],[108,0,72,5],[108,14,72,9,"list"],[108,18,72,13],[108,19,72,14,"value"],[108,24,72,9],[108,27,72,22,"_list"],[108,32,72,27],[108,33,72,28,"value"],[108,38,72,5],[108,40,72,35],[108,47,72,42],[108,48,72,35],[109,0,73,5],[109,14,74,6,"list"],[109,18,74,10],[109,19,74,11,"value"],[109,24,74,6],[109,29,74,21,"_list"],[109,34,74,26],[109,35,74,27,"value"],[109,40,74,6],[109,44,75,6,"list"],[109,48,75,10],[109,49,75,11,"prevIndex"],[109,58,75,6],[109,61,75,23,"_list"],[109,66,75,28],[109,67,75,29,"prevIndex"],[109,76,73,5],[109,78,77,6],[109,85,77,13],[109,86,77,6],[109,87,73,5],[109,92,78,10],[109,99,78,17],[109,100,78,18],[109,101,78,10],[110,0,79,5],[110,9,69,18],[110,10,69,3],[111,0,80,3,"setTransitionList"],[111,8,80,3,"setTransitionList"],[111,25,80,20],[111,26,80,21,"listtt"],[111,32,80,20],[111,33,80,3],[113,0,81,3,"Animated"],[113,30,81,12,"timing"],[113,36,81,3],[113,37,81,19,"animatedTranslateValue"],[113,59,81,3],[113,61,81,43],[114,0,82,4,"toValue"],[114,10,82,4,"toValue"],[114,17,82,11],[114,19,82,13],[114,20,81,43],[115,0,83,4,"duration"],[115,10,83,4,"duration"],[115,18,83,12],[115,20,83,14],[116,0,81,43],[116,9,81,3],[116,11,84,6,"start"],[116,16,81,3],[116,17,84,12],[117,0,84,12],[117,17,85,4,"Animated"],[117,39,85,13,"timing"],[117,45,85,4],[117,46,85,20,"animatedTranslateValue"],[117,68,85,4],[117,70,85,44],[118,0,86,5,"toValue"],[118,12,86,5,"toValue"],[118,19,86,12],[118,21,86,14],[118,22,85,44],[119,0,87,5,"duration"],[119,12,87,5,"duration"],[119,20,87,13],[119,22,87,15],[120,0,85,44],[120,11,85,4],[120,13,88,7,"start"],[120,18,85,4],[120,19,88,13],[120,31,88,19],[121,0,89,5],[121,16,89,9,"changed"],[121,23,89,5],[121,25,89,18],[122,0,90,6,"startScaleAnimation"],[122,14,90,6,"startScaleAnimation"],[122,33,90,25],[122,34,90,26],[122,39,90,25],[122,40,90,6],[123,0,91,6],[124,0,92,5],[124,11,85,4],[124,12,84,12],[125,0,84,12],[125,9,81,3],[126,0,94,3],[127,0,95,2],[129,0,97,1],[129,13,97,10,"getTranslation"],[129,27,97,1],[129,28,97,25,"index"],[129,33,97,1],[129,35,97,32,"prevIndex"],[129,44,97,1],[129,46,97,43],[130,0,98,2],[130,10,98,6,"index"],[130,15,98,11],[130,18,98,14,"prevIndex"],[130,27,98,2],[130,29,98,25],[131,0,99,3],[131,15,99,10],[131,16,100,4],[132,0,101,5,"translateY"],[132,10,101,5,"translateY"],[132,20,101,15],[132,22,101,17,"animatedTranslateValue"],[132,44,101,39],[132,45,101,40,"interpolate"],[132,56,101,17],[132,57,101,52],[133,0,102,6,"inputRange"],[133,12,102,6,"inputRange"],[133,22,102,16],[133,24,102,18],[133,25,102,19],[133,26,102,18],[133,28,102,22],[133,29,102,18],[133,30,101,52],[134,0,103,6,"outputRange"],[134,12,103,6,"outputRange"],[134,23,103,17],[134,25,103,19],[134,26,103,20],[134,27,103,19],[134,29,103,23],[134,30,103,24,"height"],[134,36,103,23],[134,40,103,34,"prevIndex"],[134,49,103,43],[134,52,103,46,"index"],[134,57,103,23],[134,58,103,19],[135,0,101,52],[135,11,101,17],[136,0,100,4],[136,9,99,10],[136,10,99,3],[137,0,107,3],[139,0,108,2],[139,10,108,6,"index"],[139,15,108,11],[139,18,108,14,"prevIndex"],[139,27,108,2],[139,29,108,25],[140,0,109,3],[140,15,109,10],[140,16,110,4],[141,0,111,5,"translateY"],[141,10,111,5,"translateY"],[141,20,111,15],[141,22,111,17,"animatedTranslateValue"],[141,44,111,39],[141,45,111,40,"interpolate"],[141,56,111,17],[141,57,111,52],[142,0,112,6,"inputRange"],[142,12,112,6,"inputRange"],[142,22,112,16],[142,24,112,18],[142,25,112,19],[142,26,112,18],[142,28,112,22],[142,29,112,18],[142,30,111,52],[143,0,113,6,"outputRange"],[143,12,113,6,"outputRange"],[143,23,113,17],[143,25,113,19],[143,26,113,20],[143,27,113,19],[143,29,113,23,"height"],[143,35,113,29],[143,39,113,33,"index"],[143,44,113,38],[143,47,113,41,"prevIndex"],[143,56,113,29],[143,57,113,19],[144,0,111,52],[144,11,111,17],[145,0,110,4],[145,9,109,10],[145,10,109,3],[146,0,117,3],[148,0,118,2],[149,0,119,2],[151,0,121,1],[151,11,122,2],[151,40,122,3],[151,57,122,2],[152,0,123,3],[152,6,123,3],[152,11,123,8],[152,13,123,10],[153,0,124,4,"marginTop"],[153,8,124,4,"marginTop"],[153,17,124,13],[153,19,124,15],[153,22,123,10],[154,0,125,4,"marginLeft"],[154,8,125,4,"marginLeft"],[154,18,125,14],[154,20,125,16],[154,23,123,10],[155,0,126,4,"width"],[155,8,126,4,"width"],[155,13,126,9],[155,15,126,11],[155,20,123,10],[156,0,127,4,"height"],[156,8,127,4,"height"],[156,14,127,10],[156,16,127,12],[157,0,123,10],[157,7,122,2],[158,0,122,2],[159,0,122,2],[160,0,122,2],[161,0,122,2],[162,0,122,2],[162,7,130,4,"transitionList"],[162,21,130,18],[162,22,131,5,"sort"],[162,26,130,4],[162,27,131,10],[162,37,131,11,"list"],[162,41,131,10],[162,43,131,17,"_list"],[162,48,131,10],[162,50,131,27],[163,0,132,5],[163,10,132,9,"list"],[163,14,132,13],[163,15,132,14,"value"],[163,20,132,9],[163,23,132,22,"_list"],[163,28,132,27],[163,29,132,28,"value"],[163,34,132,5],[163,36,132,35],[163,43,132,42],[163,44,132,35],[164,0,133,5],[164,10,134,6,"list"],[164,14,134,10],[164,15,134,11,"value"],[164,20,134,6],[164,25,134,21,"_list"],[164,30,134,26],[164,31,134,27,"value"],[164,36,134,6],[164,40,135,6,"list"],[164,44,135,10],[164,45,135,11,"prevIndex"],[164,54,135,6],[164,57,135,23,"_list"],[164,62,135,28],[164,63,135,29,"prevIndex"],[164,72,133,5],[164,74,137,6],[164,81,137,13],[164,82,137,6],[164,83,133,5],[164,88,138,10],[164,95,138,17],[164,96,138,18],[164,97,138,10],[165,0,139,5],[165,5,130,4],[165,7,140,5,"map"],[165,10,130,4],[165,11,140,9],[165,21,140,10,"list"],[165,25,140,9],[165,27,140,16,"index"],[165,32,140,9],[166,0,140,9],[166,13,141,5],[166,42,141,6],[166,63,141,5],[166,64,141,15],[166,68,141,5],[167,0,142,6],[167,8,142,6],[167,11,142,9],[167,13,142,11,"index"],[167,18,141,5],[168,0,143,6],[168,8,143,6],[168,13,143,11],[168,15,143,13],[169,0,144,7,"width"],[169,10,144,7,"width"],[169,15,144,12],[169,17,144,14],[169,19,143,13],[170,0,145,7,"height"],[170,10,145,7,"height"],[170,16,145,13],[170,18,145,15,"height"],[170,24,143,13],[171,0,146,7,"position"],[171,10,146,7,"position"],[171,18,146,15],[171,20,146,17],[171,30,143,13],[172,0,147,7,"top"],[172,10,147,7,"top"],[172,13,147,10],[172,15,148,8,"height"],[172,21,148,14],[172,25,148,18,"list"],[172,29,148,22],[172,30,148,23,"prevIndex"],[172,39,148,18],[172,42,148,35],[172,43,148,14],[172,44,148,8],[172,48,149,8,"height"],[172,54,149,14],[172,58,149,18,"index"],[172,63,149,23],[172,66,149,26],[172,67,149,14],[172,68,143,13],[173,0,150,7,"backgroundColor"],[173,10,150,7,"backgroundColor"],[173,25,150,22],[173,27,150,24,"list"],[173,31,150,28],[173,32,150,29,"color"],[173,37,143,13],[174,0,151,7,"transform"],[174,10,151,7,"transform"],[174,19,151,16],[174,21,151,18,"getTranslation"],[174,35,151,32],[174,36,151,33,"index"],[174,41,151,32],[174,43,151,40,"list"],[174,47,151,44],[174,48,151,45,"prevIndex"],[174,57,151,32],[175,0,143,13],[175,9,141,5],[176,0,141,5],[177,0,141,5],[178,0,141,5],[179,0,141,5],[180,0,141,5],[180,9,154,6],[180,38,154,7],[180,55,154,6],[181,0,154,6],[182,0,154,6],[183,0,154,6],[184,0,154,6],[185,0,154,6],[185,9,155,8,"list"],[185,13,155,12],[185,14,155,13,"text"],[185,18,154,6],[185,25,155,20,"list"],[185,29,155,24],[185,30,155,25,"value"],[185,35,154,6],[185,36,141,5],[185,37,140,9],[186,0,140,9],[186,5,130,4],[186,6,122,2],[186,7,121,1],[187,0,161,1],[189,5,29,24,"DynamicList"],[189,16],[191,7,29,24,"DynamicList"],[191,18]],"functionMap":{"names":["<global>","DynamicList","oldList.sort$argument_0","useEffect$argument_0","transitionList.map$argument_0","startScaleAnimation","transitionList.sort$argument_0","newList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.sort.map$argument_0"],"mappings":"AAA;eC4B;eCI;GDE;WEG;EFE;WEG;+CCC;IDG;EFE;CIE;gDCC;GDK;iBEI,+CF;SGS,gDH;UIC;KJQ;YKK;MLQ;EJG;CUE;EVsB;UKY;KLQ;SWC;KXkB;CDG"}},"type":"js/module"}]}