{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Components/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 3,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var NewList = [{\n    value: 14,\n    text: \"Felix\"\n  }, {\n    value: 11,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen(props) {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(props.oldList.sort(function (list, _list) {\n      if (list.value > _list.value) return 1;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var height = 50;\n    (0, _react.useEffect)(function () {\n      var newTransitionList = transitionList.map(function (list, index) {\n        return _objectSpread({}, list, {\n          prevIndex: index,\n          prevValue: list.value\n        });\n      });\n      setTransitionList(newTransitionList);\n    }, []);\n\n    function startScaleAnimation(changed) {\n      var newTransitionList = transitionList.sort(function (list, _list) {\n        if (list.value < _list.value) return 1;\n        if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n      });\n\n      var _loop = function _loop(i) {\n        if (newTransitionList[i].value < props.newList.find(function (list) {\n          return list.text === newTransitionList[i].text;\n        }).value) {\n          newTransitionList[i].prevValue = newTransitionList[i].value;\n          newTransitionList[i].value += 1;\n          changed = true;\n        }\n      };\n\n      for (var i in newTransitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        var listtt = newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          if (list.value < _list.value) return 1;\n          if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n        });\n        setTransitionList(listtt);\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          duration: 500\n        }).start(function () {\n          return _reactNative.Animated.timing(animatedTranslateValue, {\n            toValue: 0,\n            duration: 1\n          }).start(function () {\n            if (changed) {\n              startScaleAnimation(false);\n            }\n          });\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -height * (prevIndex - index)]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, height * (index - prevIndex)]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    function getAnimatedWidth(prevValue, value) {\n      if (prevValue === value) return value * 10;\n      return animatedTranslateValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [prevValue * 10, value * 10]\n      });\n    }\n\n    function getWidth() {\n      return 50;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100,\n        position: \"absolute\",\n        left: 40,\n        top: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      }\n    }, console.log(transitionList), transitionList.sort(function (list, _list) {\n      if (list.value < _list.value) return 1;\n      if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n    }).map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: getWidth(),\n          height: height,\n          position: \"absolute\",\n          top: height * (list.prevIndex + 1) || height * (index + 1),\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: {\n        top: 300\n      },\n      onPress: function onPress() {\n        return startScaleAnimation(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      }\n    }, \"staffrt \")));\n  }\n\n  _s(ConnexionScreen, \"C5l0K4vQIS0P8KMJYr9jSMk1H0E=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":223,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,13],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,13],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,13],[40,4,18,0],[41,0,23,0],[41,6,23,6,"NewList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,13,24,1],[43,0,24,14,"text"],[43,4,24,14,"text"],[43,8,24,18],[43,10,24,20],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,13,25,1],[46,0,25,14,"text"],[46,4,25,14,"text"],[46,8,25,18],[46,10,25,20],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"ConnexionScreen"],[52,26,29,15],[52,27,29,40,"props"],[52,32,29,15],[52,34,29,47],[53,0,29,47],[55,0,29,47],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,47],[56,0,29,47],[57,0,29,47],[57,8,30,8,"animatedValue"],[57,21,29,47],[59,0,29,47],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,47],[60,0,29,47],[61,0,29,47],[61,8,31,8,"animatedTranslateValue"],[61,30,29,47],[63,0,29,47],[63,21,32,45],[63,42,33,2,"props"],[63,47,33,7],[63,48,33,8,"oldList"],[63,55,33,2],[63,56,33,16,"sort"],[63,60,33,2],[63,61,33,21],[63,71,33,22,"list"],[63,75,33,21],[63,77,33,28,"_list"],[63,82,33,21],[63,84,33,38],[64,0,34,3],[64,10,34,7,"list"],[64,14,34,11],[64,15,34,12,"value"],[64,20,34,7],[64,23,34,20,"_list"],[64,28,34,25],[64,29,34,26,"value"],[64,34,34,3],[64,36,34,33],[64,43,34,40],[64,44,34,33],[65,0,35,3],[65,5,33,2],[65,6,32,45],[65,7,29,47],[66,0,29,47],[67,0,29,47],[67,8,32,8,"transitionList"],[67,22,29,47],[68,0,29,47],[68,8,32,24,"setTransitionList"],[68,25,29,47],[70,0,38,1],[70,8,38,7,"height"],[70,14,38,13],[70,17,38,16],[70,19,38,1],[71,0,39,1],[71,26,39,11],[71,38,39,17],[72,0,40,2],[72,10,40,8,"newTransitionList"],[72,27,40,25],[72,30,40,28,"transitionList"],[72,44,40,42],[72,45,40,43,"map"],[72,48,40,28],[72,49,40,47],[72,59,40,48,"list"],[72,63,40,47],[72,65,40,54,"index"],[72,70,40,47],[73,0,40,47],[73,33,41,6,"list"],[73,37,40,47],[74,0,42,3,"prevIndex"],[74,10,42,3,"prevIndex"],[74,19,42,12],[74,21,42,14,"index"],[74,26,40,47],[75,0,43,3,"prevValue"],[75,10,43,3,"prevValue"],[75,19,43,12],[75,21,43,14,"list"],[75,25,43,18],[75,26,43,19,"value"],[76,0,40,47],[77,0,40,47],[77,7,40,28],[77,8,40,2],[78,0,45,2,"setTransitionList"],[78,6,45,2,"setTransitionList"],[78,23,45,19],[78,24,45,20,"newTransitionList"],[78,41,45,19],[78,42,45,2],[79,0,46,2],[79,5,39,1],[79,7,46,4],[79,9,39,1],[81,0,48,1],[81,13,48,10,"startScaleAnimation"],[81,32,48,1],[81,33,48,30,"changed"],[81,40,48,1],[81,42,48,39],[82,0,49,2],[82,10,49,8,"newTransitionList"],[82,27,49,25],[82,30,49,28,"transitionList"],[82,44,49,42],[82,45,49,43,"sort"],[82,49,49,28],[82,50,49,48],[82,60,49,49,"list"],[82,64,49,48],[82,66,49,55,"_list"],[82,71,49,48],[82,73,49,65],[83,0,50,3],[83,12,50,7,"list"],[83,16,50,11],[83,17,50,12,"value"],[83,22,50,7],[83,25,50,20,"_list"],[83,30,50,25],[83,31,50,26,"value"],[83,36,50,3],[83,38,50,33],[83,45,50,40],[83,46,50,33],[84,0,51,3],[84,12,51,7,"list"],[84,16,51,11],[84,17,51,12,"value"],[84,22,51,7],[84,27,51,22,"_list"],[84,32,51,27],[84,33,51,28,"value"],[84,38,51,7],[84,42,51,37,"list"],[84,46,51,41],[84,47,51,42,"prevIndex"],[84,56,51,37],[84,59,51,54,"_list"],[84,64,51,59],[84,65,51,60,"prevIndex"],[84,74,51,3],[84,76,52,4],[84,83,52,11],[84,84,52,4],[84,85,51,3],[84,90,53,8],[84,97,53,15],[84,98,53,16],[84,99,53,8],[85,0,54,3],[85,7,49,28],[85,8,49,2],[87,0,48,39],[87,33,55,13,"i"],[87,34,48,39],[88,0,56,3],[88,12,57,4,"newTransitionList"],[88,29,57,21],[88,30,57,22,"i"],[88,31,57,21],[88,32,57,4],[88,33,57,25,"value"],[88,38,57,4],[88,41,58,4,"props"],[88,46,58,9],[88,47,58,10,"newList"],[88,54,58,4],[88,55,58,18,"find"],[88,59,58,4],[88,60,59,5],[88,70,59,5,"list"],[88,74,59,9],[89,0,59,9],[89,17,59,13,"list"],[89,21,59,17],[89,22,59,18,"text"],[89,26,59,13],[89,31,59,27,"newTransitionList"],[89,48,59,44],[89,49,59,45,"i"],[89,50,59,44],[89,51,59,27],[89,52,59,48,"text"],[89,56,59,9],[90,0,59,9],[90,9,58,4],[90,11,60,6,"value"],[90,16,56,3],[90,18,61,5],[91,0,62,4,"newTransitionList"],[91,10,62,4,"newTransitionList"],[91,27,62,21],[91,28,62,22,"i"],[91,29,62,21],[91,30,62,4],[91,31,62,25,"prevValue"],[91,40,62,4],[91,43,62,37,"newTransitionList"],[91,60,62,54],[91,61,62,55,"i"],[91,62,62,54],[91,63,62,37],[91,64,62,58,"value"],[91,69,62,4],[92,0,63,4,"newTransitionList"],[92,10,63,4,"newTransitionList"],[92,27,63,21],[92,28,63,22,"i"],[92,29,63,21],[92,30,63,4],[92,31,63,25,"value"],[92,36,63,4],[92,40,63,34],[92,41,63,4],[93,0,64,4,"changed"],[93,10,64,4,"changed"],[93,17,64,11],[93,20,64,14],[93,24,64,4],[94,0,65,4],[95,0,48,39],[97,0,55,2],[97,11,55,7],[97,15,55,13,"i"],[97,16,55,2],[97,20,55,18,"newTransitionList"],[97,37,55,2],[97,39,55,37],[98,0,55,37],[98,14,55,13,"i"],[98,15,55,37],[99,0,66,3],[101,0,67,2],[101,10,67,6,"changed"],[101,17,67,2],[101,19,67,15],[102,0,68,3],[102,12,68,9,"listtt"],[102,18,68,15],[102,21,68,18,"newTransitionList"],[102,38,68,35],[102,39,69,5,"map"],[102,42,68,18],[102,43,69,9],[102,53,69,10,"list"],[102,57,69,9],[102,59,69,16,"index"],[102,64,69,9],[103,0,69,9],[103,35,69,32,"list"],[103,39,69,9],[104,0,69,38,"prevIndex"],[104,12,69,38,"prevIndex"],[104,21,69,47],[104,23,69,49,"index"],[105,0,69,9],[106,0,69,9],[106,9,68,18],[106,11,70,5,"sort"],[106,15,68,18],[106,16,70,10],[106,26,70,11,"list"],[106,30,70,10],[106,32,70,17,"_list"],[106,37,70,10],[106,39,70,27],[107,0,71,5],[107,14,71,9,"list"],[107,18,71,13],[107,19,71,14,"value"],[107,24,71,9],[107,27,71,22,"_list"],[107,32,71,27],[107,33,71,28,"value"],[107,38,71,5],[107,40,71,35],[107,47,71,42],[107,48,71,35],[108,0,72,5],[108,14,73,6,"list"],[108,18,73,10],[108,19,73,11,"value"],[108,24,73,6],[108,29,73,21,"_list"],[108,34,73,26],[108,35,73,27,"value"],[108,40,73,6],[108,44,74,6,"list"],[108,48,74,10],[108,49,74,11,"prevIndex"],[108,58,74,6],[108,61,74,23,"_list"],[108,66,74,28],[108,67,74,29,"prevIndex"],[108,76,72,5],[108,78,76,6],[108,85,76,13],[108,86,76,6],[108,87,72,5],[108,92,77,10],[108,99,77,17],[108,100,77,18],[108,101,77,10],[109,0,78,5],[109,9,68,18],[109,10,68,3],[110,0,79,3,"setTransitionList"],[110,8,79,3,"setTransitionList"],[110,25,79,20],[110,26,79,21,"listtt"],[110,32,79,20],[110,33,79,3],[112,0,80,3,"Animated"],[112,30,80,12,"timing"],[112,36,80,3],[112,37,80,19,"animatedTranslateValue"],[112,59,80,3],[112,61,80,43],[113,0,81,4,"toValue"],[113,10,81,4,"toValue"],[113,17,81,11],[113,19,81,13],[113,20,80,43],[114,0,82,4,"duration"],[114,10,82,4,"duration"],[114,18,82,12],[114,20,82,14],[115,0,80,43],[115,9,80,3],[115,11,83,6,"start"],[115,16,80,3],[115,17,83,12],[116,0,83,12],[116,17,84,4,"Animated"],[116,39,84,13,"timing"],[116,45,84,4],[116,46,84,20,"animatedTranslateValue"],[116,68,84,4],[116,70,84,44],[117,0,85,5,"toValue"],[117,12,85,5,"toValue"],[117,19,85,12],[117,21,85,14],[117,22,84,44],[118,0,86,5,"duration"],[118,12,86,5,"duration"],[118,20,86,13],[118,22,86,15],[119,0,84,44],[119,11,84,4],[119,13,87,7,"start"],[119,18,84,4],[119,19,87,13],[119,31,87,19],[120,0,88,5],[120,16,88,9,"changed"],[120,23,88,5],[120,25,88,18],[121,0,89,6,"startScaleAnimation"],[121,14,89,6,"startScaleAnimation"],[121,33,89,25],[121,34,89,26],[121,39,89,25],[121,40,89,6],[122,0,90,6],[123,0,91,5],[123,11,84,4],[123,12,83,12],[124,0,83,12],[124,9,80,3],[125,0,93,3],[126,0,94,2],[128,0,96,1],[128,13,96,10,"getTranslation"],[128,27,96,1],[128,28,96,25,"index"],[128,33,96,1],[128,35,96,32,"prevIndex"],[128,44,96,1],[128,46,96,43],[129,0,97,2],[129,10,97,6,"index"],[129,15,97,11],[129,18,97,14,"prevIndex"],[129,27,97,2],[129,29,97,25],[130,0,98,3],[130,15,98,10],[130,16,99,4],[131,0,100,5,"translateY"],[131,10,100,5,"translateY"],[131,20,100,15],[131,22,100,17,"animatedTranslateValue"],[131,44,100,39],[131,45,100,40,"interpolate"],[131,56,100,17],[131,57,100,52],[132,0,101,6,"inputRange"],[132,12,101,6,"inputRange"],[132,22,101,16],[132,24,101,18],[132,25,101,19],[132,26,101,18],[132,28,101,22],[132,29,101,18],[132,30,100,52],[133,0,102,6,"outputRange"],[133,12,102,6,"outputRange"],[133,23,102,17],[133,25,102,19],[133,26,102,20],[133,27,102,19],[133,29,102,23],[133,30,102,24,"height"],[133,36,102,23],[133,40,102,34,"prevIndex"],[133,49,102,43],[133,52,102,46,"index"],[133,57,102,23],[133,58,102,19],[134,0,100,52],[134,11,100,17],[135,0,99,4],[135,9,98,10],[135,10,98,3],[136,0,106,3],[138,0,107,2],[138,10,107,6,"index"],[138,15,107,11],[138,18,107,14,"prevIndex"],[138,27,107,2],[138,29,107,25],[139,0,108,3],[139,15,108,10],[139,16,109,4],[140,0,110,5,"translateY"],[140,10,110,5,"translateY"],[140,20,110,15],[140,22,110,17,"animatedTranslateValue"],[140,44,110,39],[140,45,110,40,"interpolate"],[140,56,110,17],[140,57,110,52],[141,0,111,6,"inputRange"],[141,12,111,6,"inputRange"],[141,22,111,16],[141,24,111,18],[141,25,111,19],[141,26,111,18],[141,28,111,22],[141,29,111,18],[141,30,110,52],[142,0,112,6,"outputRange"],[142,12,112,6,"outputRange"],[142,23,112,17],[142,25,112,19],[142,26,112,20],[142,27,112,19],[142,29,112,23,"height"],[142,35,112,29],[142,39,112,33,"index"],[142,44,112,38],[142,47,112,41,"prevIndex"],[142,56,112,29],[142,57,112,19],[143,0,110,52],[143,11,110,17],[144,0,109,4],[144,9,108,10],[144,10,108,3],[145,0,116,3],[147,0,117,2],[148,0,118,2],[150,0,120,1],[150,13,120,10,"getAnimatedWidth"],[150,29,120,1],[150,30,120,27,"prevValue"],[150,39,120,1],[150,41,120,38,"value"],[150,46,120,1],[150,48,120,45],[151,0,121,2],[151,10,121,6,"prevValue"],[151,19,121,15],[151,24,121,20,"value"],[151,29,121,2],[151,31,121,27],[151,38,121,34,"value"],[151,43,121,39],[151,46,121,42],[151,48,121,27],[152,0,122,2],[152,13,122,9,"animatedTranslateValue"],[152,35,122,31],[152,36,122,32,"interpolate"],[152,47,122,9],[152,48,122,44],[153,0,123,3,"inputRange"],[153,8,123,3,"inputRange"],[153,18,123,13],[153,20,123,15],[153,21,123,16],[153,22,123,15],[153,24,123,19],[153,25,123,15],[153,26,122,44],[154,0,124,3,"outputRange"],[154,8,124,3,"outputRange"],[154,19,124,14],[154,21,124,16],[154,22,124,17,"prevValue"],[154,31,124,26],[154,34,124,29],[154,36,124,16],[154,38,124,33,"value"],[154,43,124,38],[154,46,124,41],[154,48,124,16],[155,0,122,44],[155,7,122,9],[155,8,122,2],[156,0,126,2],[158,0,128,1],[158,13,128,10,"getWidth"],[158,21,128,1],[158,24,128,21],[159,0,129,2],[159,13,129,9],[159,15,129,2],[160,0,130,2],[162,0,131,1],[162,11,132,2],[162,40,132,3],[162,57,132,2],[163,0,133,3],[163,6,133,3],[163,11,133,8],[163,13,133,10],[164,0,134,4,"marginTop"],[164,8,134,4,"marginTop"],[164,17,134,13],[164,19,134,15],[164,22,133,10],[165,0,135,4,"position"],[165,8,135,4,"position"],[165,16,135,12],[165,18,135,14],[165,28,133,10],[166,0,136,4,"left"],[166,8,136,4,"left"],[166,12,136,8],[166,14,136,10],[166,16,133,10],[167,0,137,4,"top"],[167,8,137,4,"top"],[167,11,137,7],[167,13,137,9],[168,0,133,10],[168,7,132,2],[169,0,132,2],[170,0,132,2],[171,0,132,2],[172,0,132,2],[173,0,132,2],[173,7,140,4,"console"],[173,14,140,11],[173,15,140,12,"log"],[173,18,140,4],[173,19,140,16,"transitionList"],[173,33,140,4],[173,34,132,2],[173,36,141,4,"transitionList"],[173,50,141,18],[173,51,142,5,"sort"],[173,55,141,4],[173,56,142,10],[173,66,142,11,"list"],[173,70,142,10],[173,72,142,17,"_list"],[173,77,142,10],[173,79,142,27],[174,0,143,5],[174,10,143,9,"list"],[174,14,143,13],[174,15,143,14,"value"],[174,20,143,9],[174,23,143,22,"_list"],[174,28,143,27],[174,29,143,28,"value"],[174,34,143,5],[174,36,143,35],[174,43,143,42],[174,44,143,35],[175,0,144,5],[175,10,145,6,"list"],[175,14,145,10],[175,15,145,11,"value"],[175,20,145,6],[175,25,145,21,"_list"],[175,30,145,26],[175,31,145,27,"value"],[175,36,145,6],[175,40,146,6,"list"],[175,44,146,10],[175,45,146,11,"prevIndex"],[175,54,146,6],[175,57,146,23,"_list"],[175,62,146,28],[175,63,146,29,"prevIndex"],[175,72,144,5],[175,74,148,6],[175,81,148,13],[175,82,148,6],[175,83,144,5],[175,88,149,10],[175,95,149,17],[175,96,149,18],[175,97,149,10],[176,0,150,5],[176,5,141,4],[176,7,151,5,"map"],[176,10,141,4],[176,11,151,9],[176,21,151,10,"list"],[176,25,151,9],[176,27,151,16,"index"],[176,32,151,9],[177,0,151,9],[177,13,152,5],[177,42,152,6],[177,63,152,5],[177,64,152,15],[177,68,152,5],[178,0,153,6],[178,8,153,6],[178,11,153,9],[178,13,153,11,"index"],[178,18,152,5],[179,0,154,6],[179,8,154,6],[179,13,154,11],[179,15,154,13],[180,0,155,7,"width"],[180,10,155,7,"width"],[180,15,155,12],[180,17,155,14,"getWidth"],[180,25,155,22],[180,27,154,13],[181,0,156,7,"height"],[181,10,156,7,"height"],[181,16,156,13],[181,18,156,15,"height"],[181,24,154,13],[182,0,157,7,"position"],[182,10,157,7,"position"],[182,18,157,15],[182,20,157,17],[182,30,154,13],[183,0,158,7,"top"],[183,10,158,7,"top"],[183,13,158,10],[183,15,159,8,"height"],[183,21,159,14],[183,25,159,18,"list"],[183,29,159,22],[183,30,159,23,"prevIndex"],[183,39,159,18],[183,42,159,35],[183,43,159,14],[183,44,159,8],[183,48,160,8,"height"],[183,54,160,14],[183,58,160,18,"index"],[183,63,160,23],[183,66,160,26],[183,67,160,14],[183,68,154,13],[184,0,161,7,"backgroundColor"],[184,10,161,7,"backgroundColor"],[184,25,161,22],[184,27,161,24,"list"],[184,31,161,28],[184,32,161,29,"color"],[184,37,154,13],[185,0,162,7,"transform"],[185,10,162,7,"transform"],[185,19,162,16],[185,21,162,18,"getTranslation"],[185,35,162,32],[185,36,162,33,"index"],[185,41,162,32],[185,43,162,40,"list"],[185,47,162,44],[185,48,162,45,"prevIndex"],[185,57,162,32],[186,0,154,13],[186,9,152,5],[187,0,152,5],[188,0,152,5],[189,0,152,5],[190,0,152,5],[191,0,152,5],[191,9,165,6],[191,38,165,7],[191,55,165,6],[192,0,165,6],[193,0,165,6],[194,0,165,6],[195,0,165,6],[196,0,165,6],[196,9,166,8,"list"],[196,13,166,12],[196,14,166,13,"text"],[196,18,165,6],[196,25,166,20,"list"],[196,29,166,24],[196,30,166,25,"value"],[196,35,165,6],[196,36,152,5],[196,37,151,9],[197,0,151,9],[197,5,141,4],[197,6,132,2],[197,8,170,3],[197,37,170,4],[197,66,170,3],[198,0,171,4],[198,6,171,4],[198,11,171,9],[198,13,171,11],[199,0,171,13,"top"],[199,8,171,13,"top"],[199,11,171,16],[199,13,171,18],[200,0,171,11],[200,7,170,3],[201,0,172,4],[201,6,172,4],[201,13,172,11],[201,15,172,13],[202,0,172,13],[202,15,172,19,"startScaleAnimation"],[202,34,172,38],[202,35,172,39],[202,40,172,38],[202,41,172,13],[203,0,172,13],[203,7,170,3],[204,0,170,3],[205,0,170,3],[206,0,170,3],[207,0,170,3],[208,0,170,3],[208,7,174,4],[208,36,174,5],[208,53,174,4],[209,0,174,4],[210,0,174,4],[211,0,174,4],[212,0,174,4],[213,0,174,4],[213,18,170,3],[213,19,132,2],[213,20,131,1],[214,0,178,1],[216,5,29,24,"ConnexionScreen"],[216,20],[218,7,29,24,"ConnexionScreen"],[218,22]],"functionMap":{"names":["<global>","ConnexionScreen","props.oldList.sort$argument_0","useEffect$argument_0","transitionList.map$argument_0","startScaleAnimation","transitionList.sort$argument_0","props.newList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","getAnimatedWidth","getWidth","transitionList.sort.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;qBCI;GDE;WEI;+CCC;IDI;EFE;CIE;gDCC;GDK;KEK,+CF;SGU,gDH;UIC;KJQ;YKK;MLQ;EJG;CUE;EVsB;CWE;EXM;CYE;EZE;UKY;KLQ;SaC;KbkB;acG,gCd;CDM"}},"type":"js/module"}]}