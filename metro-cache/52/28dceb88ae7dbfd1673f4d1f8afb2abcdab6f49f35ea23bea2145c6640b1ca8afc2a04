{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = DynamicList;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Components/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var oldList = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 3,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var newList = [{\n    value: 14,\n    text: \"Felix\"\n  }, {\n    value: 11,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function DynamicList(props) {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(oldList.sort(function (list, _list) {\n      if (list.value > _list.value) return 1;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var height = 50;\n    (0, _react.useEffect)(function () {\n      var newTransitionList = transitionList.map(function (list, index) {\n        return _objectSpread({}, list, {\n          prevIndex: index\n        });\n      });\n      setTransitionList(newTransitionList);\n    }, []);\n\n    function startScaleAnimation(changed) {\n      var newTransitionList = transitionList.sort(function (list, _list) {\n        if (list.value < _list.value) return 1;\n        if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n      });\n\n      var _loop = function _loop(i) {\n        if (newTransitionList[i].value < newList.find(function (list) {\n          return list.text === newTransitionList[i].text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          changed = true;\n        }\n      };\n\n      for (var i in newTransitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        var listtt = newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          if (list.value < _list.value) return 1;\n          if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n        });\n        setTransitionList(listtt);\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          duration: 500\n        }).start(function () {\n          return _reactNative.Animated.timing(animatedTranslateValue, {\n            toValue: 0,\n            duration: 1\n          }).start(function () {\n            if (changed) {\n              startScaleAnimation(false);\n            }\n          });\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -height * (prevIndex - index)]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, height * (index - prevIndex)]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    if (props.open) return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100,\n        marginLeft: 100,\n        width: \"80%\",\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      }\n    }, transitionList.sort(function (list, _list) {\n      if (list.value < _list.value) return 1;\n      if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n    }).map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: 80,\n          height: height,\n          position: \"absolute\",\n          top: height * (list.prevIndex + 1) || height * (index + 1),\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: {\n        top: 300\n      },\n      onPress: function onPress() {\n        return startScaleAnimation(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      }\n    }, \"staffrt \")));else return null;\n  }\n\n  _s(DynamicList, \"SUl9/G+n6jHNJecXWVwxftMRMd0=\");\n\n  _c = DynamicList;\n\n  var _c;\n\n  $RefreshReg$(_c, \"DynamicList\");\n});","lineCount":209,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"oldList"],[28,13,18,13],[28,16,18,16],[28,17,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,16],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,16],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,16],[40,4,18,0],[41,0,23,0],[41,6,23,6,"newList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,13,24,1],[43,0,24,14,"text"],[43,4,24,14,"text"],[43,8,24,18],[43,10,24,20],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,13,25,1],[46,0,25,14,"text"],[46,4,25,14,"text"],[46,8,25,18],[46,10,25,20],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"DynamicList"],[52,22,29,15],[52,23,29,36,"props"],[52,28,29,15],[52,30,29,43],[53,0,29,43],[55,0,29,43],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,43],[56,0,29,43],[57,0,29,43],[57,8,30,8,"animatedValue"],[57,21,29,43],[59,0,29,43],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,43],[60,0,29,43],[61,0,29,43],[61,8,31,8,"animatedTranslateValue"],[61,30,29,43],[63,0,29,43],[63,21,32,45],[63,42,33,2,"oldList"],[63,49,33,9],[63,50,33,10,"sort"],[63,54,33,2],[63,55,33,15],[63,65,33,16,"list"],[63,69,33,15],[63,71,33,22,"_list"],[63,76,33,15],[63,78,33,32],[64,0,34,3],[64,10,34,7,"list"],[64,14,34,11],[64,15,34,12,"value"],[64,20,34,7],[64,23,34,20,"_list"],[64,28,34,25],[64,29,34,26,"value"],[64,34,34,3],[64,36,34,33],[64,43,34,40],[64,44,34,33],[65,0,35,3],[65,5,33,2],[65,6,32,45],[65,7,29,43],[66,0,29,43],[67,0,29,43],[67,8,32,8,"transitionList"],[67,22,29,43],[68,0,29,43],[68,8,32,24,"setTransitionList"],[68,25,29,43],[70,0,38,1],[70,8,38,7,"height"],[70,14,38,13],[70,17,38,16],[70,19,38,1],[71,0,39,1],[71,26,39,11],[71,38,39,17],[72,0,40,2],[72,10,40,8,"newTransitionList"],[72,27,40,25],[72,30,40,28,"transitionList"],[72,44,40,42],[72,45,40,43,"map"],[72,48,40,28],[72,49,40,47],[72,59,40,48,"list"],[72,63,40,47],[72,65,40,54,"index"],[72,70,40,47],[73,0,40,47],[73,33,41,6,"list"],[73,37,40,47],[74,0,42,3,"prevIndex"],[74,10,42,3,"prevIndex"],[74,19,42,12],[74,21,42,14,"index"],[75,0,40,47],[76,0,40,47],[76,7,40,28],[76,8,40,2],[77,0,44,2,"setTransitionList"],[77,6,44,2,"setTransitionList"],[77,23,44,19],[77,24,44,20,"newTransitionList"],[77,41,44,19],[77,42,44,2],[78,0,45,2],[78,5,39,1],[78,7,45,4],[78,9,39,1],[80,0,47,1],[80,13,47,10,"startScaleAnimation"],[80,32,47,1],[80,33,47,30,"changed"],[80,40,47,1],[80,42,47,39],[81,0,48,2],[81,10,48,8,"newTransitionList"],[81,27,48,25],[81,30,48,28,"transitionList"],[81,44,48,42],[81,45,48,43,"sort"],[81,49,48,28],[81,50,48,48],[81,60,48,49,"list"],[81,64,48,48],[81,66,48,55,"_list"],[81,71,48,48],[81,73,48,65],[82,0,49,3],[82,12,49,7,"list"],[82,16,49,11],[82,17,49,12,"value"],[82,22,49,7],[82,25,49,20,"_list"],[82,30,49,25],[82,31,49,26,"value"],[82,36,49,3],[82,38,49,33],[82,45,49,40],[82,46,49,33],[83,0,50,3],[83,12,50,7,"list"],[83,16,50,11],[83,17,50,12,"value"],[83,22,50,7],[83,27,50,22,"_list"],[83,32,50,27],[83,33,50,28,"value"],[83,38,50,7],[83,42,50,37,"list"],[83,46,50,41],[83,47,50,42,"prevIndex"],[83,56,50,37],[83,59,50,54,"_list"],[83,64,50,59],[83,65,50,60,"prevIndex"],[83,74,50,3],[83,76,51,4],[83,83,51,11],[83,84,51,4],[83,85,50,3],[83,90,52,8],[83,97,52,15],[83,98,52,16],[83,99,52,8],[84,0,53,3],[84,7,48,28],[84,8,48,2],[86,0,47,39],[86,33,54,13,"i"],[86,34,47,39],[87,0,55,3],[87,12,56,4,"newTransitionList"],[87,29,56,21],[87,30,56,22,"i"],[87,31,56,21],[87,32,56,4],[87,33,56,25,"value"],[87,38,56,4],[87,41,57,4,"newList"],[87,48,57,11],[87,49,57,12,"find"],[87,53,57,4],[87,54,57,17],[87,64,57,17,"list"],[87,68,57,21],[88,0,57,21],[88,17,57,25,"list"],[88,21,57,29],[88,22,57,30,"text"],[88,26,57,25],[88,31,57,39,"newTransitionList"],[88,48,57,56],[88,49,57,57,"i"],[88,50,57,56],[88,51,57,39],[88,52,57,60,"text"],[88,56,57,21],[89,0,57,21],[89,9,57,4],[89,11,58,6,"value"],[89,16,55,3],[89,18,59,5],[90,0,60,4,"newTransitionList"],[90,10,60,4,"newTransitionList"],[90,27,60,21],[90,28,60,22,"i"],[90,29,60,21],[90,30,60,4],[90,31,60,25,"value"],[90,36,60,4],[90,40,60,34],[90,41,60,4],[91,0,61,4,"changed"],[91,10,61,4,"changed"],[91,17,61,11],[91,20,61,14],[91,24,61,4],[92,0,62,4],[93,0,47,39],[95,0,54,2],[95,11,54,7],[95,15,54,13,"i"],[95,16,54,2],[95,20,54,18,"newTransitionList"],[95,37,54,2],[95,39,54,37],[96,0,54,37],[96,14,54,13,"i"],[96,15,54,37],[97,0,63,3],[99,0,64,2],[99,10,64,6,"changed"],[99,17,64,2],[99,19,64,15],[100,0,65,3],[100,12,65,9,"listtt"],[100,18,65,15],[100,21,65,18,"newTransitionList"],[100,38,65,35],[100,39,66,5,"map"],[100,42,65,18],[100,43,66,9],[100,53,66,10,"list"],[100,57,66,9],[100,59,66,16,"index"],[100,64,66,9],[101,0,66,9],[101,35,66,32,"list"],[101,39,66,9],[102,0,66,38,"prevIndex"],[102,12,66,38,"prevIndex"],[102,21,66,47],[102,23,66,49,"index"],[103,0,66,9],[104,0,66,9],[104,9,65,18],[104,11,67,5,"sort"],[104,15,65,18],[104,16,67,10],[104,26,67,11,"list"],[104,30,67,10],[104,32,67,17,"_list"],[104,37,67,10],[104,39,67,27],[105,0,68,5],[105,14,68,9,"list"],[105,18,68,13],[105,19,68,14,"value"],[105,24,68,9],[105,27,68,22,"_list"],[105,32,68,27],[105,33,68,28,"value"],[105,38,68,5],[105,40,68,35],[105,47,68,42],[105,48,68,35],[106,0,69,5],[106,14,70,6,"list"],[106,18,70,10],[106,19,70,11,"value"],[106,24,70,6],[106,29,70,21,"_list"],[106,34,70,26],[106,35,70,27,"value"],[106,40,70,6],[106,44,71,6,"list"],[106,48,71,10],[106,49,71,11,"prevIndex"],[106,58,71,6],[106,61,71,23,"_list"],[106,66,71,28],[106,67,71,29,"prevIndex"],[106,76,69,5],[106,78,73,6],[106,85,73,13],[106,86,73,6],[106,87,69,5],[106,92,74,10],[106,99,74,17],[106,100,74,18],[106,101,74,10],[107,0,75,5],[107,9,65,18],[107,10,65,3],[108,0,76,3,"setTransitionList"],[108,8,76,3,"setTransitionList"],[108,25,76,20],[108,26,76,21,"listtt"],[108,32,76,20],[108,33,76,3],[110,0,77,3,"Animated"],[110,30,77,12,"timing"],[110,36,77,3],[110,37,77,19,"animatedTranslateValue"],[110,59,77,3],[110,61,77,43],[111,0,78,4,"toValue"],[111,10,78,4,"toValue"],[111,17,78,11],[111,19,78,13],[111,20,77,43],[112,0,79,4,"duration"],[112,10,79,4,"duration"],[112,18,79,12],[112,20,79,14],[113,0,77,43],[113,9,77,3],[113,11,80,6,"start"],[113,16,77,3],[113,17,80,12],[114,0,80,12],[114,17,81,4,"Animated"],[114,39,81,13,"timing"],[114,45,81,4],[114,46,81,20,"animatedTranslateValue"],[114,68,81,4],[114,70,81,44],[115,0,82,5,"toValue"],[115,12,82,5,"toValue"],[115,19,82,12],[115,21,82,14],[115,22,81,44],[116,0,83,5,"duration"],[116,12,83,5,"duration"],[116,20,83,13],[116,22,83,15],[117,0,81,44],[117,11,81,4],[117,13,84,7,"start"],[117,18,81,4],[117,19,84,13],[117,31,84,19],[118,0,85,5],[118,16,85,9,"changed"],[118,23,85,5],[118,25,85,18],[119,0,86,6,"startScaleAnimation"],[119,14,86,6,"startScaleAnimation"],[119,33,86,25],[119,34,86,26],[119,39,86,25],[119,40,86,6],[120,0,87,6],[121,0,88,5],[121,11,81,4],[121,12,80,12],[122,0,80,12],[122,9,77,3],[123,0,90,3],[124,0,91,2],[126,0,93,1],[126,13,93,10,"getTranslation"],[126,27,93,1],[126,28,93,25,"index"],[126,33,93,1],[126,35,93,32,"prevIndex"],[126,44,93,1],[126,46,93,43],[127,0,94,2],[127,10,94,6,"index"],[127,15,94,11],[127,18,94,14,"prevIndex"],[127,27,94,2],[127,29,94,25],[128,0,95,3],[128,15,95,10],[128,16,96,4],[129,0,97,5,"translateY"],[129,10,97,5,"translateY"],[129,20,97,15],[129,22,97,17,"animatedTranslateValue"],[129,44,97,39],[129,45,97,40,"interpolate"],[129,56,97,17],[129,57,97,52],[130,0,98,6,"inputRange"],[130,12,98,6,"inputRange"],[130,22,98,16],[130,24,98,18],[130,25,98,19],[130,26,98,18],[130,28,98,22],[130,29,98,18],[130,30,97,52],[131,0,99,6,"outputRange"],[131,12,99,6,"outputRange"],[131,23,99,17],[131,25,99,19],[131,26,99,20],[131,27,99,19],[131,29,99,23],[131,30,99,24,"height"],[131,36,99,23],[131,40,99,34,"prevIndex"],[131,49,99,43],[131,52,99,46,"index"],[131,57,99,23],[131,58,99,19],[132,0,97,52],[132,11,97,17],[133,0,96,4],[133,9,95,10],[133,10,95,3],[134,0,103,3],[136,0,104,2],[136,10,104,6,"index"],[136,15,104,11],[136,18,104,14,"prevIndex"],[136,27,104,2],[136,29,104,25],[137,0,105,3],[137,15,105,10],[137,16,106,4],[138,0,107,5,"translateY"],[138,10,107,5,"translateY"],[138,20,107,15],[138,22,107,17,"animatedTranslateValue"],[138,44,107,39],[138,45,107,40,"interpolate"],[138,56,107,17],[138,57,107,52],[139,0,108,6,"inputRange"],[139,12,108,6,"inputRange"],[139,22,108,16],[139,24,108,18],[139,25,108,19],[139,26,108,18],[139,28,108,22],[139,29,108,18],[139,30,107,52],[140,0,109,6,"outputRange"],[140,12,109,6,"outputRange"],[140,23,109,17],[140,25,109,19],[140,26,109,20],[140,27,109,19],[140,29,109,23,"height"],[140,35,109,29],[140,39,109,33,"index"],[140,44,109,38],[140,47,109,41,"prevIndex"],[140,56,109,29],[140,57,109,19],[141,0,107,52],[141,11,107,17],[142,0,106,4],[142,9,105,10],[142,10,105,3],[143,0,113,3],[145,0,114,2],[146,0,115,2],[148,0,117,1],[148,8,117,5,"props"],[148,13,117,10],[148,14,117,11,"open"],[148,18,117,1],[148,20,118,2],[148,27,119,3],[148,56,119,4],[148,73,119,3],[149,0,120,4],[149,6,120,4],[149,11,120,9],[149,13,120,11],[150,0,121,5,"marginTop"],[150,8,121,5,"marginTop"],[150,17,121,14],[150,19,121,16],[150,22,120,11],[151,0,122,5,"marginLeft"],[151,8,122,5,"marginLeft"],[151,18,122,15],[151,20,122,17],[151,23,120,11],[152,0,123,5,"width"],[152,8,123,5,"width"],[152,13,123,10],[152,15,123,12],[152,20,120,11],[153,0,124,5,"height"],[153,8,124,5,"height"],[153,14,124,11],[153,16,124,13],[154,0,120,11],[154,7,119,3],[155,0,119,3],[156,0,119,3],[157,0,119,3],[158,0,119,3],[159,0,119,3],[159,7,127,5,"transitionList"],[159,21,127,19],[159,22,128,6,"sort"],[159,26,127,5],[159,27,128,11],[159,37,128,12,"list"],[159,41,128,11],[159,43,128,18,"_list"],[159,48,128,11],[159,50,128,28],[160,0,129,6],[160,10,129,10,"list"],[160,14,129,14],[160,15,129,15,"value"],[160,20,129,10],[160,23,129,23,"_list"],[160,28,129,28],[160,29,129,29,"value"],[160,34,129,6],[160,36,129,36],[160,43,129,43],[160,44,129,36],[161,0,130,6],[161,10,131,7,"list"],[161,14,131,11],[161,15,131,12,"value"],[161,20,131,7],[161,25,131,22,"_list"],[161,30,131,27],[161,31,131,28,"value"],[161,36,131,7],[161,40,132,7,"list"],[161,44,132,11],[161,45,132,12,"prevIndex"],[161,54,132,7],[161,57,132,24,"_list"],[161,62,132,29],[161,63,132,30,"prevIndex"],[161,72,130,6],[161,74,134,7],[161,81,134,14],[161,82,134,7],[161,83,130,6],[161,88,135,11],[161,95,135,18],[161,96,135,19],[161,97,135,11],[162,0,136,6],[162,5,127,5],[162,7,137,6,"map"],[162,10,127,5],[162,11,137,10],[162,21,137,11,"list"],[162,25,137,10],[162,27,137,17,"index"],[162,32,137,10],[163,0,137,10],[163,13,138,6],[163,42,138,7],[163,63,138,6],[163,64,138,16],[163,68,138,6],[164,0,139,7],[164,8,139,7],[164,11,139,10],[164,13,139,12,"index"],[164,18,138,6],[165,0,140,7],[165,8,140,7],[165,13,140,12],[165,15,140,14],[166,0,141,8,"width"],[166,10,141,8,"width"],[166,15,141,13],[166,17,141,15],[166,19,140,14],[167,0,142,8,"height"],[167,10,142,8,"height"],[167,16,142,14],[167,18,142,16,"height"],[167,24,140,14],[168,0,143,8,"position"],[168,10,143,8,"position"],[168,18,143,16],[168,20,143,18],[168,30,140,14],[169,0,144,8,"top"],[169,10,144,8,"top"],[169,13,144,11],[169,15,145,9,"height"],[169,21,145,15],[169,25,145,19,"list"],[169,29,145,23],[169,30,145,24,"prevIndex"],[169,39,145,19],[169,42,145,36],[169,43,145,15],[169,44,145,9],[169,48,146,9,"height"],[169,54,146,15],[169,58,146,19,"index"],[169,63,146,24],[169,66,146,27],[169,67,146,15],[169,68,140,14],[170,0,147,8,"backgroundColor"],[170,10,147,8,"backgroundColor"],[170,25,147,23],[170,27,147,25,"list"],[170,31,147,29],[170,32,147,30,"color"],[170,37,140,14],[171,0,148,8,"transform"],[171,10,148,8,"transform"],[171,19,148,17],[171,21,148,19,"getTranslation"],[171,35,148,33],[171,36,148,34,"index"],[171,41,148,33],[171,43,148,41,"list"],[171,47,148,45],[171,48,148,46,"prevIndex"],[171,57,148,33],[172,0,140,14],[172,9,138,6],[173,0,138,6],[174,0,138,6],[175,0,138,6],[176,0,138,6],[177,0,138,6],[177,9,151,7],[177,38,151,8],[177,55,151,7],[178,0,151,7],[179,0,151,7],[180,0,151,7],[181,0,151,7],[182,0,151,7],[182,9,152,9,"list"],[182,13,152,13],[182,14,152,14,"text"],[182,18,151,7],[182,25,152,21,"list"],[182,29,152,25],[182,30,152,26,"value"],[182,35,151,7],[182,36,138,6],[182,37,137,10],[183,0,137,10],[183,5,127,5],[183,6,119,3],[183,8,156,4],[183,37,156,5],[183,66,156,4],[184,0,157,5],[184,6,157,5],[184,11,157,10],[184,13,157,12],[185,0,157,14,"top"],[185,8,157,14,"top"],[185,11,157,17],[185,13,157,19],[186,0,157,12],[186,7,156,4],[187,0,158,5],[187,6,158,5],[187,13,158,12],[187,15,158,14],[188,0,158,14],[188,15,158,20,"startScaleAnimation"],[188,34,158,39],[188,35,158,40],[188,40,158,39],[188,41,158,14],[189,0,158,14],[189,7,156,4],[190,0,156,4],[191,0,156,4],[192,0,156,4],[193,0,156,4],[194,0,156,4],[194,7,160,5],[194,36,160,6],[194,53,160,5],[195,0,160,5],[196,0,160,5],[197,0,160,5],[198,0,160,5],[199,0,160,5],[199,18,156,4],[199,19,119,3],[199,20,118,2],[199,21,117,1],[199,26,164,6],[199,33,164,13],[199,37,164,6],[200,0,165,1],[202,5,29,24,"DynamicList"],[202,16],[204,7,29,24,"DynamicList"],[204,18]],"functionMap":{"names":["<global>","DynamicList","oldList.sort$argument_0","useEffect$argument_0","transitionList.map$argument_0","startScaleAnimation","transitionList.sort$argument_0","newList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.sort.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;eCI;GDE;WEI;+CCC;IDG;EFE;CIE;gDCC;GDK;iBEI,+CF;SGS,gDH;UIC;KJQ;YKK;MLQ;EJG;CUE;EVsB;WKa;MLQ;UWC;MXkB;cYG,gCZ;CDO"}},"type":"js/module"}]}