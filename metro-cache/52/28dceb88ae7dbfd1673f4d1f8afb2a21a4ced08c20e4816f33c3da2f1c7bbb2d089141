{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Components/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 3,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var NewList = [{\n    value: 14,\n    text: \"Felix\"\n  }, {\n    value: 11,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen(props) {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n        animatedValue = _useState2[0],\n        setAnimatedValue = _useState2[1];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(props.oldList.sort(function (list, _list) {\n      if (list.value > _list.value) return 1;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var height = 50;\n    (0, _react.useEffect)(function () {\n      var newTransitionList = transitionList.map(function (list, index) {\n        return _objectSpread({}, list, {\n          prevIndex: index,\n          prevValue: list.value\n        });\n      });\n      setTransitionList(newTransitionList);\n    }, []);\n\n    function startScaleAnimation(changed) {\n      setAnimatedValue(0);\n      var newTransitionList = transitionList.sort(function (list, _list) {\n        if (list.value < _list.value) return 1;\n        if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n      });\n\n      var _loop = function _loop(i) {\n        if (newTransitionList[i].value < props.newList.find(function (list) {\n          return list.text === newTransitionList[i].text;\n        }).value) {\n          newTransitionList[i].prevValue = newTransitionList[i].value;\n          newTransitionList[i].value += 1;\n          changed = true;\n        } else {\n          newTransitionList[i].prevValue = newTransitionList[i].value;\n        }\n      };\n\n      for (var i in newTransitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        var listtt = newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          if (list.value < _list.value) return 1;\n          if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n        });\n        setTransitionList(listtt);\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          duration: 500\n        }).start(function () {\n          if (changed) {\n            startScaleAnimation(false);\n          }\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -height * (prevIndex - index)]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, height * (index - prevIndex)]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    function getAnimatedWidth(prevValue, value) {\n      return animatedTranslateValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [prevValue * 10, value * 10]\n      });\n    }\n\n    function getWidth() {\n      return 50;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100,\n        position: \"absolute\",\n        left: 40,\n        top: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      }\n    }, transitionList.sort(function (list, _list) {\n      if (list.value < _list.value) return 1;\n      if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n    }).map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: list.text,\n        style: {\n          width: getAnimatedWidth(list.prevValue || 0, list.value),\n          height: height,\n          position: \"absolute\",\n          top: height * (list.prevIndex + 1) || height * (index + 1),\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: {\n        top: 300\n      },\n      onPress: function onPress() {\n        return startScaleAnimation(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      }\n    }, \"staffrt \")));\n  }\n\n  _s(ConnexionScreen, \"4frQCWt/PwBrZB9Rch5OAGnL+Ec=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":221,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,13],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,13],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,13],[40,4,18,0],[41,0,23,0],[41,6,23,6,"NewList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,13,24,1],[43,0,24,14,"text"],[43,4,24,14,"text"],[43,8,24,18],[43,10,24,20],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,13,25,1],[46,0,25,14,"text"],[46,4,25,14,"text"],[46,8,25,18],[46,10,25,20],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"ConnexionScreen"],[52,26,29,15],[52,27,29,40,"props"],[52,32,29,15],[52,34,29,47],[53,0,29,47],[55,0,29,47],[55,20,30,43],[55,41,30,52],[55,45,30,56,"Animated"],[55,67,30,65,"Value"],[55,72,30,52],[55,73,30,71],[55,74,30,52],[55,75,30,43],[55,76,29,47],[56,0,29,47],[57,0,29,47],[57,8,30,8,"animatedValue"],[57,21,29,47],[58,0,29,47],[58,8,30,23,"setAnimatedValue"],[58,24,29,47],[60,0,29,47],[60,21,31,34],[60,42,31,43],[60,46,31,47,"Animated"],[60,68,31,56,"Value"],[60,73,31,43],[60,74,31,62],[60,75,31,43],[60,76,31,34],[60,77,29,47],[61,0,29,47],[62,0,29,47],[62,8,31,8,"animatedTranslateValue"],[62,30,29,47],[64,0,29,47],[64,21,32,45],[64,42,33,2,"props"],[64,47,33,7],[64,48,33,8,"oldList"],[64,55,33,2],[64,56,33,16,"sort"],[64,60,33,2],[64,61,33,21],[64,71,33,22,"list"],[64,75,33,21],[64,77,33,28,"_list"],[64,82,33,21],[64,84,33,38],[65,0,34,3],[65,10,34,7,"list"],[65,14,34,11],[65,15,34,12,"value"],[65,20,34,7],[65,23,34,20,"_list"],[65,28,34,25],[65,29,34,26,"value"],[65,34,34,3],[65,36,34,33],[65,43,34,40],[65,44,34,33],[66,0,35,3],[66,5,33,2],[66,6,32,45],[66,7,29,47],[67,0,29,47],[68,0,29,47],[68,8,32,8,"transitionList"],[68,22,29,47],[69,0,29,47],[69,8,32,24,"setTransitionList"],[69,25,29,47],[71,0,38,1],[71,8,38,7,"height"],[71,14,38,13],[71,17,38,16],[71,19,38,1],[72,0,39,1],[72,26,39,11],[72,38,39,17],[73,0,40,2],[73,10,40,8,"newTransitionList"],[73,27,40,25],[73,30,40,28,"transitionList"],[73,44,40,42],[73,45,40,43,"map"],[73,48,40,28],[73,49,40,47],[73,59,40,48,"list"],[73,63,40,47],[73,65,40,54,"index"],[73,70,40,47],[74,0,40,47],[74,33,41,6,"list"],[74,37,40,47],[75,0,42,3,"prevIndex"],[75,10,42,3,"prevIndex"],[75,19,42,12],[75,21,42,14,"index"],[75,26,40,47],[76,0,43,3,"prevValue"],[76,10,43,3,"prevValue"],[76,19,43,12],[76,21,43,14,"list"],[76,25,43,18],[76,26,43,19,"value"],[77,0,40,47],[78,0,40,47],[78,7,40,28],[78,8,40,2],[79,0,45,2,"setTransitionList"],[79,6,45,2,"setTransitionList"],[79,23,45,19],[79,24,45,20,"newTransitionList"],[79,41,45,19],[79,42,45,2],[80,0,46,2],[80,5,39,1],[80,7,46,4],[80,9,39,1],[82,0,48,1],[82,13,48,10,"startScaleAnimation"],[82,32,48,1],[82,33,48,30,"changed"],[82,40,48,1],[82,42,48,39],[83,0,49,2,"setAnimatedValue"],[83,6,49,2,"setAnimatedValue"],[83,22,49,18],[83,23,49,19],[83,24,49,18],[83,25,49,2],[84,0,50,2],[84,10,50,8,"newTransitionList"],[84,27,50,25],[84,30,50,28,"transitionList"],[84,44,50,42],[84,45,50,43,"sort"],[84,49,50,28],[84,50,50,48],[84,60,50,49,"list"],[84,64,50,48],[84,66,50,55,"_list"],[84,71,50,48],[84,73,50,65],[85,0,51,3],[85,12,51,7,"list"],[85,16,51,11],[85,17,51,12,"value"],[85,22,51,7],[85,25,51,20,"_list"],[85,30,51,25],[85,31,51,26,"value"],[85,36,51,3],[85,38,51,33],[85,45,51,40],[85,46,51,33],[86,0,52,3],[86,12,52,7,"list"],[86,16,52,11],[86,17,52,12,"value"],[86,22,52,7],[86,27,52,22,"_list"],[86,32,52,27],[86,33,52,28,"value"],[86,38,52,7],[86,42,52,37,"list"],[86,46,52,41],[86,47,52,42,"prevIndex"],[86,56,52,37],[86,59,52,54,"_list"],[86,64,52,59],[86,65,52,60,"prevIndex"],[86,74,52,3],[86,76,53,4],[86,83,53,11],[86,84,53,4],[86,85,52,3],[86,90,54,8],[86,97,54,15],[86,98,54,16],[86,99,54,8],[87,0,55,3],[87,7,50,28],[87,8,50,2],[89,0,48,39],[89,33,56,13,"i"],[89,34,48,39],[90,0,57,3],[90,12,58,4,"newTransitionList"],[90,29,58,21],[90,30,58,22,"i"],[90,31,58,21],[90,32,58,4],[90,33,58,25,"value"],[90,38,58,4],[90,41,59,4,"props"],[90,46,59,9],[90,47,59,10,"newList"],[90,54,59,4],[90,55,59,18,"find"],[90,59,59,4],[90,60,60,5],[90,70,60,5,"list"],[90,74,60,9],[91,0,60,9],[91,17,60,13,"list"],[91,21,60,17],[91,22,60,18,"text"],[91,26,60,13],[91,31,60,27,"newTransitionList"],[91,48,60,44],[91,49,60,45,"i"],[91,50,60,44],[91,51,60,27],[91,52,60,48,"text"],[91,56,60,9],[92,0,60,9],[92,9,59,4],[92,11,61,6,"value"],[92,16,57,3],[92,18,62,5],[93,0,63,4,"newTransitionList"],[93,10,63,4,"newTransitionList"],[93,27,63,21],[93,28,63,22,"i"],[93,29,63,21],[93,30,63,4],[93,31,63,25,"prevValue"],[93,40,63,4],[93,43,63,37,"newTransitionList"],[93,60,63,54],[93,61,63,55,"i"],[93,62,63,54],[93,63,63,37],[93,64,63,58,"value"],[93,69,63,4],[94,0,64,4,"newTransitionList"],[94,10,64,4,"newTransitionList"],[94,27,64,21],[94,28,64,22,"i"],[94,29,64,21],[94,30,64,4],[94,31,64,25,"value"],[94,36,64,4],[94,40,64,34],[94,41,64,4],[95,0,65,4,"changed"],[95,10,65,4,"changed"],[95,17,65,11],[95,20,65,14],[95,24,65,4],[96,0,66,4],[96,9,57,3],[96,15,66,10],[97,0,67,4,"newTransitionList"],[97,10,67,4,"newTransitionList"],[97,27,67,21],[97,28,67,22,"i"],[97,29,67,21],[97,30,67,4],[97,31,67,25,"prevValue"],[97,40,67,4],[97,43,67,37,"newTransitionList"],[97,60,67,54],[97,61,67,55,"i"],[97,62,67,54],[97,63,67,37],[97,64,67,58,"value"],[97,69,67,4],[98,0,68,4],[99,0,48,39],[101,0,56,2],[101,11,56,7],[101,15,56,13,"i"],[101,16,56,2],[101,20,56,18,"newTransitionList"],[101,37,56,2],[101,39,56,37],[102,0,56,37],[102,14,56,13,"i"],[102,15,56,37],[103,0,69,3],[105,0,70,2],[105,10,70,6,"changed"],[105,17,70,2],[105,19,70,15],[106,0,71,3],[106,12,71,9,"listtt"],[106,18,71,15],[106,21,71,18,"newTransitionList"],[106,38,71,35],[106,39,72,5,"map"],[106,42,71,18],[106,43,72,9],[106,53,72,10,"list"],[106,57,72,9],[106,59,72,16,"index"],[106,64,72,9],[107,0,72,9],[107,35,72,32,"list"],[107,39,72,9],[108,0,72,38,"prevIndex"],[108,12,72,38,"prevIndex"],[108,21,72,47],[108,23,72,49,"index"],[109,0,72,9],[110,0,72,9],[110,9,71,18],[110,11,73,5,"sort"],[110,15,71,18],[110,16,73,10],[110,26,73,11,"list"],[110,30,73,10],[110,32,73,17,"_list"],[110,37,73,10],[110,39,73,27],[111,0,74,5],[111,14,74,9,"list"],[111,18,74,13],[111,19,74,14,"value"],[111,24,74,9],[111,27,74,22,"_list"],[111,32,74,27],[111,33,74,28,"value"],[111,38,74,5],[111,40,74,35],[111,47,74,42],[111,48,74,35],[112,0,75,5],[112,14,76,6,"list"],[112,18,76,10],[112,19,76,11,"value"],[112,24,76,6],[112,29,76,21,"_list"],[112,34,76,26],[112,35,76,27,"value"],[112,40,76,6],[112,44,77,6,"list"],[112,48,77,10],[112,49,77,11,"prevIndex"],[112,58,77,6],[112,61,77,23,"_list"],[112,66,77,28],[112,67,77,29,"prevIndex"],[112,76,75,5],[112,78,79,6],[112,85,79,13],[112,86,79,6],[112,87,75,5],[112,92,80,10],[112,99,80,17],[112,100,80,18],[112,101,80,10],[113,0,81,5],[113,9,71,18],[113,10,71,3],[114,0,82,3,"setTransitionList"],[114,8,82,3,"setTransitionList"],[114,25,82,20],[114,26,82,21,"listtt"],[114,32,82,20],[114,33,82,3],[116,0,83,3,"Animated"],[116,30,83,12,"timing"],[116,36,83,3],[116,37,83,19,"animatedTranslateValue"],[116,59,83,3],[116,61,83,43],[117,0,84,4,"toValue"],[117,10,84,4,"toValue"],[117,17,84,11],[117,19,84,13],[117,20,83,43],[118,0,85,4,"duration"],[118,10,85,4,"duration"],[118,18,85,12],[118,20,85,14],[119,0,83,43],[119,9,83,3],[119,11,86,6,"start"],[119,16,83,3],[119,17,86,12],[119,29,86,18],[120,0,87,4],[120,14,87,8,"changed"],[120,21,87,4],[120,23,87,17],[121,0,88,5,"startScaleAnimation"],[121,12,88,5,"startScaleAnimation"],[121,31,88,24],[121,32,88,25],[121,37,88,24],[121,38,88,5],[122,0,89,5],[123,0,90,4],[123,9,83,3],[124,0,91,3],[125,0,92,2],[127,0,94,1],[127,13,94,10,"getTranslation"],[127,27,94,1],[127,28,94,25,"index"],[127,33,94,1],[127,35,94,32,"prevIndex"],[127,44,94,1],[127,46,94,43],[128,0,95,2],[128,10,95,6,"index"],[128,15,95,11],[128,18,95,14,"prevIndex"],[128,27,95,2],[128,29,95,25],[129,0,96,3],[129,15,96,10],[129,16,97,4],[130,0,98,5,"translateY"],[130,10,98,5,"translateY"],[130,20,98,15],[130,22,98,17,"animatedTranslateValue"],[130,44,98,39],[130,45,98,40,"interpolate"],[130,56,98,17],[130,57,98,52],[131,0,99,6,"inputRange"],[131,12,99,6,"inputRange"],[131,22,99,16],[131,24,99,18],[131,25,99,19],[131,26,99,18],[131,28,99,22],[131,29,99,18],[131,30,98,52],[132,0,100,6,"outputRange"],[132,12,100,6,"outputRange"],[132,23,100,17],[132,25,100,19],[132,26,100,20],[132,27,100,19],[132,29,100,23],[132,30,100,24,"height"],[132,36,100,23],[132,40,100,34,"prevIndex"],[132,49,100,43],[132,52,100,46,"index"],[132,57,100,23],[132,58,100,19],[133,0,98,52],[133,11,98,17],[134,0,97,4],[134,9,96,10],[134,10,96,3],[135,0,104,3],[137,0,105,2],[137,10,105,6,"index"],[137,15,105,11],[137,18,105,14,"prevIndex"],[137,27,105,2],[137,29,105,25],[138,0,106,3],[138,15,106,10],[138,16,107,4],[139,0,108,5,"translateY"],[139,10,108,5,"translateY"],[139,20,108,15],[139,22,108,17,"animatedTranslateValue"],[139,44,108,39],[139,45,108,40,"interpolate"],[139,56,108,17],[139,57,108,52],[140,0,109,6,"inputRange"],[140,12,109,6,"inputRange"],[140,22,109,16],[140,24,109,18],[140,25,109,19],[140,26,109,18],[140,28,109,22],[140,29,109,18],[140,30,108,52],[141,0,110,6,"outputRange"],[141,12,110,6,"outputRange"],[141,23,110,17],[141,25,110,19],[141,26,110,20],[141,27,110,19],[141,29,110,23,"height"],[141,35,110,29],[141,39,110,33,"index"],[141,44,110,38],[141,47,110,41,"prevIndex"],[141,56,110,29],[141,57,110,19],[142,0,108,52],[142,11,108,17],[143,0,107,4],[143,9,106,10],[143,10,106,3],[144,0,114,3],[146,0,115,2],[147,0,116,2],[149,0,118,1],[149,13,118,10,"getAnimatedWidth"],[149,29,118,1],[149,30,118,27,"prevValue"],[149,39,118,1],[149,41,118,38,"value"],[149,46,118,1],[149,48,118,45],[150,0,119,2],[150,13,119,9,"animatedTranslateValue"],[150,35,119,31],[150,36,119,32,"interpolate"],[150,47,119,9],[150,48,119,44],[151,0,120,3,"inputRange"],[151,8,120,3,"inputRange"],[151,18,120,13],[151,20,120,15],[151,21,120,16],[151,22,120,15],[151,24,120,19],[151,25,120,15],[151,26,119,44],[152,0,121,3,"outputRange"],[152,8,121,3,"outputRange"],[152,19,121,14],[152,21,121,16],[152,22,121,17,"prevValue"],[152,31,121,26],[152,34,121,29],[152,36,121,16],[152,38,121,33,"value"],[152,43,121,38],[152,46,121,41],[152,48,121,16],[153,0,119,44],[153,7,119,9],[153,8,119,2],[154,0,123,2],[156,0,125,1],[156,13,125,10,"getWidth"],[156,21,125,1],[156,24,125,21],[157,0,126,2],[157,13,126,9],[157,15,126,2],[158,0,127,2],[160,0,128,1],[160,11,129,2],[160,40,129,3],[160,57,129,2],[161,0,130,3],[161,6,130,3],[161,11,130,8],[161,13,130,10],[162,0,131,4,"marginTop"],[162,8,131,4,"marginTop"],[162,17,131,13],[162,19,131,15],[162,22,130,10],[163,0,132,4,"position"],[163,8,132,4,"position"],[163,16,132,12],[163,18,132,14],[163,28,130,10],[164,0,133,4,"left"],[164,8,133,4,"left"],[164,12,133,8],[164,14,133,10],[164,16,130,10],[165,0,134,4,"top"],[165,8,134,4,"top"],[165,11,134,7],[165,13,134,9],[166,0,130,10],[166,7,129,2],[167,0,129,2],[168,0,129,2],[169,0,129,2],[170,0,129,2],[171,0,129,2],[171,7,137,4,"transitionList"],[171,21,137,18],[171,22,138,5,"sort"],[171,26,137,4],[171,27,138,10],[171,37,138,11,"list"],[171,41,138,10],[171,43,138,17,"_list"],[171,48,138,10],[171,50,138,27],[172,0,139,5],[172,10,139,9,"list"],[172,14,139,13],[172,15,139,14,"value"],[172,20,139,9],[172,23,139,22,"_list"],[172,28,139,27],[172,29,139,28,"value"],[172,34,139,5],[172,36,139,35],[172,43,139,42],[172,44,139,35],[173,0,140,5],[173,10,141,6,"list"],[173,14,141,10],[173,15,141,11,"value"],[173,20,141,6],[173,25,141,21,"_list"],[173,30,141,26],[173,31,141,27,"value"],[173,36,141,6],[173,40,142,6,"list"],[173,44,142,10],[173,45,142,11,"prevIndex"],[173,54,142,6],[173,57,142,23,"_list"],[173,62,142,28],[173,63,142,29,"prevIndex"],[173,72,140,5],[173,74,144,6],[173,81,144,13],[173,82,144,6],[173,83,140,5],[173,88,145,10],[173,95,145,17],[173,96,145,18],[173,97,145,10],[174,0,146,5],[174,5,137,4],[174,7,147,5,"map"],[174,10,137,4],[174,11,147,9],[174,21,147,10,"list"],[174,25,147,9],[174,27,147,16,"index"],[174,32,147,9],[175,0,147,9],[175,13,148,5],[175,42,148,6],[175,63,148,5],[175,64,148,15],[175,68,148,5],[176,0,149,6],[176,8,149,6],[176,11,149,9],[176,13,149,11,"list"],[176,17,149,15],[176,18,149,16,"text"],[176,22,148,5],[177,0,150,6],[177,8,150,6],[177,13,150,11],[177,15,150,13],[178,0,151,7,"width"],[178,10,151,7,"width"],[178,15,151,12],[178,17,151,14,"getAnimatedWidth"],[178,33,151,30],[178,34,152,8,"list"],[178,38,152,12],[178,39,152,13,"prevValue"],[178,48,152,8],[178,52,152,26],[178,53,151,30],[178,55,153,8,"list"],[178,59,153,12],[178,60,153,13,"value"],[178,65,151,30],[178,66,150,13],[179,0,155,7,"height"],[179,10,155,7,"height"],[179,16,155,13],[179,18,155,15,"height"],[179,24,150,13],[180,0,156,7,"position"],[180,10,156,7,"position"],[180,18,156,15],[180,20,156,17],[180,30,150,13],[181,0,157,7,"top"],[181,10,157,7,"top"],[181,13,157,10],[181,15,158,8,"height"],[181,21,158,14],[181,25,158,18,"list"],[181,29,158,22],[181,30,158,23,"prevIndex"],[181,39,158,18],[181,42,158,35],[181,43,158,14],[181,44,158,8],[181,48,159,8,"height"],[181,54,159,14],[181,58,159,18,"index"],[181,63,159,23],[181,66,159,26],[181,67,159,14],[181,68,150,13],[182,0,160,7,"backgroundColor"],[182,10,160,7,"backgroundColor"],[182,25,160,22],[182,27,160,24,"list"],[182,31,160,28],[182,32,160,29,"color"],[182,37,150,13],[183,0,161,7,"transform"],[183,10,161,7,"transform"],[183,19,161,16],[183,21,161,18,"getTranslation"],[183,35,161,32],[183,36,161,33,"index"],[183,41,161,32],[183,43,161,40,"list"],[183,47,161,44],[183,48,161,45,"prevIndex"],[183,57,161,32],[184,0,150,13],[184,9,148,5],[185,0,148,5],[186,0,148,5],[187,0,148,5],[188,0,148,5],[189,0,148,5],[189,9,164,6],[189,38,164,7],[189,55,164,6],[190,0,164,6],[191,0,164,6],[192,0,164,6],[193,0,164,6],[194,0,164,6],[194,9,165,8,"list"],[194,13,165,12],[194,14,165,13,"text"],[194,18,164,6],[194,25,165,20,"list"],[194,29,165,24],[194,30,165,25,"value"],[194,35,164,6],[194,36,148,5],[194,37,147,9],[195,0,147,9],[195,5,137,4],[195,6,129,2],[195,8,169,3],[195,37,169,4],[195,66,169,3],[196,0,170,4],[196,6,170,4],[196,11,170,9],[196,13,170,11],[197,0,170,13,"top"],[197,8,170,13,"top"],[197,11,170,16],[197,13,170,18],[198,0,170,11],[198,7,169,3],[199,0,171,4],[199,6,171,4],[199,13,171,11],[199,15,171,13],[200,0,171,13],[200,15,171,19,"startScaleAnimation"],[200,34,171,38],[200,35,171,39],[200,40,171,38],[200,41,171,13],[201,0,171,13],[201,7,169,3],[202,0,169,3],[203,0,169,3],[204,0,169,3],[205,0,169,3],[206,0,169,3],[206,7,173,4],[206,36,173,5],[206,53,173,4],[207,0,173,4],[208,0,173,4],[209,0,173,4],[210,0,173,4],[211,0,173,4],[211,18,169,3],[211,19,129,2],[211,20,128,1],[212,0,177,1],[214,5,29,24,"ConnexionScreen"],[214,20],[216,7,29,24,"ConnexionScreen"],[216,22]],"functionMap":{"names":["<global>","ConnexionScreen","props.oldList.sort$argument_0","useEffect$argument_0","transitionList.map$argument_0","startScaleAnimation","transitionList.sort$argument_0","props.newList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","getAnimatedWidth","getWidth","transitionList.sort.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;qBCI;GDE;WEI;+CCC;IDI;EFE;CIE;gDCE;GDK;KEK,+CF;SGY,gDH;UIC;KJQ;YKK;ILI;EJE;CUE;EVsB;CWE;EXK;CYE;EZE;UKW;KLQ;SaC;KbqB;acG,gCd;CDM"}},"type":"js/module"}]}