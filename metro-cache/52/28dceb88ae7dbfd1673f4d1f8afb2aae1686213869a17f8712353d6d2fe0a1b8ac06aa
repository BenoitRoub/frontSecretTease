{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ConnexionScreen;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Components/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var List = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 3,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var NewList = [{\n    value: 14,\n    text: \"Felix\"\n  }, {\n    value: 11,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function ConnexionScreen(props) {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(props.oldList.sort(function (list, _list) {\n      if (list.value > _list.value) return 1;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var height = 50;\n    (0, _react.useEffect)(function () {\n      var newTransitionList = transitionList.map(function (list, index) {\n        return _objectSpread({}, list, {\n          prevIndex: index\n        });\n      });\n      setTransitionList(newTransitionList);\n    }, []);\n\n    function startScaleAnimation(changed) {\n      var newTransitionList = transitionList.sort(function (list, _list) {\n        if (list.value < _list.value) return 1;\n        if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n      });\n\n      var _loop = function _loop(i) {\n        if (newTransitionList[i].value < props.newList.find(function (list) {\n          return list.text === newTransitionList[i].text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          changed = true;\n        }\n      };\n\n      for (var i in newTransitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        var listtt = newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          if (list.value < _list.value) return 1;\n          if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n        });\n        setTransitionList(listtt);\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          duration: 500\n        }).start(function () {\n          return _reactNative.Animated.timing(animatedTranslateValue, {\n            toValue: 0,\n            duration: 1\n          }).start(function () {\n            if (changed) {\n              startScaleAnimation(false);\n            }\n          });\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -height * (prevIndex - index)]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, height * (index - prevIndex)]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    function getAnimatedWidth(value) {\n      return animatedTranslateValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [30, 40]\n      });\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100,\n        position: \"absolute\",\n        left: 40,\n        top: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      }\n    }, transitionList.sort(function (list, _list) {\n      if (list.value < _list.value) return 1;\n      if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n    }).map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: getAnimatedWidth(list.value * 10),\n          height: height,\n          position: \"absolute\",\n          top: height * (list.prevIndex + 1) || height * (index + 1),\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        }\n      }, list.text, \" \", list.value));\n    }), _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: {\n        top: 300\n      },\n      onPress: function onPress() {\n        return startScaleAnimation(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      }\n    }, \"staffrt \")));\n  }\n\n  _s(ConnexionScreen, \"C5l0K4vQIS0P8KMJYr9jSMk1H0E=\");\n\n  _c = ConnexionScreen;\n\n  var _c;\n\n  $RefreshReg$(_c, \"ConnexionScreen\");\n});","lineCount":216,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"List"],[28,10,18,10],[28,13,18,13],[28,14,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,13],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,13],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,13],[40,4,18,0],[41,0,23,0],[41,6,23,6,"NewList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,13,24,1],[43,0,24,14,"text"],[43,4,24,14,"text"],[43,8,24,18],[43,10,24,20],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,13,25,1],[46,0,25,14,"text"],[46,4,25,14,"text"],[46,8,25,18],[46,10,25,20],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"ConnexionScreen"],[52,26,29,15],[52,27,29,40,"props"],[52,32,29,15],[52,34,29,47],[53,0,29,47],[55,0,29,47],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,47],[56,0,29,47],[57,0,29,47],[57,8,30,8,"animatedValue"],[57,21,29,47],[59,0,29,47],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,47],[60,0,29,47],[61,0,29,47],[61,8,31,8,"animatedTranslateValue"],[61,30,29,47],[63,0,29,47],[63,21,32,45],[63,42,33,2,"props"],[63,47,33,7],[63,48,33,8,"oldList"],[63,55,33,2],[63,56,33,16,"sort"],[63,60,33,2],[63,61,33,21],[63,71,33,22,"list"],[63,75,33,21],[63,77,33,28,"_list"],[63,82,33,21],[63,84,33,38],[64,0,34,3],[64,10,34,7,"list"],[64,14,34,11],[64,15,34,12,"value"],[64,20,34,7],[64,23,34,20,"_list"],[64,28,34,25],[64,29,34,26,"value"],[64,34,34,3],[64,36,34,33],[64,43,34,40],[64,44,34,33],[65,0,35,3],[65,5,33,2],[65,6,32,45],[65,7,29,47],[66,0,29,47],[67,0,29,47],[67,8,32,8,"transitionList"],[67,22,29,47],[68,0,29,47],[68,8,32,24,"setTransitionList"],[68,25,29,47],[70,0,38,1],[70,8,38,7,"height"],[70,14,38,13],[70,17,38,16],[70,19,38,1],[71,0,39,1],[71,26,39,11],[71,38,39,17],[72,0,40,2],[72,10,40,8,"newTransitionList"],[72,27,40,25],[72,30,40,28,"transitionList"],[72,44,40,42],[72,45,40,43,"map"],[72,48,40,28],[72,49,40,47],[72,59,40,48,"list"],[72,63,40,47],[72,65,40,54,"index"],[72,70,40,47],[73,0,40,47],[73,33,41,6,"list"],[73,37,40,47],[74,0,42,3,"prevIndex"],[74,10,42,3,"prevIndex"],[74,19,42,12],[74,21,42,14,"index"],[75,0,40,47],[76,0,40,47],[76,7,40,28],[76,8,40,2],[77,0,44,2,"setTransitionList"],[77,6,44,2,"setTransitionList"],[77,23,44,19],[77,24,44,20,"newTransitionList"],[77,41,44,19],[77,42,44,2],[78,0,45,2],[78,5,39,1],[78,7,45,4],[78,9,39,1],[80,0,47,1],[80,13,47,10,"startScaleAnimation"],[80,32,47,1],[80,33,47,30,"changed"],[80,40,47,1],[80,42,47,39],[81,0,48,2],[81,10,48,8,"newTransitionList"],[81,27,48,25],[81,30,48,28,"transitionList"],[81,44,48,42],[81,45,48,43,"sort"],[81,49,48,28],[81,50,48,48],[81,60,48,49,"list"],[81,64,48,48],[81,66,48,55,"_list"],[81,71,48,48],[81,73,48,65],[82,0,49,3],[82,12,49,7,"list"],[82,16,49,11],[82,17,49,12,"value"],[82,22,49,7],[82,25,49,20,"_list"],[82,30,49,25],[82,31,49,26,"value"],[82,36,49,3],[82,38,49,33],[82,45,49,40],[82,46,49,33],[83,0,50,3],[83,12,50,7,"list"],[83,16,50,11],[83,17,50,12,"value"],[83,22,50,7],[83,27,50,22,"_list"],[83,32,50,27],[83,33,50,28,"value"],[83,38,50,7],[83,42,50,37,"list"],[83,46,50,41],[83,47,50,42,"prevIndex"],[83,56,50,37],[83,59,50,54,"_list"],[83,64,50,59],[83,65,50,60,"prevIndex"],[83,74,50,3],[83,76,51,4],[83,83,51,11],[83,84,51,4],[83,85,50,3],[83,90,52,8],[83,97,52,15],[83,98,52,16],[83,99,52,8],[84,0,53,3],[84,7,48,28],[84,8,48,2],[86,0,47,39],[86,33,54,13,"i"],[86,34,47,39],[87,0,55,3],[87,12,56,4,"newTransitionList"],[87,29,56,21],[87,30,56,22,"i"],[87,31,56,21],[87,32,56,4],[87,33,56,25,"value"],[87,38,56,4],[87,41,57,4,"props"],[87,46,57,9],[87,47,57,10,"newList"],[87,54,57,4],[87,55,57,18,"find"],[87,59,57,4],[87,60,58,5],[87,70,58,5,"list"],[87,74,58,9],[88,0,58,9],[88,17,58,13,"list"],[88,21,58,17],[88,22,58,18,"text"],[88,26,58,13],[88,31,58,27,"newTransitionList"],[88,48,58,44],[88,49,58,45,"i"],[88,50,58,44],[88,51,58,27],[88,52,58,48,"text"],[88,56,58,9],[89,0,58,9],[89,9,57,4],[89,11,59,6,"value"],[89,16,55,3],[89,18,60,5],[90,0,61,4,"newTransitionList"],[90,10,61,4,"newTransitionList"],[90,27,61,21],[90,28,61,22,"i"],[90,29,61,21],[90,30,61,4],[90,31,61,25,"value"],[90,36,61,4],[90,40,61,34],[90,41,61,4],[91,0,62,4,"changed"],[91,10,62,4,"changed"],[91,17,62,11],[91,20,62,14],[91,24,62,4],[92,0,63,4],[93,0,47,39],[95,0,54,2],[95,11,54,7],[95,15,54,13,"i"],[95,16,54,2],[95,20,54,18,"newTransitionList"],[95,37,54,2],[95,39,54,37],[96,0,54,37],[96,14,54,13,"i"],[96,15,54,37],[97,0,64,3],[99,0,65,2],[99,10,65,6,"changed"],[99,17,65,2],[99,19,65,15],[100,0,66,3],[100,12,66,9,"listtt"],[100,18,66,15],[100,21,66,18,"newTransitionList"],[100,38,66,35],[100,39,67,5,"map"],[100,42,66,18],[100,43,67,9],[100,53,67,10,"list"],[100,57,67,9],[100,59,67,16,"index"],[100,64,67,9],[101,0,67,9],[101,35,67,32,"list"],[101,39,67,9],[102,0,67,38,"prevIndex"],[102,12,67,38,"prevIndex"],[102,21,67,47],[102,23,67,49,"index"],[103,0,67,9],[104,0,67,9],[104,9,66,18],[104,11,68,5,"sort"],[104,15,66,18],[104,16,68,10],[104,26,68,11,"list"],[104,30,68,10],[104,32,68,17,"_list"],[104,37,68,10],[104,39,68,27],[105,0,69,5],[105,14,69,9,"list"],[105,18,69,13],[105,19,69,14,"value"],[105,24,69,9],[105,27,69,22,"_list"],[105,32,69,27],[105,33,69,28,"value"],[105,38,69,5],[105,40,69,35],[105,47,69,42],[105,48,69,35],[106,0,70,5],[106,14,71,6,"list"],[106,18,71,10],[106,19,71,11,"value"],[106,24,71,6],[106,29,71,21,"_list"],[106,34,71,26],[106,35,71,27,"value"],[106,40,71,6],[106,44,72,6,"list"],[106,48,72,10],[106,49,72,11,"prevIndex"],[106,58,72,6],[106,61,72,23,"_list"],[106,66,72,28],[106,67,72,29,"prevIndex"],[106,76,70,5],[106,78,74,6],[106,85,74,13],[106,86,74,6],[106,87,70,5],[106,92,75,10],[106,99,75,17],[106,100,75,18],[106,101,75,10],[107,0,76,5],[107,9,66,18],[107,10,66,3],[108,0,77,3,"setTransitionList"],[108,8,77,3,"setTransitionList"],[108,25,77,20],[108,26,77,21,"listtt"],[108,32,77,20],[108,33,77,3],[110,0,78,3,"Animated"],[110,30,78,12,"timing"],[110,36,78,3],[110,37,78,19,"animatedTranslateValue"],[110,59,78,3],[110,61,78,43],[111,0,79,4,"toValue"],[111,10,79,4,"toValue"],[111,17,79,11],[111,19,79,13],[111,20,78,43],[112,0,80,4,"duration"],[112,10,80,4,"duration"],[112,18,80,12],[112,20,80,14],[113,0,78,43],[113,9,78,3],[113,11,81,6,"start"],[113,16,78,3],[113,17,81,12],[114,0,81,12],[114,17,82,4,"Animated"],[114,39,82,13,"timing"],[114,45,82,4],[114,46,82,20,"animatedTranslateValue"],[114,68,82,4],[114,70,82,44],[115,0,83,5,"toValue"],[115,12,83,5,"toValue"],[115,19,83,12],[115,21,83,14],[115,22,82,44],[116,0,84,5,"duration"],[116,12,84,5,"duration"],[116,20,84,13],[116,22,84,15],[117,0,82,44],[117,11,82,4],[117,13,85,7,"start"],[117,18,82,4],[117,19,85,13],[117,31,85,19],[118,0,86,5],[118,16,86,9,"changed"],[118,23,86,5],[118,25,86,18],[119,0,87,6,"startScaleAnimation"],[119,14,87,6,"startScaleAnimation"],[119,33,87,25],[119,34,87,26],[119,39,87,25],[119,40,87,6],[120,0,88,6],[121,0,89,5],[121,11,82,4],[121,12,81,12],[122,0,81,12],[122,9,78,3],[123,0,91,3],[124,0,92,2],[126,0,94,1],[126,13,94,10,"getTranslation"],[126,27,94,1],[126,28,94,25,"index"],[126,33,94,1],[126,35,94,32,"prevIndex"],[126,44,94,1],[126,46,94,43],[127,0,95,2],[127,10,95,6,"index"],[127,15,95,11],[127,18,95,14,"prevIndex"],[127,27,95,2],[127,29,95,25],[128,0,96,3],[128,15,96,10],[128,16,97,4],[129,0,98,5,"translateY"],[129,10,98,5,"translateY"],[129,20,98,15],[129,22,98,17,"animatedTranslateValue"],[129,44,98,39],[129,45,98,40,"interpolate"],[129,56,98,17],[129,57,98,52],[130,0,99,6,"inputRange"],[130,12,99,6,"inputRange"],[130,22,99,16],[130,24,99,18],[130,25,99,19],[130,26,99,18],[130,28,99,22],[130,29,99,18],[130,30,98,52],[131,0,100,6,"outputRange"],[131,12,100,6,"outputRange"],[131,23,100,17],[131,25,100,19],[131,26,100,20],[131,27,100,19],[131,29,100,23],[131,30,100,24,"height"],[131,36,100,23],[131,40,100,34,"prevIndex"],[131,49,100,43],[131,52,100,46,"index"],[131,57,100,23],[131,58,100,19],[132,0,98,52],[132,11,98,17],[133,0,97,4],[133,9,96,10],[133,10,96,3],[134,0,104,3],[136,0,105,2],[136,10,105,6,"index"],[136,15,105,11],[136,18,105,14,"prevIndex"],[136,27,105,2],[136,29,105,25],[137,0,106,3],[137,15,106,10],[137,16,107,4],[138,0,108,5,"translateY"],[138,10,108,5,"translateY"],[138,20,108,15],[138,22,108,17,"animatedTranslateValue"],[138,44,108,39],[138,45,108,40,"interpolate"],[138,56,108,17],[138,57,108,52],[139,0,109,6,"inputRange"],[139,12,109,6,"inputRange"],[139,22,109,16],[139,24,109,18],[139,25,109,19],[139,26,109,18],[139,28,109,22],[139,29,109,18],[139,30,108,52],[140,0,110,6,"outputRange"],[140,12,110,6,"outputRange"],[140,23,110,17],[140,25,110,19],[140,26,110,20],[140,27,110,19],[140,29,110,23,"height"],[140,35,110,29],[140,39,110,33,"index"],[140,44,110,38],[140,47,110,41,"prevIndex"],[140,56,110,29],[140,57,110,19],[141,0,108,52],[141,11,108,17],[142,0,107,4],[142,9,106,10],[142,10,106,3],[143,0,114,3],[145,0,115,2],[146,0,116,2],[148,0,118,1],[148,13,118,10,"getAnimatedWidth"],[148,29,118,1],[148,30,118,27,"value"],[148,35,118,1],[148,37,118,34],[149,0,119,2],[149,13,119,9,"animatedTranslateValue"],[149,35,119,31],[149,36,119,32,"interpolate"],[149,47,119,9],[149,48,119,44],[150,0,120,3,"inputRange"],[150,8,120,3,"inputRange"],[150,18,120,13],[150,20,120,15],[150,21,120,16],[150,22,120,15],[150,24,120,19],[150,25,120,15],[150,26,119,44],[151,0,121,3,"outputRange"],[151,8,121,3,"outputRange"],[151,19,121,14],[151,21,121,16],[151,22,121,17],[151,24,121,16],[151,26,121,21],[151,28,121,16],[152,0,119,44],[152,7,119,9],[152,8,119,2],[153,0,123,2],[155,0,124,1],[155,11,125,2],[155,40,125,3],[155,57,125,2],[156,0,126,3],[156,6,126,3],[156,11,126,8],[156,13,126,10],[157,0,127,4,"marginTop"],[157,8,127,4,"marginTop"],[157,17,127,13],[157,19,127,15],[157,22,126,10],[158,0,128,4,"position"],[158,8,128,4,"position"],[158,16,128,12],[158,18,128,14],[158,28,126,10],[159,0,129,4,"left"],[159,8,129,4,"left"],[159,12,129,8],[159,14,129,10],[159,16,126,10],[160,0,130,4,"top"],[160,8,130,4,"top"],[160,11,130,7],[160,13,130,9],[161,0,126,10],[161,7,125,2],[162,0,125,2],[163,0,125,2],[164,0,125,2],[165,0,125,2],[166,0,125,2],[166,7,133,4,"transitionList"],[166,21,133,18],[166,22,134,5,"sort"],[166,26,133,4],[166,27,134,10],[166,37,134,11,"list"],[166,41,134,10],[166,43,134,17,"_list"],[166,48,134,10],[166,50,134,27],[167,0,135,5],[167,10,135,9,"list"],[167,14,135,13],[167,15,135,14,"value"],[167,20,135,9],[167,23,135,22,"_list"],[167,28,135,27],[167,29,135,28,"value"],[167,34,135,5],[167,36,135,35],[167,43,135,42],[167,44,135,35],[168,0,136,5],[168,10,137,6,"list"],[168,14,137,10],[168,15,137,11,"value"],[168,20,137,6],[168,25,137,21,"_list"],[168,30,137,26],[168,31,137,27,"value"],[168,36,137,6],[168,40,138,6,"list"],[168,44,138,10],[168,45,138,11,"prevIndex"],[168,54,138,6],[168,57,138,23,"_list"],[168,62,138,28],[168,63,138,29,"prevIndex"],[168,72,136,5],[168,74,140,6],[168,81,140,13],[168,82,140,6],[168,83,136,5],[168,88,141,10],[168,95,141,17],[168,96,141,18],[168,97,141,10],[169,0,142,5],[169,5,133,4],[169,7,143,5,"map"],[169,10,133,4],[169,11,143,9],[169,21,143,10,"list"],[169,25,143,9],[169,27,143,16,"index"],[169,32,143,9],[170,0,143,9],[170,13,144,5],[170,42,144,6],[170,63,144,5],[170,64,144,15],[170,68,144,5],[171,0,145,6],[171,8,145,6],[171,11,145,9],[171,13,145,11,"index"],[171,18,144,5],[172,0,146,6],[172,8,146,6],[172,13,146,11],[172,15,146,13],[173,0,147,7,"width"],[173,10,147,7,"width"],[173,15,147,12],[173,17,147,14,"getAnimatedWidth"],[173,33,147,30],[173,34,147,31,"list"],[173,38,147,35],[173,39,147,36,"value"],[173,44,147,31],[173,47,147,44],[173,49,147,30],[173,50,146,13],[174,0,148,7,"height"],[174,10,148,7,"height"],[174,16,148,13],[174,18,148,15,"height"],[174,24,146,13],[175,0,149,7,"position"],[175,10,149,7,"position"],[175,18,149,15],[175,20,149,17],[175,30,146,13],[176,0,150,7,"top"],[176,10,150,7,"top"],[176,13,150,10],[176,15,151,8,"height"],[176,21,151,14],[176,25,151,18,"list"],[176,29,151,22],[176,30,151,23,"prevIndex"],[176,39,151,18],[176,42,151,35],[176,43,151,14],[176,44,151,8],[176,48,152,8,"height"],[176,54,152,14],[176,58,152,18,"index"],[176,63,152,23],[176,66,152,26],[176,67,152,14],[176,68,146,13],[177,0,153,7,"backgroundColor"],[177,10,153,7,"backgroundColor"],[177,25,153,22],[177,27,153,24,"list"],[177,31,153,28],[177,32,153,29,"color"],[177,37,146,13],[178,0,154,7,"transform"],[178,10,154,7,"transform"],[178,19,154,16],[178,21,154,18,"getTranslation"],[178,35,154,32],[178,36,154,33,"index"],[178,41,154,32],[178,43,154,40,"list"],[178,47,154,44],[178,48,154,45,"prevIndex"],[178,57,154,32],[179,0,146,13],[179,9,144,5],[180,0,144,5],[181,0,144,5],[182,0,144,5],[183,0,144,5],[184,0,144,5],[184,9,157,6],[184,38,157,7],[184,55,157,6],[185,0,157,6],[186,0,157,6],[187,0,157,6],[188,0,157,6],[189,0,157,6],[189,9,158,8,"list"],[189,13,158,12],[189,14,158,13,"text"],[189,18,157,6],[189,25,158,20,"list"],[189,29,158,24],[189,30,158,25,"value"],[189,35,157,6],[189,36,144,5],[189,37,143,9],[190,0,143,9],[190,5,133,4],[190,6,125,2],[190,8,162,3],[190,37,162,4],[190,66,162,3],[191,0,163,4],[191,6,163,4],[191,11,163,9],[191,13,163,11],[192,0,163,13,"top"],[192,8,163,13,"top"],[192,11,163,16],[192,13,163,18],[193,0,163,11],[193,7,162,3],[194,0,164,4],[194,6,164,4],[194,13,164,11],[194,15,164,13],[195,0,164,13],[195,15,164,19,"startScaleAnimation"],[195,34,164,38],[195,35,164,39],[195,40,164,38],[195,41,164,13],[196,0,164,13],[196,7,162,3],[197,0,162,3],[198,0,162,3],[199,0,162,3],[200,0,162,3],[201,0,162,3],[201,7,166,4],[201,36,166,5],[201,53,166,4],[202,0,166,4],[203,0,166,4],[204,0,166,4],[205,0,166,4],[206,0,166,4],[206,18,162,3],[206,19,125,2],[206,20,124,1],[207,0,170,1],[209,5,29,24,"ConnexionScreen"],[209,20],[211,7,29,24,"ConnexionScreen"],[211,22]],"functionMap":{"names":["<global>","ConnexionScreen","props.oldList.sort$argument_0","useEffect$argument_0","transitionList.map$argument_0","startScaleAnimation","transitionList.sort$argument_0","props.newList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","getAnimatedWidth","transitionList.sort.map$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;eC4B;qBCI;GDE;WEI;+CCC;IDG;EFE;CIE;gDCC;GDK;KEK,+CF;SGS,gDH;UIC;KJQ;YKK;MLQ;EJG;CUE;EVsB;CWE;EXK;UKW;KLQ;SYC;KZkB;aaG,gCb;CDM"}},"type":"js/module"}]}