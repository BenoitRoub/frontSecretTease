{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"expo-linear-gradient","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = DynamicList;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _expoLinearGradient = _$$_REQUIRE(_dependencyMap[6], \"expo-linear-gradient\");\n\n  var _jsxFileName = \"/home/felix/Documents/secretTease/frontSecretTease/Components/AnimatedList.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var oldList = [{\n    value: 3,\n    text: \"Felix\",\n    color: \"red\"\n  }, {\n    value: 3,\n    text: \"Benoit\",\n    color: \"blue\"\n  }, {\n    value: 6,\n    text: \"Morgane\",\n    color: \"#253237\"\n  }];\n  var newList = [{\n    value: 14,\n    text: \"Felix\"\n  }, {\n    value: 11,\n    text: \"Benoit\"\n  }, {\n    value: 9,\n    text: \"Morgane\"\n  }];\n\n  function DynamicList(props) {\n    _s();\n\n    var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n        animatedValue = _useState2[0];\n\n    var _useState3 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),\n        animatedTranslateValue = _useState4[0];\n\n    var _useState5 = (0, _react.useState)(oldList.sort(function (list, _list) {\n      if (list.value > _list.value) return 1;\n    })),\n        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n        transitionList = _useState6[0],\n        setTransitionList = _useState6[1];\n\n    var height = 50;\n    (0, _react.useEffect)(function () {\n      var newTransitionList = transitionList.map(function (list, index) {\n        return _objectSpread({}, list, {\n          prevIndex: index\n        });\n      });\n      setTransitionList(newTransitionList);\n      startScaleAnimation();\n    }, []);\n\n    function startScaleAnimation(changed) {\n      var newTransitionList = transitionList.sort(function (list, _list) {\n        if (list.value < _list.value) return 1;\n        if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n      });\n\n      var _loop = function _loop(i) {\n        if (newTransitionList[i].value < newList.find(function (list) {\n          return list.text === newTransitionList[i].text;\n        }).value) {\n          newTransitionList[i].value += 1;\n          changed = true;\n        }\n      };\n\n      for (var i in newTransitionList) {\n        _loop(i);\n      }\n\n      if (changed) {\n        var listtt = newTransitionList.map(function (list, index) {\n          return _objectSpread({}, list, {\n            prevIndex: index\n          });\n        }).sort(function (list, _list) {\n          if (list.value < _list.value) return 1;\n          if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n        });\n        setTransitionList(listtt);\n\n        _reactNative.Animated.timing(animatedTranslateValue, {\n          toValue: 1,\n          duration: 500\n        }).start(function () {\n          return _reactNative.Animated.timing(animatedTranslateValue, {\n            toValue: 0,\n            duration: 1\n          }).start(function () {\n            if (changed) {\n              startScaleAnimation(false);\n            }\n          });\n        });\n      }\n    }\n\n    function getTranslation(index, prevIndex) {\n      if (index < prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -height * (prevIndex - index)]\n          })\n        }];\n      }\n\n      if (index > prevIndex) {\n        return [{\n          translateY: animatedTranslateValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, height * (index - prevIndex)]\n          })\n        }];\n      }\n\n      return;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: 100,\n        marginLeft: 100,\n        postion: \"absolute\",\n        width: \"80%\",\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      }\n    }, transitionList.sort(function (list, _list) {\n      if (list.value < _list.value) return 1;\n      if (list.value === _list.value && list.prevIndex > _list.prevIndex) return 0;else return -1;\n    }).map(function (list, index) {\n      return _react.default.createElement(_reactNative.Animated.View, {\n        key: index,\n        style: {\n          width: list.value * 10,\n          height: height,\n          position: \"absolute\",\n          top: height * (list.prevIndex + 1) || height * (index + 1),\n          backgroundColor: list.color,\n          transform: getTranslation(index, list.prevIndex)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        }\n      }, list.text, \" \", list.value));\n    }));\n  }\n\n  _s(DynamicList, \"SUl9/G+n6jHNJecXWVwxftMRMd0=\");\n\n  _c = DynamicList;\n\n  var _c;\n\n  $RefreshReg$(_c, \"DynamicList\");\n});","lineCount":195,"map":[[15,0,1,0],[17,0,3,0],[19,0,16,0],[28,0,18,0],[28,6,18,6,"oldList"],[28,13,18,13],[28,16,18,16],[28,17,19,1],[29,0,19,3,"value"],[29,4,19,3,"value"],[29,9,19,8],[29,11,19,10],[29,12,19,1],[30,0,19,13,"text"],[30,4,19,13,"text"],[30,8,19,17],[30,10,19,19],[30,17,19,1],[31,0,19,28,"color"],[31,4,19,28,"color"],[31,9,19,33],[31,11,19,35],[32,0,19,1],[32,3,18,16],[32,5,20,1],[33,0,20,3,"value"],[33,4,20,3,"value"],[33,9,20,8],[33,11,20,10],[33,12,20,1],[34,0,20,13,"text"],[34,4,20,13,"text"],[34,8,20,17],[34,10,20,19],[34,18,20,1],[35,0,20,29,"color"],[35,4,20,29,"color"],[35,9,20,34],[35,11,20,36],[36,0,20,1],[36,3,18,16],[36,5,21,1],[37,0,21,3,"value"],[37,4,21,3,"value"],[37,9,21,8],[37,11,21,10],[37,12,21,1],[38,0,21,13,"text"],[38,4,21,13,"text"],[38,8,21,17],[38,10,21,19],[38,19,21,1],[39,0,21,30,"color"],[39,4,21,30,"color"],[39,9,21,35],[39,11,21,37],[40,0,21,1],[40,3,18,16],[40,4,18,0],[41,0,23,0],[41,6,23,6,"newList"],[41,13,23,13],[41,16,23,16],[41,17,24,1],[42,0,24,3,"value"],[42,4,24,3,"value"],[42,9,24,8],[42,11,24,10],[42,13,24,1],[43,0,24,14,"text"],[43,4,24,14,"text"],[43,8,24,18],[43,10,24,20],[44,0,24,1],[44,3,23,16],[44,5,25,1],[45,0,25,3,"value"],[45,4,25,3,"value"],[45,9,25,8],[45,11,25,10],[45,13,25,1],[46,0,25,14,"text"],[46,4,25,14,"text"],[46,8,25,18],[46,10,25,20],[47,0,25,1],[47,3,23,16],[47,5,26,1],[48,0,26,3,"value"],[48,4,26,3,"value"],[48,9,26,8],[48,11,26,10],[48,12,26,1],[49,0,26,13,"text"],[49,4,26,13,"text"],[49,8,26,17],[49,10,26,19],[50,0,26,1],[50,3,23,16],[50,4,23,0],[52,0,29,15],[52,11,29,24,"DynamicList"],[52,22,29,15],[52,23,29,36,"props"],[52,28,29,15],[52,30,29,43],[53,0,29,43],[55,0,29,43],[55,20,30,25],[55,41,30,34],[55,45,30,38,"Animated"],[55,67,30,47,"Value"],[55,72,30,34],[55,73,30,53],[55,74,30,34],[55,75,30,25],[55,76,29,43],[56,0,29,43],[57,0,29,43],[57,8,30,8,"animatedValue"],[57,21,29,43],[59,0,29,43],[59,21,31,34],[59,42,31,43],[59,46,31,47,"Animated"],[59,68,31,56,"Value"],[59,73,31,43],[59,74,31,62],[59,75,31,43],[59,76,31,34],[59,77,29,43],[60,0,29,43],[61,0,29,43],[61,8,31,8,"animatedTranslateValue"],[61,30,29,43],[63,0,29,43],[63,21,32,45],[63,42,33,2,"oldList"],[63,49,33,9],[63,50,33,10,"sort"],[63,54,33,2],[63,55,33,15],[63,65,33,16,"list"],[63,69,33,15],[63,71,33,22,"_list"],[63,76,33,15],[63,78,33,32],[64,0,34,3],[64,10,34,7,"list"],[64,14,34,11],[64,15,34,12,"value"],[64,20,34,7],[64,23,34,20,"_list"],[64,28,34,25],[64,29,34,26,"value"],[64,34,34,3],[64,36,34,33],[64,43,34,40],[64,44,34,33],[65,0,35,3],[65,5,33,2],[65,6,32,45],[65,7,29,43],[66,0,29,43],[67,0,29,43],[67,8,32,8,"transitionList"],[67,22,29,43],[68,0,29,43],[68,8,32,24,"setTransitionList"],[68,25,29,43],[70,0,38,1],[70,8,38,7,"height"],[70,14,38,13],[70,17,38,16],[70,19,38,1],[71,0,39,1],[71,26,39,11],[71,38,39,17],[72,0,40,2],[72,10,40,8,"newTransitionList"],[72,27,40,25],[72,30,40,28,"transitionList"],[72,44,40,42],[72,45,40,43,"map"],[72,48,40,28],[72,49,40,47],[72,59,40,48,"list"],[72,63,40,47],[72,65,40,54,"index"],[72,70,40,47],[73,0,40,47],[73,33,41,6,"list"],[73,37,40,47],[74,0,42,3,"prevIndex"],[74,10,42,3,"prevIndex"],[74,19,42,12],[74,21,42,14,"index"],[75,0,40,47],[76,0,40,47],[76,7,40,28],[76,8,40,2],[77,0,44,2,"setTransitionList"],[77,6,44,2,"setTransitionList"],[77,23,44,19],[77,24,44,20,"newTransitionList"],[77,41,44,19],[77,42,44,2],[78,0,45,2,"startScaleAnimation"],[78,6,45,2,"startScaleAnimation"],[78,25,45,21],[79,0,46,2],[79,5,39,1],[79,7,46,4],[79,9,39,1],[81,0,48,1],[81,13,48,10,"startScaleAnimation"],[81,32,48,1],[81,33,48,30,"changed"],[81,40,48,1],[81,42,48,39],[82,0,49,2],[82,10,49,8,"newTransitionList"],[82,27,49,25],[82,30,49,28,"transitionList"],[82,44,49,42],[82,45,49,43,"sort"],[82,49,49,28],[82,50,49,48],[82,60,49,49,"list"],[82,64,49,48],[82,66,49,55,"_list"],[82,71,49,48],[82,73,49,65],[83,0,50,3],[83,12,50,7,"list"],[83,16,50,11],[83,17,50,12,"value"],[83,22,50,7],[83,25,50,20,"_list"],[83,30,50,25],[83,31,50,26,"value"],[83,36,50,3],[83,38,50,33],[83,45,50,40],[83,46,50,33],[84,0,51,3],[84,12,51,7,"list"],[84,16,51,11],[84,17,51,12,"value"],[84,22,51,7],[84,27,51,22,"_list"],[84,32,51,27],[84,33,51,28,"value"],[84,38,51,7],[84,42,51,37,"list"],[84,46,51,41],[84,47,51,42,"prevIndex"],[84,56,51,37],[84,59,51,54,"_list"],[84,64,51,59],[84,65,51,60,"prevIndex"],[84,74,51,3],[84,76,52,4],[84,83,52,11],[84,84,52,4],[84,85,51,3],[84,90,53,8],[84,97,53,15],[84,98,53,16],[84,99,53,8],[85,0,54,3],[85,7,49,28],[85,8,49,2],[87,0,48,39],[87,33,55,13,"i"],[87,34,48,39],[88,0,56,3],[88,12,57,4,"newTransitionList"],[88,29,57,21],[88,30,57,22,"i"],[88,31,57,21],[88,32,57,4],[88,33,57,25,"value"],[88,38,57,4],[88,41,58,4,"newList"],[88,48,58,11],[88,49,58,12,"find"],[88,53,58,4],[88,54,58,17],[88,64,58,17,"list"],[88,68,58,21],[89,0,58,21],[89,17,58,25,"list"],[89,21,58,29],[89,22,58,30,"text"],[89,26,58,25],[89,31,58,39,"newTransitionList"],[89,48,58,56],[89,49,58,57,"i"],[89,50,58,56],[89,51,58,39],[89,52,58,60,"text"],[89,56,58,21],[90,0,58,21],[90,9,58,4],[90,11,59,6,"value"],[90,16,56,3],[90,18,60,5],[91,0,61,4,"newTransitionList"],[91,10,61,4,"newTransitionList"],[91,27,61,21],[91,28,61,22,"i"],[91,29,61,21],[91,30,61,4],[91,31,61,25,"value"],[91,36,61,4],[91,40,61,34],[91,41,61,4],[92,0,62,4,"changed"],[92,10,62,4,"changed"],[92,17,62,11],[92,20,62,14],[92,24,62,4],[93,0,63,4],[94,0,48,39],[96,0,55,2],[96,11,55,7],[96,15,55,13,"i"],[96,16,55,2],[96,20,55,18,"newTransitionList"],[96,37,55,2],[96,39,55,37],[97,0,55,37],[97,14,55,13,"i"],[97,15,55,37],[98,0,64,3],[100,0,65,2],[100,10,65,6,"changed"],[100,17,65,2],[100,19,65,15],[101,0,66,3],[101,12,66,9,"listtt"],[101,18,66,15],[101,21,66,18,"newTransitionList"],[101,38,66,35],[101,39,67,5,"map"],[101,42,66,18],[101,43,67,9],[101,53,67,10,"list"],[101,57,67,9],[101,59,67,16,"index"],[101,64,67,9],[102,0,67,9],[102,35,67,32,"list"],[102,39,67,9],[103,0,67,38,"prevIndex"],[103,12,67,38,"prevIndex"],[103,21,67,47],[103,23,67,49,"index"],[104,0,67,9],[105,0,67,9],[105,9,66,18],[105,11,68,5,"sort"],[105,15,66,18],[105,16,68,10],[105,26,68,11,"list"],[105,30,68,10],[105,32,68,17,"_list"],[105,37,68,10],[105,39,68,27],[106,0,69,5],[106,14,69,9,"list"],[106,18,69,13],[106,19,69,14,"value"],[106,24,69,9],[106,27,69,22,"_list"],[106,32,69,27],[106,33,69,28,"value"],[106,38,69,5],[106,40,69,35],[106,47,69,42],[106,48,69,35],[107,0,70,5],[107,14,71,6,"list"],[107,18,71,10],[107,19,71,11,"value"],[107,24,71,6],[107,29,71,21,"_list"],[107,34,71,26],[107,35,71,27,"value"],[107,40,71,6],[107,44,72,6,"list"],[107,48,72,10],[107,49,72,11,"prevIndex"],[107,58,72,6],[107,61,72,23,"_list"],[107,66,72,28],[107,67,72,29,"prevIndex"],[107,76,70,5],[107,78,74,6],[107,85,74,13],[107,86,74,6],[107,87,70,5],[107,92,75,10],[107,99,75,17],[107,100,75,18],[107,101,75,10],[108,0,76,5],[108,9,66,18],[108,10,66,3],[109,0,77,3,"setTransitionList"],[109,8,77,3,"setTransitionList"],[109,25,77,20],[109,26,77,21,"listtt"],[109,32,77,20],[109,33,77,3],[111,0,78,3,"Animated"],[111,30,78,12,"timing"],[111,36,78,3],[111,37,78,19,"animatedTranslateValue"],[111,59,78,3],[111,61,78,43],[112,0,79,4,"toValue"],[112,10,79,4,"toValue"],[112,17,79,11],[112,19,79,13],[112,20,78,43],[113,0,80,4,"duration"],[113,10,80,4,"duration"],[113,18,80,12],[113,20,80,14],[114,0,78,43],[114,9,78,3],[114,11,81,6,"start"],[114,16,78,3],[114,17,81,12],[115,0,81,12],[115,17,82,4,"Animated"],[115,39,82,13,"timing"],[115,45,82,4],[115,46,82,20,"animatedTranslateValue"],[115,68,82,4],[115,70,82,44],[116,0,83,5,"toValue"],[116,12,83,5,"toValue"],[116,19,83,12],[116,21,83,14],[116,22,82,44],[117,0,84,5,"duration"],[117,12,84,5,"duration"],[117,20,84,13],[117,22,84,15],[118,0,82,44],[118,11,82,4],[118,13,85,7,"start"],[118,18,82,4],[118,19,85,13],[118,31,85,19],[119,0,86,5],[119,16,86,9,"changed"],[119,23,86,5],[119,25,86,18],[120,0,87,6,"startScaleAnimation"],[120,14,87,6,"startScaleAnimation"],[120,33,87,25],[120,34,87,26],[120,39,87,25],[120,40,87,6],[121,0,88,6],[122,0,89,5],[122,11,82,4],[122,12,81,12],[123,0,81,12],[123,9,78,3],[124,0,91,3],[125,0,92,2],[127,0,94,1],[127,13,94,10,"getTranslation"],[127,27,94,1],[127,28,94,25,"index"],[127,33,94,1],[127,35,94,32,"prevIndex"],[127,44,94,1],[127,46,94,43],[128,0,95,2],[128,10,95,6,"index"],[128,15,95,11],[128,18,95,14,"prevIndex"],[128,27,95,2],[128,29,95,25],[129,0,96,3],[129,15,96,10],[129,16,97,4],[130,0,98,5,"translateY"],[130,10,98,5,"translateY"],[130,20,98,15],[130,22,98,17,"animatedTranslateValue"],[130,44,98,39],[130,45,98,40,"interpolate"],[130,56,98,17],[130,57,98,52],[131,0,99,6,"inputRange"],[131,12,99,6,"inputRange"],[131,22,99,16],[131,24,99,18],[131,25,99,19],[131,26,99,18],[131,28,99,22],[131,29,99,18],[131,30,98,52],[132,0,100,6,"outputRange"],[132,12,100,6,"outputRange"],[132,23,100,17],[132,25,100,19],[132,26,100,20],[132,27,100,19],[132,29,100,23],[132,30,100,24,"height"],[132,36,100,23],[132,40,100,34,"prevIndex"],[132,49,100,43],[132,52,100,46,"index"],[132,57,100,23],[132,58,100,19],[133,0,98,52],[133,11,98,17],[134,0,97,4],[134,9,96,10],[134,10,96,3],[135,0,104,3],[137,0,105,2],[137,10,105,6,"index"],[137,15,105,11],[137,18,105,14,"prevIndex"],[137,27,105,2],[137,29,105,25],[138,0,106,3],[138,15,106,10],[138,16,107,4],[139,0,108,5,"translateY"],[139,10,108,5,"translateY"],[139,20,108,15],[139,22,108,17,"animatedTranslateValue"],[139,44,108,39],[139,45,108,40,"interpolate"],[139,56,108,17],[139,57,108,52],[140,0,109,6,"inputRange"],[140,12,109,6,"inputRange"],[140,22,109,16],[140,24,109,18],[140,25,109,19],[140,26,109,18],[140,28,109,22],[140,29,109,18],[140,30,108,52],[141,0,110,6,"outputRange"],[141,12,110,6,"outputRange"],[141,23,110,17],[141,25,110,19],[141,26,110,20],[141,27,110,19],[141,29,110,23,"height"],[141,35,110,29],[141,39,110,33,"index"],[141,44,110,38],[141,47,110,41,"prevIndex"],[141,56,110,29],[141,57,110,19],[142,0,108,52],[142,11,108,17],[143,0,107,4],[143,9,106,10],[143,10,106,3],[144,0,114,3],[146,0,115,2],[147,0,116,2],[149,0,118,1],[149,11,119,2],[149,40,119,3],[149,57,119,2],[150,0,120,3],[150,6,120,3],[150,11,120,8],[150,13,120,10],[151,0,121,4,"marginTop"],[151,8,121,4,"marginTop"],[151,17,121,13],[151,19,121,15],[151,22,120,10],[152,0,122,4,"marginLeft"],[152,8,122,4,"marginLeft"],[152,18,122,14],[152,20,122,16],[152,23,120,10],[153,0,123,4,"postion"],[153,8,123,4,"postion"],[153,15,123,11],[153,17,123,13],[153,27,120,10],[154,0,124,4,"width"],[154,8,124,4,"width"],[154,13,124,9],[154,15,124,11],[154,20,120,10],[155,0,125,4,"height"],[155,8,125,4,"height"],[155,14,125,10],[155,16,125,12],[156,0,120,10],[156,7,119,2],[157,0,119,2],[158,0,119,2],[159,0,119,2],[160,0,119,2],[161,0,119,2],[161,7,128,4,"transitionList"],[161,21,128,18],[161,22,129,5,"sort"],[161,26,128,4],[161,27,129,10],[161,37,129,11,"list"],[161,41,129,10],[161,43,129,17,"_list"],[161,48,129,10],[161,50,129,27],[162,0,130,5],[162,10,130,9,"list"],[162,14,130,13],[162,15,130,14,"value"],[162,20,130,9],[162,23,130,22,"_list"],[162,28,130,27],[162,29,130,28,"value"],[162,34,130,5],[162,36,130,35],[162,43,130,42],[162,44,130,35],[163,0,131,5],[163,10,132,6,"list"],[163,14,132,10],[163,15,132,11,"value"],[163,20,132,6],[163,25,132,21,"_list"],[163,30,132,26],[163,31,132,27,"value"],[163,36,132,6],[163,40,133,6,"list"],[163,44,133,10],[163,45,133,11,"prevIndex"],[163,54,133,6],[163,57,133,23,"_list"],[163,62,133,28],[163,63,133,29,"prevIndex"],[163,72,131,5],[163,74,135,6],[163,81,135,13],[163,82,135,6],[163,83,131,5],[163,88,136,10],[163,95,136,17],[163,96,136,18],[163,97,136,10],[164,0,137,5],[164,5,128,4],[164,7,138,5,"map"],[164,10,128,4],[164,11,138,9],[164,21,138,10,"list"],[164,25,138,9],[164,27,138,16,"index"],[164,32,138,9],[165,0,138,9],[165,13,139,5],[165,42,139,6],[165,63,139,5],[165,64,139,15],[165,68,139,5],[166,0,140,6],[166,8,140,6],[166,11,140,9],[166,13,140,11,"index"],[166,18,139,5],[167,0,141,6],[167,8,141,6],[167,13,141,11],[167,15,141,13],[168,0,142,7,"width"],[168,10,142,7,"width"],[168,15,142,12],[168,17,142,14,"list"],[168,21,142,18],[168,22,142,19,"value"],[168,27,142,14],[168,30,142,27],[168,32,141,13],[169,0,143,7,"height"],[169,10,143,7,"height"],[169,16,143,13],[169,18,143,15,"height"],[169,24,141,13],[170,0,144,7,"position"],[170,10,144,7,"position"],[170,18,144,15],[170,20,144,17],[170,30,141,13],[171,0,145,7,"top"],[171,10,145,7,"top"],[171,13,145,10],[171,15,146,8,"height"],[171,21,146,14],[171,25,146,18,"list"],[171,29,146,22],[171,30,146,23,"prevIndex"],[171,39,146,18],[171,42,146,35],[171,43,146,14],[171,44,146,8],[171,48,147,8,"height"],[171,54,147,14],[171,58,147,18,"index"],[171,63,147,23],[171,66,147,26],[171,67,147,14],[171,68,141,13],[172,0,148,7,"backgroundColor"],[172,10,148,7,"backgroundColor"],[172,25,148,22],[172,27,148,24,"list"],[172,31,148,28],[172,32,148,29,"color"],[172,37,141,13],[173,0,149,7,"transform"],[173,10,149,7,"transform"],[173,19,149,16],[173,21,149,18,"getTranslation"],[173,35,149,32],[173,36,149,33,"index"],[173,41,149,32],[173,43,149,40,"list"],[173,47,149,44],[173,48,149,45,"prevIndex"],[173,57,149,32],[174,0,141,13],[174,9,139,5],[175,0,139,5],[176,0,139,5],[177,0,139,5],[178,0,139,5],[179,0,139,5],[179,9,152,6],[179,38,152,7],[179,55,152,6],[180,0,152,6],[181,0,152,6],[182,0,152,6],[183,0,152,6],[184,0,152,6],[184,9,153,8,"list"],[184,13,153,12],[184,14,153,13,"text"],[184,18,152,6],[184,25,153,20,"list"],[184,29,153,24],[184,30,153,25,"value"],[184,35,152,6],[184,36,139,5],[184,37,138,9],[185,0,138,9],[185,5,128,4],[185,6,119,2],[185,7,118,1],[186,0,159,1],[188,5,29,24,"DynamicList"],[188,16],[190,7,29,24,"DynamicList"],[190,18]],"functionMap":{"names":["<global>","DynamicList","oldList.sort$argument_0","useEffect$argument_0","transitionList.map$argument_0","startScaleAnimation","transitionList.sort$argument_0","newList.find$argument_0","newTransitionList.map$argument_0","newTransitionList.map.sort$argument_0","Animated.timing.start$argument_0","getTranslation","transitionList.sort.map$argument_0"],"mappings":"AAA;eC4B;eCI;GDE;WEI;+CCC;IDG;EFG;CIE;gDCC;GDK;iBEI,+CF;SGS,gDH;UIC;KJQ;YKK;MLQ;EJG;CUE;EVsB;UKa;KLQ;SWC;KXkB;CDG"}},"type":"js/module"}]}